{"version":3,"sources":["useEventListener.js","components/ShowError.js","time.js","useInterval.js","components/GrouppedList.js","components/TimeSinceLastFeeding.js","ProfileContext.js","routing.js","components/Layout.js","queries/getEntries.js","queries/getEntry.js","queries/createEntry.js","queries/updateEntry.js","queries/removeEntry.js","queries/getSpaces.js","queries/createSpace.js","components/List.js","components/SpaceSelector.js","components/SignInForm.js","utils.js","components/EntryPage.js","components/NotFound.js","AuthLink.js","client.js","App.js","serviceWorker.js","index.js"],"names":["global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","useEventListener","eventName","handler","element","arguments","length","undefined","savedCallback","React","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","reason","networkError","result","errors","slice","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","useInterval","callback","delay","id","setInterval","clearInterval","item","opacity","root","background","paper","subheader","color","common","black","textAlign","subheader_total","float","time_column","flex","marginRight","source_column","useIconStyles","icon_wrapper","display","flexDirection","fontSize","bottle_icon","icon_container","small_icon","SuggestedListItem","time","key","count","setCount","now","date","ListItem","ListItemText","primary","secondary","IconGroup","_ref2","icons","type","extra_food","ChildCare_default","Fragment","Opacity_default","join","ListItemIcon","breastFeedingSourceMap","left","right","both","none","GrouppedList","_ref3","groupedEntries","List","disablePadding","entries","map","_ref5","_ref6","group","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","filter","_ref4","isSuggested","getTotalEntries","_ref7","meantime","source","GrouppedList_SuggestedListItem","GrouppedList_IconGroup","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","info","main","messageBox","marginBottom","position","top","zIndex","alignItems","icon","spacing","SnackbarContentWrapper","props","variant","children","aria-describedby","Info_default","Warning_default","TimeSinceLastFeeding","lastFeedingTime","nextFeedingTime","infoText","Typography","TimeSinceLastFeeding_SnackbarContentWrapper","class","ProfileContext","createContext","getRoute","pattern","path","_len","params","Array","_key","generatePath","apply","HomePage","SelectPage","SpacePage","EditPage","appBar","avatar","margin","width","height","marginLeft","toolbar","paddingLeft","Layout","toolbarIcon","profile","useContext","_React$useState","_React$useState2","anchorEl","setAnchorEl","AppBar","Toolbar","disableGutters","Avatar","alt","src","imageUrl","aria-controls","aria-haspopup","onClick","currentTarget","Menu","getContentAnchorEl","keepMounted","Boolean","MenuItem","RouterLink","Box","my","GET_ENTRIES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","CREATE_ENTRY","createEntry_templateObject","UPDATE_ENTRY_TIME","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","GET_SPACES","getSpaces_templateObject","CREATE_SPACE","createSpace_templateObject","fab","bottom","listWrapper","marginTop","EntryList","match","spaceId","_useQuery","useQuery","variables","loading","data","refetch","hasData","onChange","useCallback","document","hidden","_useMutation","useMutation","refetchQueries","_useMutation2","createEntry","_useMutation2$","creationLoading","creationError","reverse","reduce","acc","entry","last","toConsumableArray","objectSpread","theMostRecent","theMostRecentDate","getHours","nextEntryInMinutes","unshift","Math","round","addMinutes","day","startOfDay","getTime","push","components_Layout","components_ShowError","Container","maxWidth","Fab","disabled","Add_default","components_TimeSinceLastFeeding","Paper","components_GrouppedList","CircularProgress","SpaceSelector","name","createSpace","spaces","space","divider","button","display_name","minHeight","loader","SignInForm","onLogin","responseGoogle","response","setLoading","timeout","setTimeout","clearTimeout","google_login","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","debounce","fn","nextTask","pending","args","execute","then","toCall","createStyles","padding","updateGetEntriesCache","store","listData","readQuery","query","e","writeQuery","EntryPage","_React$createElement","update","removeEntry","removedId","mutationData","setDate","_useState3","_useState4","extraFood","setExtraFood","_useState5","_useState6","isBottleOnly","setIsBottleOnly","_useState7","_useState8","breastFeedingSource","setBreastFeedingSource","client","useApolloClient","updateEntry","mutate","mutation","sort","e1","e2","updateDate","getFeedingType","extraFoodInput","isBottleOnlyInput","react_router","backButton","react_router_dom","assign","ArrowBack_default","Grid","container","direction","justify","xs","md","paragraph","size","addDays","subDays","Remove_default","addHours","subHours","subMinutes","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","value","updateExtraFood","FormControlLabel","control","Checkbox","checked","target","entryType","label","defineProperty","ToggleButtonGroup","exclusive","ToggleButton","Button","NotFound","AuthLink","_ApolloLink","user","token","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","operation","setContext","headers","authorization","_this2","Promise","resolve","reloadAuthResponse","res","id_token","forward","_this3","setTokenHeader","Observable","observer","subscription","innerSubscription","subscribe","next","bind","complete","statusCode","refreshToken","success","Error","unsubscribe","ApolloLink","getClient","httpLink","createHttpLink","uri","process","authLink","tokenId","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","_","getCacheKey","__typename","link","RememberSpace","write","App","storage","read","lastSpaceId","setUser","src_ProfileContext","Provider","profileObj","ApolloContext","exact","render","components_SpaceSelector","App_RememberSpace","components_List","components_EntryPage","components_SignInForm","window","location","hostname","ReactDOM","src_App","JSON","parse","localStorage","getItem","setItem","stringify","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3f8c92f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction useEventListener(eventName, handler, element = global) {\n  const savedCallback = React.useRef();\n\n  React.useEffect(() => {\n    savedCallback.current = handler;\n  }, [handler]);\n\n  React.useEffect(() => {\n    // Make sure element supports addEventListener\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) {\n      return;\n    }\n\n    const eventListener = event => savedCallback.current(event);\n\n    element.addEventListener(eventName, eventListener);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n\nexport default useEventListener;\n","import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n if (message.networkError\n   && message.networkError.result\n   && message.networkError.result.errors\n   && message.networkError.result.errors.length > 0) {\n    message = message.networkError.result.errors[0].message.slice(0, 100)\n }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (hours < 1) {\n    return `${minutes}min`\n  }\n\n  return `${hours}h ${minutes}min`\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useState } from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { ListItemIcon, IconButton } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\nimport BottleFeedingIcon from '@material-ui/icons/Opacity'\nimport BreastFeedingIcon from '@material-ui/icons/ChildCare'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatElapsedTime, formatTime } from '../time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { useInterval } from '../useInterval'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#f0f2fa',\n    color: theme.palette.common.black,\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  },\n  time_column: {\n    flex: 'initial',\n    marginRight: 35\n  },\n  source_column: {\n    color: '#644889',\n  }\n}))\n\nconst useIconStyles = makeStyles({\n  icon_wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 12,\n    marginRight: 5\n  },\n  bottle_icon: {\n    color: '#24a0ff'\n  },\n  icon_container: {\n    display: 'flex'\n  },\n  small_icon: {\n    fontSize: '1rem'\n  }\n})\n\nconst SuggestedListItem = ({time, key}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const classes = useStyles()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={classes.item}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nconst IconGroup = ({ type, extra_food }) => {\n  const classes = useIconStyles()\n\n  let icons;\n  switch (type) {\n    case 'breast':\n      icons = (\n        <BreastFeedingIcon/>\n      )\n      break;\n    case 'bottle':\n      icons = (\n        <>\n          <BottleFeedingIcon className={classes.bottle_icon}/> {extra_food}ml\n        </>\n      )\n      break;\n    case 'mixed':\n      icons = (\n        <>\n          <div className={classes.icon_container}>\n            <BreastFeedingIcon className={classes.small_icon}/>\n            <BottleFeedingIcon className={[classes.bottle_icon, classes.small_icon].join(' ')}/>\n          </div>\n          <span>{extra_food}ml</span>\n        </>\n      )\n      break;\n  }\n\n  return (\n    <ListItemIcon>\n      <div className={classes.icon_wrapper}>\n        {icons}\n      </div>\n    </ListItemIcon>\n  )\n}\n\nconst breastFeedingSourceMap = {\n  left: 'L',\n  right: 'R',\n  both: 'LR',\n  none: ''\n}\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => (\n          <CSSTransitionGroup\n            key={timestamp}\n            transitionName=\"example\"\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}>\n            <ListSubheader className={classes.subheader}>\n              {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n              <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n            </ListSubheader>\n\n            {group.map(({id, time, extra_food, type, meantime, source, isSuggested}) => {\n\n\n              return isSuggested\n                  ? <SuggestedListItem key={id} time={time}/>\n                  : <ListItem key={id}>\n                      <IconGroup type={type} extra_food={extra_food}/>\n\n                      <ListItemText secondary={meantime} className={classes.time_column}>\n                        {formatTime(time * 1000)}\n                      </ListItemText>\n                      <ListItemText className={classes.source_column}>\n                        {breastFeedingSourceMap[source]}\n                      </ListItemText>\n                      <ListItemSecondaryAction>\n                        {\n                          (now - time * 1000 < A_DAY) &&\n                          <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                            <Edit/>\n                          </IconButton>\n                        }\n                      </ListItemSecondaryAction>\n                    </ListItem>\n              }\n            )}\n          </CSSTransitionGroup>\n        ))\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import React, { useState } from 'react'\nimport InfoIcon from '@material-ui/icons/Info'\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles'\nimport {SnackbarContent, Typography} from '@material-ui/core'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nimport {formatElapsedTime} from '../time'\nimport {useInterval} from '../useInterval';\n\nconst useStyles = makeStyles(theme => ({\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  messageBox: {\n    marginBottom: 20,\n    position: 'sticky',\n    top: 70,\n    zIndex:10\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  }\n}));\n\nconst SnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n  const { variant, children } = props;\n\n  return (\n    <SnackbarContent\n      className={[classes[variant], classes.messageBox].join(' ')}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {\n            variant === 'info'\n            ? <InfoIcon className={classes.icon}/>\n            : <WarningIcon className={classes.icon}/>\n          }\n          {children}\n        </span>\n      }\n    />\n  );\n}\n\n\n\nconst TimeSinceLastFeeding = ({lastFeedingTime, nextFeedingTime}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 30 * 1000)\n\n  const infoText = differenceInMinutes(new Date(), new Date(lastFeedingTime)) > 5\n  ? <>It's been&nbsp;<Typography variant=\"subtitle1\" component=\"span\">{formatElapsedTime(new Date(), new Date(lastFeedingTime))}</Typography>&nbsp;since last feeding </>\n  : <>Feeding in progress</>\n\n  return <SnackbarContentWrapper\n    class='mui-fixed'\n    variant={Date.now() > nextFeedingTime ? 'error' : 'info'}>\n    {infoText}\n  </SnackbarContentWrapper>\n}\n\nexport default TimeSinceLastFeeding\n","import React from 'react'\n\nconst ProfileContext = React.createContext(null)\n\nexport default ProfileContext\n","import { generatePath } from 'react-router'\n\nconst getRoute= (pattern) => {\n  return {\n    pattern,\n    path: (...params) => generatePath(pattern, ...params)\n  }\n}\n\nexport const HomePage = getRoute('/')\nexport const SelectPage = getRoute('/select')\nexport const SpacePage = getRoute('/space/:id')\nexport const EditPage =  getRoute('/edit/:id')\n\n\n","import React, { useContext } from 'react'\n\nimport {\n  AppBar,\n  Avatar,\n  Toolbar,\n  Typography,\n  Box,\n  Menu,\n  MenuItem\n} from '@material-ui/core'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport {makeStyles} from '@material-ui/core/styles'\nimport ProfileContext from '../ProfileContext'\n\nimport { SelectPage } from '../routing'\n\nconst useStyles = makeStyles({\n  appBar: {\n    backgroundColor: '#3e4451',\n  },\n  avatar: {\n    margin: 15,\n    width: 40,\n    height: 40,\n    marginLeft: 'auto'\n  },\n  toolbar: {\n    height: 70,\n    paddingLeft: 15\n  },\n})\n\nconst Layout = ({toolbarIcon, children}) => {\n  const classes = useStyles()\n  const profile = useContext(ProfileContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return <>\n    <AppBar className={classes.appBar}>\n      <Toolbar disableGutters={true} className={classes.toolbar}>\n        {toolbarIcon}\n\n        <Typography variant='h5'>\n          Food time\n        </Typography>\n\n        {profile &&\n          <>\n            <Avatar alt=\"Profile picture\"\n                    src={profile.imageUrl}\n                    aria-controls='user-menu'\n                    aria-haspopup='true'\n                    className={classes.avatar}\n                    onClick={handleClick}/>\n            <Menu\n              id='user-menu'\n              anchorEl={anchorEl}\n              anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n              getContentAnchorEl={null}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem component={RouterLink} to={SelectPage.path()} onClick={handleClose}>Spaces</MenuItem>\n            </Menu>\n          </>\n        }\n      </Toolbar>\n    </AppBar>\n\n    <Toolbar className={classes.toolbar}/>\n\n    <Box my={2}>\n    {children}\n    </Box>\n  </>\n}\n\nexport default Layout\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTRIES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n      extra_food\n      spaceId\n      type  \n      vitamin\n      source\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n      spaceId\n      type \n      vitamin\n      source  \n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n      type  \n      vitamin\n      source\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY_TIME = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int, $type: String, $vitamin: Boolean, $source: String) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food, type: $type, vitamin: $vitamin, source: $source) {\n      id\n      time\n      extra_food\n      type  \n      vitamin\n      source\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const GET_SPACES = gql`\n  query getSpaces {\n    spaces {\n      id\n      display_name\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const CREATE_SPACE = gql`\n  mutation CreateSpace($name: String!) {\n    createSpace(name: $name) {\n      id\n      display_name\n    }\n  }\n`\n","import React from 'react'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\n\nimport AddIcon from '@material-ui/icons/Add'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Fab\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\nimport TimeSinceLastFeeding from './TimeSinceLastFeeding'\nimport Layout from './Layout'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from '../time'\n\nimport { GET_ENTRIES, CREATE_ENTRY } from '../queries'\nimport useEventListener from '../useEventListener'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  },\n  listWrapper: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\n\nfunction EntryList({match}) {\n  const classes = useStyles();\n\n  const spaceId = match.params.id\n\n  const { loading, data, error, refetch } = useQuery(GET_ENTRIES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const onChange = React.useCallback(() => {\n    if (document.hidden === false) {\n      refetch()\n    }\n  }, [refetch])\n\n  useEventListener('visibilitychange', onChange, document)\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const entries = hasData && data.entries.slice().reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n  if (entries.length > 0) {\n    const theMostRecent = entries[0]\n    const theMostRecentDate = new Date(theMostRecent.time * 1000)\n    const hours = theMostRecentDate.getHours()\n    const isLate = (hours >= 21 || hours < 3)\n    const nextEntryInMinutes = isLate ? 210 : 150\n\n    entries.unshift({\n      id: 'future',\n      time: Math.round(addMinutes(theMostRecentDate, nextEntryInMinutes) / 1000),\n      extra_food: 0,\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n\n  return (\n    <Layout>\n      { (error || creationError) && <ShowError message={error || creationError} /> }\n\n      <Container className={classes.listWrapper} maxWidth=\"sm\">\n        <Fab variant='extended' color='primary' aria-label=\"delete\" className={classes.fab} onClick={onAddEntry} disabled={creationLoading}>\n          <AddIcon />\n          New feeding\n        </Fab>\n\n        { !loading && data && data.entries.length > 0 &&\n          <TimeSinceLastFeeding lastFeedingTime={entries[1].time * 1000} nextFeedingTime={entries[0].time * 1000}/>\n        }\n\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary='Click the button to start measuring intervals' />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n        { loading && <CircularProgress /> }\n      </Container>\n    </Layout>\n  )\n}\n\nexport default EntryList;\n","import React from 'react'\n\nimport {\n  CircularProgress,\n  Container,\n  Paper,\n  Fab,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Layout from './Layout'\nimport { SpacePage } from '../routing'\n\nimport { GET_SPACES, CREATE_SPACE } from '../queries'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  }\n}))\n\nfunction SpaceSelector() {\n  const classes = useStyles()\n\n  const { loading, data, error } = useQuery(GET_SPACES)\n\n  const [createSpace, {loading: creationLoading, error: creationError}] = useMutation(CREATE_SPACE, {\n    variables: {name: 'New space'},\n    refetchQueries: ['getSpaces']\n  })\n\n  return (<Layout>\n    <Container maxWidth=\"sm\">\n      <Fab variant='extended' color='primary' aria-label=\"New space\" className={classes.fab} onClick={createSpace} disabled={creationLoading}>\n        <AddIcon/>\n        New space\n      </Fab>\n\n      { loading && <CircularProgress/>}\n      { !loading &&\n        <Paper>\n          <List disablePadding={true}>\n            <CSSTransitionGroup\n              transitionName=\"example\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}>\n              { data.spaces.map(space => (\n                <ListItem key={space.id} divider button component={RouterLink} to={SpacePage.path({id: space.id})}>\n                  <ListItemText>{space.display_name}</ListItemText>\n                </ListItem>\n              ))}\n            </CSSTransitionGroup>\n          </List>\n        </Paper>\n      }\n    </Container>\n  </Layout>)\n}\n\nexport default SpaceSelector\n","import React, { useState, useEffect } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { CircularProgress } from '@material-ui/core'\n\nimport Layout from './Layout'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    minHeight: 40\n  },\n  loader: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: -3,\n    bottom: -5,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n})\n\nconst SignInForm = ({ onLogin }) => {\n  const classes = useStyles()\n\n  const responseGoogle = (response) => {\n    onLogin(response)\n  }\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setLoading(false)\n    }, 1500)\n\n    return () => clearTimeout(timeout)\n  })\n\n  return  <Layout>\n    <div className={classes.root}>\n      { loading && <div className={classes.loader}><CircularProgress /></div> }\n      <GoogleLogin\n        clientId='299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com'\n        buttonText='Login'\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        isSignedIn={true}\n        cookiePolicy='single_host_origin'\n      />\n    </div>\n  </Layout>\n}\n\nexport default SignInForm\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect, Link as RouterLink } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Fab,\n  Paper,\n  CircularProgress,\n  Typography,\n  Grid,\n  Slider,\n  IconButton\n} from '@material-ui/core'\n\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Layout from './Layout'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { formatTime, formatDay } from '../time'\nimport { debounce } from '../utils'\n\nimport { SpacePage } from '../routing'\n\nimport {\n  GET_ENTRIES,\n  GET_ENTRY,\n  UPDATE_ENTRY_TIME,\n  REMOVE_ENTRY\n} from '../queries'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n  }),\n)\n\nconst updateGetEntriesCache = (store, spaceId, fn) => {\n  let listData = null\n\n  try {\n    listData = store.readQuery({query: GET_ENTRIES, variables: {spaceId}})\n  } catch (e) {\n    // Reading error, do nothing\n  }\n\n  if (!listData) {\n    return\n  }\n\n  store.writeQuery({\n    query: GET_ENTRIES, variables: {spaceId}, data: {\n      entries: fn(listData.entries)\n\n    }\n  })\n}\n\nfunction EntryPage({match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const spaceId = data && data.entry.spaceId\n\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      updateGetEntriesCache(store, spaceId, (entries) => {\n        return entries.filter(entry => {\n          return entry.id !== removeEntry.removedId\n        })\n      })\n    },\n  })\n\n  const [date, setDate] = useState(null)\n  const [extraFood, setExtraFood] = useState(null)\n  const [isBottleOnly, setIsBottleOnly] = useState(null)\n  const [breastFeedingSource, setBreastFeedingSource] = useState(null)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY_TIME,\n      variables: {\n        id,\n        ...variables\n      },\n      update: (store) => {\n        updateGetEntriesCache(store, spaceId, (entries) => {\n          return entries.sort((e1, e2) => e2.time - e1.time)\n        })\n      }\n    })\n  }), [client, id])\n\n  if (date === null && !loading) {\n    setDate(new Date(data.entry.time * 1000))\n  }\n\n  if (extraFood === null && !loading) {\n    setExtraFood(data.entry.extra_food)\n  }\n\n  if (isBottleOnly === null && !loading) {\n    setIsBottleOnly(data.entry.type === 'bottle')\n  }\n\n  if (breastFeedingSource === null && !loading) {\n    setBreastFeedingSource(data.entry.source)\n  }\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const getFeedingType = (extraFoodInput, isBottleOnlyInput) => {\n    if (extraFoodInput === 0) {\n      return 'breast'\n    }\n\n    return isBottleOnlyInput\n      ? 'bottle'\n      : 'mixed'\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    setIsBottleOnly(true)\n\n    updateEntry({\n      extra_food: value,\n      type: getFeedingType(value, true)\n    })\n  }\n\n  const updateFeedingType = event => {\n    const { checked } = event.target\n    setIsBottleOnly(checked)\n\n    const entryType = getFeedingType(extraFood, checked)\n\n    updateEntry({\n      type: entryType\n    })\n  }\n\n  const updateBreastFeedingSource = (event, source) => {\n    setBreastFeedingSource(source)\n    updateEntry({\n      source\n    })\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to={SpacePage.path({id: spaceId})}/>\n  }\n\n  const backButton = spaceId && (\n    <IconButton\n    edge='start'\n    color='inherit'\n    component={props => <RouterLink {...props} to={SpacePage.path({id: spaceId})}/>}>\n      <ArrowBackIcon/>\n    </IconButton>\n  )\n\n  return (\n    <Layout toolbarIcon={backButton}>\n      <header className=\"App-header\">\n        { !loading &&\n          <Typography variant='h5'>\n            {formatTime(date)} {formatDay(date)}\n          </Typography>\n        }\n      </header>\n\n      <Container maxWidth=\"sm\">\n        {\n          loading\n            ? <CircularProgress/>\n            : <Grid container spacing={2} direction='row' justify='center'>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Day\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addDays(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subDays(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Hours\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addHours(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subHours(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Minutes\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addMinutes(date, 5))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subMinutes(date, 5))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Extra food - {extraFood}ml\n                  </Typography>\n\n                  <Slider\n                    defaultValue={extraFood}\n                    aria-labelledby='discrete-slider'\n                    valueLabelDisplay='off'\n                    step={5}\n                    min={0}\n                    max={150}\n                    onChange={(e, value) => updateExtraFood(value)}\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={isBottleOnly}\n                        onChange={updateFeedingType}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Bottle only\"\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Breast feeding source\n                  </Typography>\n\n                  <ToggleButtonGroup value={breastFeedingSource} exclusive onChange={updateBreastFeedingSource}>\n                    <ToggleButton value=\"left\">Left</ToggleButton>\n                    <ToggleButton value=\"right\">Right</ToggleButton>\n                    <ToggleButton value=\"both\">Both</ToggleButton>\n                    <ToggleButton value=\"none\">None</ToggleButton>\n                  </ToggleButtonGroup>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Danger zone\n                  </Typography>\n\n                  <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n                </Paper>\n              </Grid>\n            </Grid>\n        }\n\n      </Container>\n    </Layout>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import {ApolloLink, Observable} from 'apollo-link'\n\nexport class AuthLink extends ApolloLink {\n  constructor(user,token) {\n    super()\n    this.token = token\n    this.user = user\n  }\n\n  setTokenHeader(operation) {\n    operation.setContext({ headers: { authorization: `Bearer ${this.token}` } })\n  }\n\n  refreshToken() {\n    return new Promise(resolve => {\n      this.user.reloadAuthResponse()\n        .then(res => {\n          this.token = res.id_token\n          resolve(true)\n        })\n    })\n  }\n\n  request(operation, forward) {\n    this.setTokenHeader(operation)\n\n    return new Observable(observer => {\n      let subscription, innerSubscription;\n      try {\n        subscription = forward(operation).subscribe({\n          next: observer.next.bind(observer),\n          complete: observer.complete.bind(observer),\n          error: networkError => {\n            if (networkError.statusCode === 400) {\n              this.refreshToken().then(success => {\n                if (success) {\n                  this.setTokenHeader(operation)\n                  innerSubscription = forward(operation).subscribe(observer)\n                } else {\n                  observer.error(new Error('refreshing token failed'))\n                }\n              });\n            } else {\n              observer.error(networkError)\n            }\n          },\n        });\n      } catch (e) {\n        observer.error(e)\n      }\n\n      return () => {\n        if (subscription) subscription.unsubscribe()\n        if (innerSubscription) innerSubscription.unsubscribe()\n      }\n    })\n  }\n}\n","import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { AuthLink } from './AuthLink'\n\nexport default function getClient(user) {\n  const httpLink = createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n\n  const authLink = new AuthLink(user, user.tokenId)\n\n  return new ApolloClient({\n    cache: new InMemoryCache({\n      cacheRedirects: {\n        Query: {\n          entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n        },\n      },\n    }),\n    link: authLink.concat(httpLink)\n  })\n}\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n\nimport EntryList from './components/List'\nimport SpaceSelector from './components/SpaceSelector'\nimport SignInForm from './components/SignInForm'\nimport EntryPage from './components/EntryPage'\nimport NotFound from './components/NotFound'\nimport ProfileContext from './ProfileContext'\nimport getClient from './client'\nimport './App.css'\nimport {HomePage, SelectPage, EditPage, SpacePage} from './routing'\n\nconst RememberSpace = ({match, write, children}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    write(id)\n  }, [write, id])\n\n  return children\n}\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const { read, write } = storage\n\n  const lastSpaceId = read(storageKey)\n\n  const [user, setUser] = useState(null)\n\n  return (\n    <ProfileContext.Provider value={user && user.profileObj}>\n      <div className='App'>\n        <HashRouter>\n          <Switch>\n            {\n              user ?\n                <ApolloProvider client={getClient(user)}>\n                  <Switch>\n\n                    <Route exact path={SelectPage.pattern} render={props => <SpaceSelector {...props} />} />\n                    <Route path={SpacePage.pattern} render={\n                      props =>\n                        <RememberSpace write={id => write(storageKey, id)} match={props.match}>\n                          <EntryList {...props} profile={user.profileObj} />\n                        </RememberSpace>}\n                    />\n                    <Route path={EditPage.pattern} render={props => <EntryPage {...props} />} />\n\n                    <Route exact path={HomePage.pattern}>\n                      { lastSpaceId\n                        ? <Redirect to={SpacePage.path({id: lastSpaceId})}/>\n                        : <Redirect to={SelectPage.path()}/>\n                      }\n                    </Route>\n\n                  </Switch>\n              </ApolloProvider> :\n              <Route path={HomePage.pattern} render={props => <SignInForm {...props} onLogin={user => {\n                setUser(user)\n              }}/>} />\n            }\n            <Route component={NotFound} />\n          </Switch>\n        </HashRouter>\n      </div>\n    </ProfileContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(<App storage={{read, write}}/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}