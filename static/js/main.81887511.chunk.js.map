{"version":3,"sources":["components/ShowError.js","time.js","components/GrouppedList.js","useInterval.js","queries/getEntries.js","queries/getEntry.js","queries/updateEntry.js","queries/removeEntry.js","components/List.js","components/SpaceSelector.js","components/SignInForm.js","utils.js","components/EntryPage.js","components/NotFound.js","client.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","event","reason","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","item","opacity","root","background","paper","subheader","textAlign","subheader_total","float","icon","flexDirection","fontSize","SuggestedListItem","time","key","count","setCount","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","now","date","ListItem","ListItemText","primary","secondary","GrouppedList","_ref2","groupedEntries","List","disablePadding","entries","map","_ref4","_ref5","group","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","filter","_ref3","isSuggested","length","getTotalEntries","_ref6","extra_food","meantime","GrouppedList_SuggestedListItem","ListItemIcon","Fragment","Opacity_default","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","GET_ENTIRES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","UPDATE_ENTRY_TIME","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","CREATE_ENTRY","List_templateObject","appBar","avatar","margin","width","height","toolbar","justifyContent","title","fab","position","bottom","spacing","right","zIndex","listWrapper","marginTop","EntryList","spaceId","profile","_useQuery","useQuery","variables","loading","data","hasData","_useMutation","useMutation","refetchQueries","_useMutation2","createEntry","_useMutation2$","creationLoading","creationError","sortedDataEntries","slice","sort","e1","e2","reverse","reduce","acc","entry","last","toConsumableArray","objectSpread","theMostRecent","theMostRecentDate","getHours","nextEntryInMinutes","unshift","Math","round","addMinutes","day","startOfDay","getTime","push","components_ShowError","AppBar","Toolbar","disableGutters","Typography","variant","Avatar","alt","src","imageUrl","Container","maxWidth","Fab","color","onClick","disabled","Add_default","extendedIcon","Paper","components_GrouppedList","CircularProgress","SpaceSelector","onSelect","value","setValue","onSubmit","Grid","container","direction","TextField","label","onChange","target","Button","type","SignInForm","onLogin","responseGoogle","response","console","log","google_login","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","debounce","fn","nextTask","pending","_len","arguments","args","Array","_key","apply","execute","then","toCall","createStyles","padding","EntryPage","match","params","update","store","removeEntry","listData","readQuery","query","e","writeQuery","removedId","mutationData","setDate","_useState3","_useState4","extraFood","setExtraFood","client","useApolloClient","updateEntry","useCallback","mutate","mutation","updateDate","react_router","justify","xs","md","paragraph","size","addDays","subDays","Remove_default","addHours","subHours","subMinutes","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","updateExtraFood","NotFound","RouterLink","getClient","token","httpLink","createHttpLink","uri","process","authLink","setContext","_","headers","authorization","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","getCacheKey","__typename","link","App","storage","read","write","setSpaceId","user","setUser","react_router_dom","ApolloContext","tokenId","exact","path","render","components_List","profileObj","props","components_EntryPage","assign","components_SpaceSelector","selectedSpaceId","components_SignInForm","Boolean","window","location","hostname","ReactDOM","src_App","JSON","parse","localStorage","getItem","setItem","stringify","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81887511.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`\n  }\n\n  return `${hours}:${minutes}h`\n}\n","import React, { useState } from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { ListItemIcon, IconButton } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\nimport Opacity from '@material-ui/icons/Opacity'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatElapsedTime, formatTime } from '../time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { useInterval } from '../useInterval'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#ead3d3',\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  },\n  icon: {\n    flexDirection: 'column',\n    fontSize: 12\n  }\n}))\n\nconst SuggestedListItem = ({time, key}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const classes = useStyles()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={classes.item}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => (\n          <CSSTransitionGroup\n            key={timestamp}\n            transitionName=\"example\"\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}>\n            <ListSubheader className={classes.subheader}>\n              {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n              <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n            </ListSubheader>\n\n            {group.map(({id, time, extra_food, meantime, isSuggested}) => (\n                isSuggested\n                  ? <SuggestedListItem key={id} time={time} />\n                  : <ListItem key={id}>\n                    <ListItemIcon className={classes.icon}>\n                       { extra_food > 0 ? <><Opacity/> {extra_food}ml</> : null }\n                    </ListItemIcon>\n\n                    <ListItemText secondary={meantime} >\n                      {formatTime(time * 1000)}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                      {\n                        (now - time * 1000 < A_DAY) &&\n                        <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                          <Edit/>\n                        </IconButton>\n                      }\n                    </ListItemSecondaryAction>\n                  </ListItem>\n              )\n            )}\n          </CSSTransitionGroup>\n        ))\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTIRES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY_TIME = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import React from 'react';\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport AddIcon from '@material-ui/icons/Add'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Fab\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from '../time'\n\nimport { GET_ENTIRES } from '../queries'\n\nconst CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#3e4451',\n  },\n  avatar: {\n    margin: 15,\n    width: 40,\n    height: 40,\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n    height: 70\n  },\n  title: {\n    margin: 15,\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  },\n  listWrapper: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nfunction EntryList({spaceId, profile}) {\n  const classes = useStyles();\n\n  const { loading, data, error } = useQuery(GET_ENTIRES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const sortedDataEntries = hasData && data.entries.slice().sort((e1, e2) => e2.time - e1.time)\n\n  const entries = hasData && sortedDataEntries.reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n  if (entries.length > 0) {\n    const theMostRecent = entries[0]\n    const theMostRecentDate = new Date(theMostRecent.time * 1000)\n    const hours = theMostRecentDate.getHours()\n    const isLate = (hours >= 21 || hours < 3)\n    const nextEntryInMinutes = isLate ? 240 : 210\n\n    entries.unshift({\n      id: 'future',\n      time: Math.round(addMinutes(theMostRecentDate, nextEntryInMinutes) / 1000),\n      extra_food: 0,\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n\n  return (\n    <>\n      { (error || creationError) && <ShowError message={error || creationError} /> }\n\n      <AppBar className={classes.appBar}>\n        <Toolbar disableGutters={true} className={classes.toolbar}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Food time\n          </Typography>\n          <Avatar alt=\"Profile picture\" src={profile.imageUrl} className={classes.avatar} />\n        </Toolbar>\n      </AppBar>\n\n      <Toolbar className={classes.toolbar}/>\n\n      <Container className={classes.listWrapper} maxWidth=\"sm\">\n        <Fab variant='extended' color='primary' aria-label=\"delete\" className={classes.fab} onClick={onAddEntry} disabled={creationLoading}>\n          <AddIcon className={classes.extendedIcon} />\n          New feeding\n        </Fab>\n\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary='Click the button to start measuring intervals' />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n\n        { loading && <CircularProgress /> }\n      </Container>\n    </>\n  )\n}\n\nexport default EntryList;\n","import React, { useState } from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nfunction SpaceSelector({onSelect}) {\n  const [value, setValue] = useState('')\n\n  return (\n    <>\n      <header className=\"App-header\">\n      </header>\n\n      <form onSubmit={() => onSelect(value)}>\n        <Grid container spacing={5} direction=\"column\">\n          <Grid item>\n            <TextField\n              label=\"Space name\"\n              value={value}\n              onChange={event => setValue(event.target.value)}\n              margin=\"normal\"\n            />\n          </Grid>\n\n          <Grid item>\n            <Button type='submit' variant=\"contained\" color=\"primary\" >\n              Proceed\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n\n  )\n}\n\nexport default SpaceSelector\n","import React from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login'\n\nconst SignInForm = ({onLogin}) => {\n  const responseGoogle = (response) => {\n    console.log(response)\n    onLogin(response)\n  }\n\n  const logout = () => {\n\n  }\n\n  return  <>\n    <header className=\"App-header\">\n    </header>\n\n    <GoogleLogin\n      clientId=\"299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com\"\n      buttonText=\"Login\"\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      isSignedIn={true}\n      cookiePolicy={'single_host_origin'}\n    />\n\n    {/*<GoogleLogout*/}\n    {/*clientId=\"299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com\"*/}\n    {/*buttonText=\"Logout\"*/}\n    {/*onLogoutSuccess={logout}*/}\n    {/*>*/}\n    {/*</GoogleLogout>*/}\n  </>\n}\n\nexport default SignInForm\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect } from 'react-router-dom'\n\nimport { Button, Container, Fab, Paper, CircularProgress, Typography, Grid, Slider } from '@material-ui/core'\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { formatTime, formatDay } from '../time'\nimport { debounce } from '../utils'\n\nimport {\n  GET_ENTIRES,\n  GET_ENTRY,\n  UPDATE_ENTRY_TIME,\n  REMOVE_ENTRY\n} from '../queries'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n  }),\n)\n\nfunction EntryPage({spaceId, match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      let listData = null\n\n      try {\n        listData = store.readQuery({query: GET_ENTIRES, variables: {spaceId}})\n      } catch (e) {\n        // Reading error, do nothing\n      }\n\n      if (!listData) {\n        return\n      }\n\n      store.writeQuery({\n        query: GET_ENTIRES, variables: {spaceId}, data: {\n          entries: listData.entries.filter(entry => {\n            return entry.id !== removeEntry.removedId\n          })\n        }\n      })\n    },\n  })\n\n  const [date, setDate] = useState(null)\n  const [extraFood, setExtraFood] = useState(null)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY_TIME,\n      variables: {\n        id,\n        ...variables\n      }\n    })\n  }), [client, id])\n\n  if (date === null && !loading) {\n    setDate(new Date(data.entry.time * 1000))\n  }\n\n  if (extraFood === null && !loading) {\n    setExtraFood(data.entry.extra_food)\n  }\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    updateEntry({\n      extra_food: value\n    })\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to='/'/>\n  }\n\n  return (\n    <>\n      <header className=\"App-header\">\n        { !loading &&\n          <Typography>\n            {formatTime(date)} {formatDay(date)}\n          </Typography>\n        }\n      </header>\n\n      <Container maxWidth=\"sm\">\n        {\n          loading\n            ? <CircularProgress/>\n            : <Grid container spacing={2} direction='row' justify='center'>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Day\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addDays(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subDays(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Hours\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addHours(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subHours(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Minutes\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addMinutes(date, 5))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subMinutes(date, 5))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Extra food - {extraFood}ml\n                  </Typography>\n\n                  <Slider\n                    defaultValue={extraFood}\n                    aria-labelledby='discrete-slider'\n                    valueLabelDisplay='off'\n                    step={5}\n                    min={0}\n                    max={150}\n                    onChange={(e, value) => updateExtraFood(value)}\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Danger zone\n                  </Typography>\n\n                  <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n                </Paper>\n              </Grid>\n            </Grid>\n        }\n\n      </Container>\n    </>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nexport default function getClient(token) {\n  const httpLink = createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n\n  const authLink = setContext((_, { headers }) => {\n    return {\n      headers: {\n        ...headers,\n        authorization: `Bearer ${token}`\n      }\n    }\n  })\n\n  return new ApolloClient({\n    cache: new InMemoryCache({\n      cacheRedirects: {\n        Query: {\n          entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n        },\n      },\n    }),\n    link: authLink.concat(httpLink)\n  })\n}\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n\nimport EntryList from './components/List'\nimport SpaceSelector from './components/SpaceSelector'\nimport SignInForm from './components/SignInForm'\nimport EntryPage from './components/EntryPage'\nimport NotFound from './components/NotFound'\nimport getClient from './client'\nimport './App.css'\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const { read, write } = storage\n\n  const [spaceId, setSpaceId] = useState(read(storageKey))\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    write(storageKey, spaceId)\n  }, [spaceId, write])\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          {\n            user ?\n            <ApolloProvider client={getClient(user.tokenId)}>\n              {spaceId\n                ? <>\n                 <Route exact path=\"/\" render={() => <EntryList spaceId={spaceId} profile={user.profileObj} />}/>\n                 <Route path = \"/edit/:id\" render={props => <EntryPage {...props} spaceId={spaceId}/>} />\n                </>\n                : <Route exact path=\"/\" render={props => <SpaceSelector {...props} onSelect={selectedSpaceId => setSpaceId(selectedSpaceId)}/>} />\n\n              }\n            </ApolloProvider> :\n            <Route exact path=\"/\" render={props => <SignInForm {...props} onLogin={user => setUser(user)}/>} />\n          }\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(<App storage={{read, write}}/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}