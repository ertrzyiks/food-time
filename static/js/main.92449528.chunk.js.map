{"version":3,"sources":["components/ShowError.js","time.js","components/GrouppedList.js","useInterval.js","components/TimeSinceLastFeeding.js","ProfileContext.js","routing.js","components/Layout.js","queries/getEntries.js","queries/getEntry.js","queries/createEntry.js","queries/updateEntry.js","queries/removeEntry.js","queries/getSpaces.js","queries/createSpace.js","components/List.js","components/SpaceSelector.js","components/SignInForm.js","utils.js","components/EntryPage.js","components/NotFound.js","client.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","event","reason","networkError","result","errors","length","slice","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","item","opacity","root","background","paper","subheader","color","common","black","textAlign","subheader_total","float","useIconStyles","icon_wrapper","display","flexDirection","fontSize","marginRight","bottle_icon","icon_container","small_icon","SuggestedListItem","time","key","count","setCount","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","now","date","ListItem","ListItemText","primary","secondary","IconGroup","_ref2","icons","type","extra_food","ChildCare_default","Fragment","Opacity_default","join","ListItemIcon","GrouppedList","_ref3","groupedEntries","List","disablePadding","entries","map","_ref5","_ref6","group","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","filter","_ref4","isSuggested","getTotalEntries","_ref7","meantime","GrouppedList_SuggestedListItem","GrouppedList_IconGroup","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","info","main","messageBox","marginBottom","alignItems","icon","spacing","SnackbarContentWrapper","props","variant","children","aria-describedby","Info_default","Warning_default","TimeSinceLastFeeding","lastFeedingTime","nextFeedingTime","TimeSinceLastFeeding_SnackbarContentWrapper","Typography","ProfileContext","React","createContext","getRoute","pattern","path","_len","arguments","params","Array","_key","generatePath","apply","HomePage","SelectPage","SpacePage","EditPage","appBar","avatar","margin","width","height","marginLeft","toolbar","paddingLeft","Layout","toolbarIcon","profile","useContext","_React$useState","_React$useState2","anchorEl","setAnchorEl","AppBar","Toolbar","disableGutters","Avatar","alt","src","imageUrl","aria-controls","aria-haspopup","onClick","currentTarget","Menu","getContentAnchorEl","keepMounted","Boolean","MenuItem","RouterLink","Box","my","GET_ENTRIES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","CREATE_ENTRY","createEntry_templateObject","UPDATE_ENTRY_TIME","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","GET_SPACES","getSpaces_templateObject","CREATE_SPACE","createSpace_templateObject","fab","position","bottom","right","zIndex","listWrapper","marginTop","EntryList","match","spaceId","_useQuery","useQuery","variables","loading","data","hasData","_useMutation","useMutation","refetchQueries","_useMutation2","createEntry","_useMutation2$","creationLoading","creationError","reverse","reduce","acc","entry","last","toConsumableArray","objectSpread","theMostRecent","theMostRecentDate","getHours","nextEntryInMinutes","unshift","Math","round","addMinutes","day","startOfDay","getTime","push","components_Layout","components_ShowError","Container","maxWidth","Fab","disabled","Add_default","components_TimeSinceLastFeeding","Paper","components_GrouppedList","CircularProgress","SpaceSelector","name","createSpace","spaces","space","divider","button","display_name","minHeight","loader","top","left","SignInForm","onLogin","responseGoogle","response","setLoading","timeout","setTimeout","clearTimeout","google_login","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","debounce","fn","nextTask","pending","args","execute","then","toCall","createStyles","padding","updateGetEntriesCache","store","listData","readQuery","query","e","writeQuery","EntryPage","update","removeEntry","removedId","mutationData","setDate","_useState3","_useState4","extraFood","setExtraFood","_useState5","_useState6","isBottleOnly","setIsBottleOnly","client","useApolloClient","updateEntry","useCallback","mutate","mutation","sort","e1","e2","updateDate","getFeedingType","extraFoodInput","isBottleOnlyInput","react_router","backButton","react_router_dom","assign","ArrowBack_default","Grid","container","direction","justify","xs","md","paragraph","size","addDays","subDays","Remove_default","addHours","subHours","subMinutes","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","onChange","value","updateExtraFood","FormControlLabel","control","Checkbox","checked","target","entryType","label","Button","NotFound","getClient","getTokenFn","httpLink","createHttpLink","uri","process","authLink","setContext","_","headers","authorization","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","getCacheKey","__typename","link","RememberSpace","write","App","storage","read","lastSpaceId","user","setUser","tokenHandlerId","reloadAuthResponse","res","id_token","src_ProfileContext","Provider","profileObj","ApolloContext","exact","render","components_SpaceSelector","App_RememberSpace","components_List","components_EntryPage","components_SignInForm","tokenId","window","location","hostname","ReactDOM","src_App","JSON","parse","localStorage","getItem","setItem","stringify","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92449528.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n if (message.networkError\n   && message.networkError.result\n   && message.networkError.result.errors\n   && message.networkError.result.errors.length > 0) {\n    message = message.networkError.result.errors[0].message.slice(0, 100)\n }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (hours < 1) {\n    return `${minutes}min`\n  }\n\n  return `${hours}h ${minutes}min`\n}\n","import React, { useState } from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { ListItemIcon, IconButton } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\nimport BottleFeedingIcon from '@material-ui/icons/Opacity'\nimport BreastFeedingIcon from '@material-ui/icons/ChildCare'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatElapsedTime, formatTime } from '../time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { useInterval } from '../useInterval'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#f0f2fa',\n    color: theme.palette.common.black,\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  }\n}))\n\nconst useIconStyles = makeStyles({\n  icon_wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 12,\n    marginRight: 5\n  },\n  bottle_icon: {\n    color: '#24a0ff'\n  },\n  icon_container: {\n    display: 'flex'\n  },\n  small_icon: {\n    fontSize: '1rem'\n  }\n})\n\nconst SuggestedListItem = ({time, key}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const classes = useStyles()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={classes.item}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nconst IconGroup = ({ type, extra_food }) => {\n  const classes = useIconStyles()\n\n  let icons;\n  switch (type) {\n    case 'breast':\n      icons = (\n        <BreastFeedingIcon/>\n      )\n      break;\n    case 'bottle':\n      icons = (\n        <>\n          <BottleFeedingIcon className={classes.bottle_icon}/> {extra_food}ml\n        </>\n      )\n      break;\n    case 'mixed':\n      icons = (\n        <>\n          <div className={classes.icon_container}>\n            <BreastFeedingIcon className={classes.small_icon}/>\n            <BottleFeedingIcon className={[classes.bottle_icon, classes.small_icon].join(' ')}/>\n          </div>\n          <span>{extra_food}ml</span>\n        </>\n      )\n      break;\n  }\n\n  return (\n    <ListItemIcon>\n      <div className={classes.icon_wrapper}>\n        {icons}\n      </div>\n    </ListItemIcon>\n  )\n}\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => (\n          <CSSTransitionGroup\n            key={timestamp}\n            transitionName=\"example\"\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}>\n            <ListSubheader className={classes.subheader}>\n              {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n              <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n            </ListSubheader>\n\n            {group.map(({id, time, extra_food, type, meantime, isSuggested}) => {\n                return isSuggested\n                    ? <SuggestedListItem key={id} time={time}/>\n                    : <ListItem key={id}>\n                        <IconGroup type={type} extra_food={extra_food}/>\n\n                        <ListItemText secondary={meantime}>\n                          {formatTime(time * 1000)}\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          {\n                            (now - time * 1000 < A_DAY) &&\n                            <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                              <Edit/>\n                            </IconButton>\n                          }\n                        </ListItemSecondaryAction>\n                      </ListItem>\n              }\n            )}\n          </CSSTransitionGroup>\n        ))\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from 'react'\nimport InfoIcon from '@material-ui/icons/Info'\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles'\nimport {SnackbarContent, Typography} from '@material-ui/core'\n\nimport {formatElapsedTime} from '../time'\n\nconst useStyles = makeStyles(theme => ({\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  messageBox: {\n    marginBottom: 20\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  }\n}));\n\nconst SnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n  const { variant, children } = props;\n\n  return (\n    <SnackbarContent\n      className={[classes[variant], classes.messageBox].join(' ')}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {\n            variant === 'info'\n            ? <InfoIcon className={classes.icon}/>\n            : <WarningIcon className={classes.icon}/>\n          }\n          {children}\n        </span>\n      }\n    />\n  );\n}\n\nconst TimeSinceLastFeeding = ({lastFeedingTime, nextFeedingTime}) => (\n  <SnackbarContentWrapper\n    variant={Date.now() > nextFeedingTime ? 'error' : 'info'}>\n    It's been&nbsp;\n    <Typography variant=\"subtitle1\" component=\"span\">{formatElapsedTime(new Date(), new Date(lastFeedingTime))}</Typography>\n    &nbsp;since last feeding\n  </SnackbarContentWrapper>\n)\n\nexport default TimeSinceLastFeeding\n","import React from 'react'\n\nconst ProfileContext = React.createContext(null)\n\nexport default ProfileContext\n","import { generatePath } from 'react-router'\n\nconst getRoute= (pattern) => {\n  return {\n    pattern,\n    path: (...params) => generatePath(pattern, ...params)\n  }\n}\n\nexport const HomePage = getRoute('/')\nexport const SelectPage = getRoute('/select')\nexport const SpacePage = getRoute('/space/:id')\nexport const EditPage =  getRoute('/edit/:id')\n\n\n","import React, { useContext } from 'react'\n\nimport {\n  AppBar,\n  Avatar,\n  Toolbar,\n  Typography,\n  Box,\n  Menu,\n  MenuItem\n} from '@material-ui/core'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport {makeStyles} from '@material-ui/core/styles'\nimport ProfileContext from '../ProfileContext'\n\nimport { SelectPage } from '../routing'\n\nconst useStyles = makeStyles({\n  appBar: {\n    backgroundColor: '#3e4451',\n  },\n  avatar: {\n    margin: 15,\n    width: 40,\n    height: 40,\n    marginLeft: 'auto'\n  },\n  toolbar: {\n    height: 70,\n    paddingLeft: 15\n  },\n})\n\nconst Layout = ({toolbarIcon, children}) => {\n  const classes = useStyles()\n  const profile = useContext(ProfileContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return <>\n    <AppBar className={classes.appBar}>\n      <Toolbar disableGutters={true} className={classes.toolbar}>\n        {toolbarIcon}\n\n        <Typography variant='h5'>\n          Food time\n        </Typography>\n\n        {profile &&\n          <>\n            <Avatar alt=\"Profile picture\"\n                    src={profile.imageUrl}\n                    aria-controls='user-menu'\n                    aria-haspopup='true'\n                    className={classes.avatar}\n                    onClick={handleClick}/>\n            <Menu\n              id='user-menu'\n              anchorEl={anchorEl}\n              anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n              getContentAnchorEl={null}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem component={RouterLink} to={SelectPage.path()} onClick={handleClose}>Spaces</MenuItem>\n            </Menu>\n          </>\n        }\n      </Toolbar>\n    </AppBar>\n\n    <Toolbar className={classes.toolbar}/>\n\n    <Box my={2}>\n    {children}\n    </Box>\n  </>\n}\n\nexport default Layout\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTRIES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n      extra_food\n      spaceId\n      type  \n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n      spaceId\n      type \n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY_TIME = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int, $type: String) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food, type: $type) {\n      id\n      time\n      extra_food\n      type  \n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const GET_SPACES = gql`\n  query getSpaces {\n    spaces {\n      id\n      display_name\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const CREATE_SPACE = gql`\n  mutation CreateSpace($name: String!) {\n    createSpace(name: $name) {\n      id\n      display_name\n    }\n  }\n`\n","import React from 'react';\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\n\nimport AddIcon from '@material-ui/icons/Add'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Fab\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\nimport TimeSinceLastFeeding from './TimeSinceLastFeeding'\nimport Layout from './Layout'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from '../time'\n\nimport { GET_ENTRIES, CREATE_ENTRY } from '../queries'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  },\n  listWrapper: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\n\nfunction EntryList({match}) {\n  const classes = useStyles();\n\n  const spaceId = match.params.id\n\n  const { loading, data, error } = useQuery(GET_ENTRIES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const entries = hasData && data.entries.slice().reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n  if (entries.length > 0) {\n    const theMostRecent = entries[0]\n    const theMostRecentDate = new Date(theMostRecent.time * 1000)\n    const hours = theMostRecentDate.getHours()\n    const isLate = (hours >= 21 || hours < 3)\n    const nextEntryInMinutes = isLate ? 210 : 150\n\n    entries.unshift({\n      id: 'future',\n      time: Math.round(addMinutes(theMostRecentDate, nextEntryInMinutes) / 1000),\n      extra_food: 0,\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n\n  return (\n    <Layout>\n      { (error || creationError) && <ShowError message={error || creationError} /> }\n\n      <Container className={classes.listWrapper} maxWidth=\"sm\">\n        <Fab variant='extended' color='primary' aria-label=\"delete\" className={classes.fab} onClick={onAddEntry} disabled={creationLoading}>\n          <AddIcon />\n          New feeding\n        </Fab>\n\n        { !loading && data && data.entries.length > 0 &&\n          <TimeSinceLastFeeding lastFeedingTime={entries[1].time * 1000} nextFeedingTime={entries[0].time * 1000}/>\n        }\n\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary='Click the button to start measuring intervals' />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n        { loading && <CircularProgress /> }\n      </Container>\n    </Layout>\n  )\n}\n\nexport default EntryList;\n","import React from 'react'\n\nimport {\n  CircularProgress,\n  Container,\n  Paper,\n  Fab,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Layout from './Layout'\nimport { SpacePage } from '../routing'\n\nimport { GET_SPACES, CREATE_SPACE } from '../queries'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  }\n}))\n\nfunction SpaceSelector() {\n  const classes = useStyles()\n\n  const { loading, data, error } = useQuery(GET_SPACES)\n\n  const [createSpace, {loading: creationLoading, error: creationError}] = useMutation(CREATE_SPACE, {\n    variables: {name: 'New space'},\n    refetchQueries: ['getSpaces']\n  })\n\n  return (<Layout>\n    <Container maxWidth=\"sm\">\n      <Fab variant='extended' color='primary' aria-label=\"New space\" className={classes.fab} onClick={createSpace} disabled={creationLoading}>\n        <AddIcon/>\n        New space\n      </Fab>\n\n      { loading && <CircularProgress/>}\n      { !loading &&\n        <Paper>\n          <List disablePadding={true}>\n            <CSSTransitionGroup\n              transitionName=\"example\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}>\n              { data.spaces.map(space => (\n                <ListItem key={space.id} divider button component={RouterLink} to={SpacePage.path({id: space.id})}>\n                  <ListItemText>{space.display_name}</ListItemText>\n                </ListItem>\n              ))}\n            </CSSTransitionGroup>\n          </List>\n        </Paper>\n      }\n    </Container>\n  </Layout>)\n}\n\nexport default SpaceSelector\n","import React, { useState, useEffect } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { CircularProgress } from '@material-ui/core'\n\nimport Layout from './Layout'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    minHeight: 40\n  },\n  loader: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: -3,\n    bottom: -5,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n})\n\nconst SignInForm = ({ onLogin }) => {\n  const classes = useStyles()\n\n  const responseGoogle = (response) => {\n    onLogin(response)\n  }\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setLoading(false)\n    }, 1500)\n\n    return () => clearTimeout(timeout)\n  })\n\n  return  <Layout>\n    <div className={classes.root}>\n      { loading && <div className={classes.loader}><CircularProgress /></div> }\n      <GoogleLogin\n        clientId='299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com'\n        buttonText='Login'\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        isSignedIn={true}\n        cookiePolicy='single_host_origin'\n      />\n    </div>\n  </Layout>\n}\n\nexport default SignInForm\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect, Link as RouterLink } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Fab,\n  Paper,\n  CircularProgress,\n  Typography,\n  Grid,\n  Slider,\n  IconButton\n} from '@material-ui/core'\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Layout from './Layout'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { formatTime, formatDay } from '../time'\nimport { debounce } from '../utils'\n\nimport { SpacePage } from '../routing'\n\nimport {\n  GET_ENTRIES,\n  GET_ENTRY,\n  UPDATE_ENTRY_TIME,\n  REMOVE_ENTRY\n} from '../queries'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n  }),\n)\n\nconst updateGetEntriesCache = (store, spaceId, fn) => {\n  let listData = null\n\n  try {\n    listData = store.readQuery({query: GET_ENTRIES, variables: {spaceId}})\n  } catch (e) {\n    // Reading error, do nothing\n  }\n\n  if (!listData) {\n    return\n  }\n\n  store.writeQuery({\n    query: GET_ENTRIES, variables: {spaceId}, data: {\n      entries: fn(listData.entries)\n\n    }\n  })\n}\n\nfunction EntryPage({match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const spaceId = data && data.entry.spaceId\n\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      updateGetEntriesCache(store, spaceId, (entries) => {\n        return entries.filter(entry => {\n          return entry.id !== removeEntry.removedId\n        })\n      })\n    },\n  })\n\n  const [date, setDate] = useState(null)\n  const [extraFood, setExtraFood] = useState(null)\n  const [isBottleOnly, setIsBottleOnly] = useState(null)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY_TIME,\n      variables: {\n        id,\n        ...variables\n      },\n      update: (store) => {\n        updateGetEntriesCache(store, spaceId, (entries) => {\n          return entries.sort((e1, e2) => e2.time - e1.time)\n        })\n      }\n    })\n  }), [client, id])\n\n  if (date === null && !loading) {\n    setDate(new Date(data.entry.time * 1000))\n  }\n\n  if (extraFood === null && !loading) {\n    setExtraFood(data.entry.extra_food)\n  }\n\n  if (isBottleOnly === null && !loading) {\n    setIsBottleOnly(data.entry.type === 'bottle')\n  }\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const getFeedingType = (extraFoodInput, isBottleOnlyInput) => {\n    if (extraFoodInput === 0) {\n      return 'breast'\n    }\n\n    return isBottleOnlyInput\n      ? 'bottle'\n      : 'mixed'\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    updateEntry({\n      extra_food: value,\n      type: getFeedingType(value, isBottleOnly)\n    })\n  }\n\n  const updateFeedingType = event => {\n    const { checked } = event.target\n    setIsBottleOnly(checked)\n\n    const entryType = getFeedingType(extraFood, checked)\n\n    updateEntry({\n      type: entryType\n    })\n\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to={SpacePage.path({id: spaceId})}/>\n  }\n\n  const backButton = spaceId && (\n    <IconButton\n    edge='start'\n    color='inherit'\n    component={props => <RouterLink {...props} to={SpacePage.path({id: spaceId})}/>}>\n      <ArrowBackIcon/>\n    </IconButton>\n  )\n\n  return (\n    <Layout toolbarIcon={backButton}>\n      <header className=\"App-header\">\n        { !loading &&\n          <Typography variant='h5'>\n            {formatTime(date)} {formatDay(date)}\n          </Typography>\n        }\n      </header>\n\n      <Container maxWidth=\"sm\">\n        {\n          loading\n            ? <CircularProgress/>\n            : <Grid container spacing={2} direction='row' justify='center'>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Day\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addDays(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subDays(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Hours\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addHours(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subHours(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Minutes\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addMinutes(date, 5))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subMinutes(date, 5))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Extra food - {extraFood}ml\n                  </Typography>\n\n                  <Slider\n                    defaultValue={extraFood}\n                    aria-labelledby='discrete-slider'\n                    valueLabelDisplay='off'\n                    step={5}\n                    min={0}\n                    max={150}\n                    onChange={(e, value) => updateExtraFood(value)}\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={isBottleOnly}\n                        onChange={updateFeedingType}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Bottle only\"\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Danger zone\n                  </Typography>\n\n                  <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n                </Paper>\n              </Grid>\n            </Grid>\n        }\n\n      </Container>\n    </Layout>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nexport default function getClient(getTokenFn) {\n  const httpLink = createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n\n  const authLink = setContext((_, { headers }) => {\n    return {\n      headers: {\n        ...headers,\n        authorization: `Bearer ${getTokenFn()}`\n      }\n    }\n  })\n\n  return new ApolloClient({\n    cache: new InMemoryCache({\n      cacheRedirects: {\n        Query: {\n          entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n        },\n      },\n    }),\n    link: authLink.concat(httpLink)\n  })\n}\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n\nimport EntryList from './components/List'\nimport SpaceSelector from './components/SpaceSelector'\nimport SignInForm from './components/SignInForm'\nimport EntryPage from './components/EntryPage'\nimport NotFound from './components/NotFound'\nimport ProfileContext from './ProfileContext'\nimport getClient from './client'\nimport './App.css'\nimport {HomePage, SelectPage, EditPage, SpacePage} from './routing'\n\nconst RememberSpace = ({match, write, children}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    write(id)\n  }, [write, id])\n\n  return children\n}\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const tokenIdStorageKey = 'food-time-token-id'\n  const { read, write } = storage\n\n  const lastSpaceId = read(storageKey)\n\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    const tokenHandlerId = setInterval(() => {\n      if (user) {\n        return user.reloadAuthResponse()\n          .then(res => {\n            write(tokenIdStorageKey, res.id_token)\n          })\n      }\n    }, 5 * 60 * 1000)\n\n    return () => clearInterval(tokenHandlerId)\n  }, [write, user])\n\n  return (\n    <ProfileContext.Provider value={user && user.profileObj}>\n      <div className='App'>\n        <HashRouter>\n          <Switch>\n            {\n              user ?\n                <ApolloProvider client={getClient(() => read(tokenIdStorageKey))}>\n                  <Switch>\n\n                    <Route exact path={SelectPage.pattern} render={props => <SpaceSelector {...props} />} />\n                    <Route path={SpacePage.pattern} render={\n                      props =>\n                        <RememberSpace write={id => write(storageKey, id)} match={props.match}>\n                          <EntryList {...props} profile={user.profileObj} />\n                        </RememberSpace>}\n                    />\n                    <Route path={EditPage.pattern} render={props => <EntryPage {...props} />} />\n\n                    <Route exact path={HomePage.pattern}>\n                      { lastSpaceId\n                        ? <Redirect to={SpacePage.path({id: lastSpaceId})}/>\n                        : <Redirect to={SelectPage.path()}/>\n                      }\n                    </Route>\n\n                  </Switch>\n              </ApolloProvider> :\n              <Route path={HomePage.pattern} render={props => <SignInForm {...props} onLogin={user => {\n                write(tokenIdStorageKey, user.tokenId)\n                setUser(user)\n              }}/>} />\n            }\n            <Route component={NotFound} />\n          </Switch>\n        </HashRouter>\n      </div>\n    </ProfileContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(<App storage={{read, write}}/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}