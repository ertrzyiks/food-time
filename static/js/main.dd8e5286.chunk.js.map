{"version":3,"sources":["useEventListener.js","components/ShowError.js","time.js","useInterval.js","components/SuggestedListItem.js","components/IconGroup.js","queries/getEntries.js","queries/getEntry.js","queries/createEntry.js","queries/updateEntry.js","queries/removeEntry.js","queries/getSpaces.js","queries/createSpace.js","queries/getDayStats.js","queries/getWeekStats.js","queries/getAggregatedStats.js","components/VitaminChip.js","components/GrouppedList.js","components/TimeSinceLastFeeding.js","components/FeedingSourceSelector.js","components/FeedingSourceBar.js","components/List.js","components/Chart.js","components/Stats.js","components/AggregatedStats.js","ProfileContext.js","routing.js","components/Layout.js","components/SpacePage.js","components/SpaceSelector.js","components/SignInForm.js","utils.js","components/EntryForm.js","components/EntryPage.js","components/NotFound.js","components/ScrollToTop.js","AuthLink.js","client.js","App.js","serviceWorker.js","index.js"],"names":["global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","useEventListener","eventName","handler","element","arguments","length","undefined","savedCallback","React","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","reason","networkError","result","errors","slice","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","useInterval","callback","delay","id","setInterval","clearInterval","SuggestedListItem","time","key","count","setCount","now","date","ListItem","ListItemText","primary","secondary","useIconStyles","icon_wrapper","display","flexDirection","fontSize","marginRight","textAlign","bottle_icon","color","icon_container","small_icon","IconGroup","icons","type","extra_food","feeding_duration","feedingDurationText","Fragment","ChildCare_default","Opacity_default","join","ListItemIcon","GET_ENTRIES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","CREATE_ENTRY","createEntry_templateObject","UPDATE_ENTRY","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","GET_SPACES","getSpaces_templateObject","CREATE_SPACE","createSpace_templateObject","GET_DAY_STATS","getDayStats_templateObject","GET_WEEK_STATS","getWeekStats_templateObject","GET_AGGREGATED_STATS","getAggregatedStats_templateObject","green_chip","green","red_chip","red","blue_chip","blue","VitaminChip","group","realEntries","filter","_ref2","isSuggested","vitaminEntries","_ref3","vitamin","vitaminTime","firstRealEntry","_useMutation","useMutation","_useMutation2","updateEntry","_useMutation2$","loading","Chip","size","label","icon","Refresh_default","Done_default","Close_default","deleteIcon","CheckBoxOutlineBlank_default","onDelete","variables","item","opacity","root","background","paper","subheader","common","black","subheader_total","float","subheader_vitamin","marginLeft","narrow_column","flex","source_column","vitamin_column","breastFeedingSourceMap","left","right","both","none","GrouppedList","groupedEntries","List","disablePadding","entries","map","_ref4","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","components_VitaminChip","getTotalEntries","_ref5","meantime","source","components_SuggestedListItem","components_IconGroup","primaryTypographyProps","variant","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","info","main","messageBox","marginBottom","position","top","zIndex","alignItems","spacing","completeFeedingButton","border","marginTop","snackbarContent","SnackbarContentWrapper","props","action","children","aria-describedby","Info_default","Warning_default","TimeSinceLastFeeding","lastFeedingTime","nextFeedingTime","entry","infoText","Typography","duration","completeFeedingComponent","Button","onClick","TimeSinceLastFeeding_SnackbarContentWrapper","class","FeedingSourceSelector","breastFeedingSource","onChange","paragraph","ToggleButtonGroup","value","exclusive","ToggleButton","text","hint","justifyContent","components_FeedingSourceSelector","FeedingSourceBar","FeedingSourceBar_SnackbarContentWrapper","fab","bottom","listWrapper","EntryList","match","showNextEstimatedFeeding","spaceId","params","_useQuery","useQuery","data","refetch","hasData","useCallback","document","hidden","refetchQueries","createEntry","creationLoading","creationError","reverse","reduce","acc","last","toConsumableArray","objectSpread","lastFeedingDate","theMostRecent","getLastFeedingDate","nextFeedingDate","theMostRecentDate","getHours","nextEntryInMinutes","addMinutes","getNextEntryDate","unshift","Math","round","getTime","day","startOfDay","push","components_ShowError","Container","maxWidth","Fab","disabled","Add_default","components_TimeSinceLastFeeding","components_FeedingSourceBar","Paper","components_GrouppedList","CircularProgress","chartWrapper","Chart","title","options","responsiveOptions","chartRef","createRef","chartist","detach","Chartist","ref","primaryChartLine","stroke","fill","secondaryChartLine","menu","margin","loader","Stats","anchorEl","setAnchorEl","_useState3","_useState4","chartTimePeriod","setChartTimePeriod","getIntChartTimePeriod","stringTimePeriod","fetchPolicy","daysAgo","statsData","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadWeekStats","_useLazyQuery2$","weekStatsLoading","weekStatsData","extraFoodData","labels","stats","extra_food_per_day","series","feedingCountData","feeding_count_per_day","feeding_count","getRoundedHoursFromMinutes","mins","toFixed","nightBreaksData","night_breaks","_ref6","_ref7","firstBreakDurationInMins","_ref8","secondBreakDurationInMins","avgDayBreakData","average_day_break","_ref9","_ref10","average_duration_mins","showNthLabel","index","split","getOptions","yUnit","showArea","showPoint","low","axisY","labelInterpolationFnc","onlyInteger","axisX","e","aria-controls","aria-haspopup","currentTarget","KeyboardArrowDown_default","Menu","keepMounted","Boolean","MenuItem","bind","style","height","components_Chart","AggregatedStats","aggregated_stats","extra_food_per_week","week_start_date","feeding_count_per_week","ProfileContext","createContext","getRoute","pattern","path","_len","Array","_key","generatePath","apply","HomePage","SelectPage","SpacePage","EditPage","appBar","avatar","width","toolbar","paddingLeft","Layout","toolbarIcon","profile","useContext","_React$useState","_React$useState2","AppBar","Toolbar","disableGutters","Avatar","alt","src","imageUrl","getContentAnchorEl","RouterLink","Box","my","history","tab","components_Layout","Tabs","Tab","components_List","components_Stats","components_AggregatedStats","SpaceSelector","name","createSpace","spaces","space","divider","button","display_name","minHeight","SignInForm","onLogin","responseGoogle","response","setLoading","timeout","setTimeout","clearTimeout","google_login","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","debounce","fn","nextTask","pending","args","execute","then","toCall","createStyles","padding","dateTime","arrow","minWidth","dateTimeBar","updateGetEntriesCache","store","listData","readQuery","query","writeQuery","EntryForm","update","removeEntry","removedId","mutationData","setDate","extraFood","setExtraFood","_useState5","_useState6","isBottleOnly","setIsBottleOnly","_useState7","_useState8","setBreastFeedingSource","_useState9","_useState10","setVitamin","_useState11","_useState12","feedingDuration","setFeedingDuration","client","useApolloClient","mutate","mutation","sort","e1","e2","updateDate","getFeedingType","extraFoodInput","isBottleOnlyInput","react_router","feedingSourceComponent","Grid","xs","md","feedingDurationComponent","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","updateFeedingDuration","addHours","KeyboardArrowUp_default","subHours","getMinutes","subMinutes","addDays","formatDay","subDays","container","direction","justify","updateExtraFood","FormControlLabel","control","Checkbox","checked","target","entryType","newVitamin","EntryPage","backButton","forwardRef","react_router_dom","assign","ArrowBack_default","components_EntryForm","NotFound","withRouter","pathname","location","window","scrollTo","AuthLink","_ApolloLink","user","token","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","operation","setContext","headers","authorization","_this2","Promise","resolve","reloadAuthResponse","res","id_token","forward","_this3","setTokenHeader","Observable","observer","subscription","innerSubscription","subscribe","next","complete","statusCode","refreshToken","success","Error","unsubscribe","ApolloLink","getClient","httpLink","createHttpLink","uri","process","authLink","tokenId","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","_","getCacheKey","__typename","link","RememberSpace","write","App","storage","read","lastSpaceId","setUser","src_ProfileContext","Provider","profileObj","components_ScrollToTop","react_common_esm","exact","render","components_SpaceSelector","App_RememberSpace","components_SpacePage","components_EntryPage","components_SignInForm","hostname","ReactDOM","src_App","JSON","parse","localStorage","getItem","setItem","stringify","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2FAAA,SAAAA,GAAA,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GA2BeI,IAzBf,SAA0BC,EAAWC,GAA2B,IAAlBC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAART,EAChDY,EAAgBC,IAAMC,SAE5BD,IAAME,UAAU,WACdH,EAAcI,QAAUT,GACvB,CAACA,IAEJM,IAAME,UAAU,WAGd,GADoBP,GAAWA,EAAQS,iBACvC,CAIA,IAAMC,EAAgB,SAAAC,GAAK,OAAIP,EAAcI,QAAQG,IAKrD,OAHAX,EAAQS,iBAAiBX,EAAWY,GAG7B,WACLV,EAAQY,oBAAoBd,EAAWY,MAExC,CAACZ,EAAWE,qWCpBXa,EAAYC,YAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,gBAAiBF,EAAMG,QAAQF,MAAMG,SA0C1BC,EAtCG,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QAAaC,EACPC,oBAAS,GADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBK,EADwBH,EAAA,GAClBI,EADkBJ,EAAA,GAEzBK,EAAUjB,IAEhB,IAAKS,EACH,OAAO,KAGT,SAASS,EAAYpB,EAAOqB,GACX,cAAXA,GAIJH,GAAQ,GAUV,OAPGP,EAAQW,cACPX,EAAQW,aAAaC,QACrBZ,EAAQW,aAAaC,OAAOC,QAC5Bb,EAAQW,aAAaC,OAAOC,OAAOjC,OAAS,IAC9CoB,EAAUA,EAAQW,aAAaC,OAAOC,OAAO,GAAGb,QAAQc,MAAM,EAAG,MAIjEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClBC,QAASd,EACTH,KAAMA,GAENS,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAoBC,UAAWjB,EAAQd,MAAOM,QAASA,EAAQ0B,WAAYH,QAASd,4ECvCnF,SAASkB,EAAYC,GAC1B,OAAOC,YAAO,IAAIC,KAAKF,GAAY,SAe9B,SAASG,EAAkBC,EAAMC,GACtC,IAAMC,EAAQC,YAAkBH,EAAMC,GAClCG,EAAUC,YAAoBL,EAAMC,GAAM,GAE9C,OAAIC,EAAQ,EACV,GAAAI,OAAUF,EAAV,OAGF,GAAAE,OAAUJ,EAAV,MAAAI,OAAoBF,EAApB,mBC1BK,SAASG,EAAYC,EAAUC,GACpC,IAAM3D,EAAgBE,mBAGtBC,oBAAU,WACRH,EAAcI,QAAUsD,GACvB,CAACA,IAGJvD,oBAAU,WAIR,GAAc,OAAVwD,EAAgB,CAClB,IAAIC,EAAKC,YAJX,WACE7D,EAAcI,WAGauD,GAC3B,OAAO,kBAAMG,cAAcF,MAE5B,CAACD,ICbN,IAeeI,EAfW,SAAA9C,GAA4B,IAA1B+C,EAA0B/C,EAA1B+C,KAAMC,EAAoBhD,EAApBgD,IAAKtB,EAAe1B,EAAf0B,UAAexB,EAC5BC,mBAAS,GADmBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/C+C,EAD+C7C,EAAA,GACxC8C,EADwC9C,EAAA,GAGpDoC,EAAY,WACVU,EAASD,EAAQ,IAChB,MAEH,IAAME,EAAMpB,KAAKoB,MACXC,EAAO,IAAIrB,KAAY,IAAPgB,GAEtB,OAAO/B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAUL,IAAKA,EAAKtB,UAAWA,GACpCV,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAcC,QAAO,WAAAhB,OAAaX,EAAWwB,IAASI,UAAWJ,EAAOD,GAAOnB,EAAkBoB,EAAMD,oDCXrGM,EAAgBhE,YAAW,CAC/BiE,aAAc,CACZC,QAAS,OACTC,cAAe,SACfC,SAAU,GACVC,YAAa,EACbC,UAAW,UAEbC,YAAa,CACXC,MAAO,WAETC,eAAgB,CACdP,QAAS,QAEXQ,WAAY,CACVN,SAAU,UAmDCO,EA/CG,SAAApE,GAA4C,IAOxDqE,EAPeC,EAAyCtE,EAAzCsE,KAAMC,EAAmCvE,EAAnCuE,WAAYC,EAAuBxE,EAAvBwE,iBAC/B/D,EAAUgD,IAEVgB,EAAsBD,EACxBxD,EAAAC,EAAAC,cAAA,YAAOsD,EAAP,KACA,KAGJ,OAAQF,GACN,IAAK,SACHD,EACErD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACE1D,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,MACCwD,GAGL,MACF,IAAK,SACHJ,EACErD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACE1D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CAAmBS,UAAWjB,EAAQuD,cADxC,IACwDO,EADxD,MAIF,MACF,IAAK,QACHF,EACErD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACE1D,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQyD,gBACtBlD,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CAAmBS,UAAWjB,EAAQ0D,aACtCnD,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CAAmBS,UAAW,CAACjB,EAAQuD,YAAavD,EAAQ0D,YAAYU,KAAK,QAE/E7D,EAAAC,EAAAC,cAAA,YAAOqD,EAAP,MACCE,GAMT,OACEzD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACE9D,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQiD,cACrBW,sTChEF,IAAMU,EAAcC,IAAHC,yQCAjB,IAAMC,GAAYF,IAAHG,kTCAf,IAAMC,GAAeJ,IAAHK,+eCAlB,IAAMC,GAAeN,IAAHO,+LCAlB,IAAMC,GAAeR,IAAHS,4JCAlB,IAAMC,GAAaV,IAAHW,mMCAhB,IAAMC,GAAeZ,IAAHa,mWCAlB,IAAMC,GAAgBd,IAAHe,0YCAnB,IAAMC,GAAiBhB,IAAHiB,2WCApB,IAAMC,GAAuBlB,IAAHmB,6GCU3B3G,GAAYC,YAAW,CAC3B2G,WAAY,CACVxG,gBAAiByG,SAAM,MAEzBC,SAAU,CACR1G,gBAAiB2G,OAAI,MAEvBC,UAAW,CACT5G,gBAAiB6G,QAAK,QA0CXC,GAtCK,SAAA1G,GAAa,IAAX2G,EAAW3G,EAAX2G,MACdlG,EAAUjB,KAEVoH,EAAcD,EAAME,OAAO,SAAAC,GAAA,OAAAA,EAAEC,cAC7BC,EAAiBJ,EAAYC,OAAO,SAAAI,GAAA,OAAAA,EAAEC,UACtCC,EAAcH,EAAenI,OAAS,EAA6B,IAAzBmI,EAAe,GAAGjE,KAAc,KAC1EqE,EAAiBR,EAAY,GANJS,EAQSC,YAAYhC,IARrBiC,EAAAlH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAQxBG,EARwBD,EAAA,GAAAE,EAAAF,EAAA,GAQVG,EARUD,EAQVC,QARUD,EAQD9H,MAW9B,OAAI+H,EACK1G,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CACLC,KAAK,QACLC,MAAM,SACNC,KAAM9G,EAAAC,EAAAC,cAAC6G,GAAA9G,EAAD,MACNS,UAAWjB,EAAQ+F,YAIhBxF,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CACLC,KAAK,QACLC,MAAK,UAAAtF,OAAY4E,EAAc,IAAMrF,YAAOqF,EAAa,SAAW,IAAM,IAC1EW,KAAMX,EAAcnG,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,MAAeD,EAAAC,EAAAC,cAAC+G,GAAAhH,EAAD,MACnCiH,WAAYlH,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,MACZmH,UAAWjB,GAAeC,EAAiB,WAtB3CI,EAAY,CACVa,UAAW,CACT1F,GAoB2DyE,EApBjDzE,GACVuE,SAAS,MAmBoE,KACjFxF,UAAWyF,EAAc1G,EAAQ2F,WAAa3F,EAAQ6F,YCtCpD9G,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC4I,KAAM,CACJC,QAAS,IAEXC,KAAM,CACJ5I,gBAAiBF,EAAMG,QAAQ4I,WAAWC,OAE5CC,UAAW,CACT/I,gBAAiB,UACjBqE,MAAOvE,EAAMG,QAAQ+I,OAAOC,MAC5B9E,UAAW,QAEb+E,gBAAiB,CACfC,MAAO,SAETC,kBAAmB,CACjBC,WAAY,IAEdC,cAAe,CACbC,KAAM,UACNrF,YAAa,IAEfsF,cAAe,CACbnF,MAAO,WAEToF,eAAgB,CACdpF,MAAO,cAILqF,GAAyB,CAC7BC,KAAM,IACNC,MAAO,IACPC,KAAM,KACNC,KAAM,IAgEOC,GA7DM,SAAA3J,GAAsB,IAApB4J,EAAoB5J,EAApB4J,eACfzG,EAAMpB,KAAKoB,MAMX1C,EAAUjB,KAEhB,OACEwB,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAMC,gBAAc,EAACpI,UAAWjB,EAAQ+H,MAEpCnI,OAAO0J,QAAQH,GAAgBI,IAAI,SAAA/C,GAAwB,IAAAgD,EAAA5J,OAAAC,EAAA,EAAAD,CAAA4G,EAAA,GAAtBpF,EAAsBoI,EAAA,GAAXtD,EAAWsD,EAAA,GACzD,OACEjJ,EAAAC,EAAAC,cAACgJ,EAAA,mBAAD,CACElH,IAAKnB,EACLsI,eAAe,UACfC,uBAAwB,IACxBC,uBAAwB,KACxBrJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAe5I,UAAWjB,EAAQkI,WAC/B7G,YAAOyI,SAAS1I,EAAW,IAAK,eACjCb,EAAAC,EAAAC,cAAA,QAAMQ,UAAWjB,EAAQuI,mBACvBhI,EAAAC,EAAAC,cAACsJ,GAAD,CAAa7D,MAAOA,KAGtB3F,EAAAC,EAAAC,cAAA,QAAMQ,UAAWjB,EAAQqI,iBAAzB,UAtBU,SAACnC,GACvB,OAAOA,EAAME,OAAO,SAAAC,GAAA,OAAAA,EAAEC,cAA+BlI,OAqBS4L,CAAgB9D,GAAlE,MAGDA,EAAMqD,IAAI,SAAAU,GAA4F,IAA1F/H,EAA0F+H,EAA1F/H,GAAII,EAAsF2H,EAAtF3H,KAAMwB,EAAgFmG,EAAhFnG,WAAYD,EAAoEoG,EAApEpG,KAAM4C,EAA8DwD,EAA9DxD,QAASyD,EAAqDD,EAArDC,SAAUC,EAA2CF,EAA3CE,OAAQpG,EAAmCkG,EAAnClG,iBAChE,OADmGkG,EAAjB3D,YAE9E/F,EAAAC,EAAAC,cAAC2J,EAAD,CAAmB7H,IAAKL,EAAII,KAAMA,EAAMrB,UAAWjB,EAAQ6H,OAC3DtH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAUL,IAAKL,GACf3B,EAAAC,EAAAC,cAAC4J,EAAD,CAAWxG,KAAMA,EAAMC,WAAYA,EAAYC,iBAAkBA,IAEjExD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAcyH,uBAAwB,CAACC,QAAS,SAAUxH,UAAWmH,EAAUjJ,UAAWjB,EAAQyI,eAC/FtH,EAAkB,IAAPmB,IAEd/B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAc5B,UAAW,CAACjB,EAAQ2I,cAAe3I,EAAQyI,eAAerE,KAAK,MACjE,WAATP,EAAoBgF,GAAuBsB,GAAU,MAExD5J,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAcyH,uBAAwB,CAACC,QAAS,SAAUtJ,UAAW,CAACjB,EAAQ4I,eAAgB5I,EAAQyI,eAAerE,KAAK,MACvHqC,EAAU,SAAW,IAExBlG,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,KAEK9H,EAAa,IAAPJ,EApFnB,OAqFY/B,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,WAAWC,UAAWC,IAAMpJ,GAAE,SAAAK,OAAWI,IACzE3B,EAAAC,EAAAC,cAACqK,EAAAtK,EAAD,6EC5FtBzB,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC8L,KAAM,CACJ5L,gBAAiBF,EAAMG,QAAQ0D,QAAQkI,MAEzC9L,MAAO,CACLC,gBAAiBF,EAAMG,QAAQF,MAAMG,MAEvC4L,WAAY,CACVC,aAAc,GACdC,SAAU,SACVC,IAAK,GACLC,OAAO,IAET7L,QAAS,CACP0D,QAAS,OACToI,WAAY,UAEdjE,KAAM,CACJhE,YAAapE,EAAMsM,QAAQ,IAE7BC,sBAAuB,CACrBhI,MAAO,UACPiI,OAAQ,oBACRrI,SAAU,UACVsI,UAAW,GAEbC,gBAAiB,CACfzI,QAAS,OACTC,cAAe,aAIbyI,GAAyB,SAACC,GAC9B,IAAM7L,EAAUjB,KACRwL,EAA8BsB,EAA9BtB,QAASuB,EAAqBD,EAArBC,OAAQC,EAAaF,EAAbE,SAEzB,OACExL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,UAAW,CAACjB,EAAQuK,GAAUvK,EAAQiL,YAAY7G,KAAK,KACvD4H,mBAAiB,kBACjBxM,QACAe,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQ2L,iBACtBpL,EAAAC,EAAAC,cAAA,QAAMyB,GAAG,kBAAkBjB,UAAWjB,EAAQR,SAE9B,SAAZ+K,EACEhK,EAAAC,EAAAC,cAACwL,GAAAzL,EAAD,CAAUS,UAAWjB,EAAQqH,OAC7B9G,EAAAC,EAAAC,cAACyL,GAAA1L,EAAD,CAAaS,UAAWjB,EAAQqH,OAEnC0E,GAEHxL,EAAAC,EAAAC,cAAA,YAAOqL,OAkDAK,GA3Cc,SAAA5M,GAA+C,IAA7C6M,EAA6C7M,EAA7C6M,gBAAiBC,EAA4B9M,EAA5B8M,gBAAiBC,EAAW/M,EAAX+M,MAAW7M,EAClDC,mBAAS,GADyCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrE+C,EADqE7C,EAAA,GAC9D8C,EAD8D9C,EAAA,GAG1EoC,EAAY,WACVU,EAASD,EAAQ,IAChB,KAEH,IAAMxC,EAAUjB,KAEVwN,EAAW1K,YAAoB,IAAIP,KAAQ,IAAIA,KAAK8K,IAAoB,EAC5E7L,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,qBAAiB1D,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,YAAYK,UAAU,QAAQrJ,EAAkB,IAAID,KAAQ,IAAIA,KAAK8K,KAA1G,2BACA7L,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,4BAXwE2C,EAapDC,YAAYhC,IAA3BkC,EAbmEnH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,MAepE6F,EAAWH,EACbzK,YAAoBP,KAAKoB,MAAoB,IAAb4J,EAAMhK,MACtC,KAWEoK,GAA4BJ,GAAwB,WAAfA,EAAMzI,MAAqByI,EAAMvI,mBAAqB0I,GAAYA,EAAW,GAAKA,EAAW,GACpI,KACAlM,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQpC,QAAQ,WAAWtJ,UAAWjB,EAAQwL,sBAAuBrE,KAAK,QAAQyF,QAX5D,WACxB7F,EAAY,CACVa,UAAW,CACT1F,GAAIoK,EAAMpK,GACV6B,iBAAkB0I,OAOpB,gBAKJ,OAAOlM,EAAAC,EAAAC,cAACoM,GAAD,CACLC,MAAM,YACNvC,QAASjJ,KAAKoB,MAAQ2J,EAAkB,QAAU,OAClDP,OAAQY,GACPH,wBCtEUQ,GA/Be,SAAAxN,GAA2C,IAAxC2C,EAAwC3C,EAAxC2C,GAAI8K,EAAoCzN,EAApCyN,oBAAqBC,EAAe1N,EAAf0N,SAAerG,EACjDC,YAAYhC,IAA3BkC,EADgEnH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,MAgBvE,OACErG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACE1D,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYU,WAAS,GAArB,yBAGA3M,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAmBC,MAAOJ,EAAqBK,WAAS,EAACJ,SAlB3B,SAACpO,EAAOsL,GACxCpD,EAAY,CACVa,UAAW,CACT1F,KACAiI,YAIA8C,GACFA,EAAS9C,KAUP5J,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAcF,MAAM,QAApB,QACA7M,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAcF,MAAM,SAApB,SACA7M,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAcF,MAAM,QAApB,QACA7M,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAcF,MAAM,QAApB,WC3BFrO,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCgM,WAAY,CACVC,aAAc,GACdE,IAAK,GACLC,OAAO,GACPlM,gBAAiBF,EAAMG,QAAQmO,KAAKC,KACpCC,eAAgB,UAElBjO,QAAS,CACP0D,QAAS,OACToI,WAAY,aAIVM,GAAyB,SAACC,GAC9B,IAAM7L,EAAUjB,KAEhB,OACEwB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,UAAW,CAACjB,EAAQiL,YAAY7G,KAAK,KACrC4H,mBAAiB,kBACjBxM,QACEe,EAAAC,EAAAC,cAACiN,GAA0B7B,MAYpB8B,GANU,SAAC9B,GACxB,OACEtL,EAAAC,EAAAC,cAACmN,GAA2B/B,iCCL1B9M,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC4O,IAAK,CACH1C,SAAU,QACV2C,OAAQ7O,EAAMsM,QAAQ,GACtBxC,MAAO9J,EAAMsM,QAAQ,GACrBF,OAAQ,GAEV0C,YAAa,CACXrC,UAAWzM,EAAMsM,QAAQ,OA6HdyC,OAxGf,SAAAzO,GAAsD,IAAlC0O,EAAkC1O,EAAlC0O,MAAOC,EAA2B3O,EAA3B2O,yBACnBlO,EAAUjB,KAEVoP,EAAUF,EAAMG,OAAOlM,GAHuBmM,EAKVC,YAAShK,EAAa,CAACsD,UAAW,CAACuG,aAArElH,EAL4CoH,EAK5CpH,QAASsH,EALmCF,EAKnCE,KAAMrP,EAL6BmP,EAK7BnP,MAAOsP,EALsBH,EAKtBG,QACxBC,GAAWxH,IAAY/H,EAEvB+N,EAAW1O,IAAMmQ,YAAY,YACT,IAApBC,SAASC,QACXJ,KAED,CAACA,IAEJzQ,aAAiB,mBAAoBkP,EAAU0B,UAdK,IAAA/H,EAgBoBC,YAAYlC,GAAc,CAChGkK,eAAgB,CAAC,gBAjBiC/H,EAAAlH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAgB7CkI,EAhB6ChI,EAAA,GAAAE,EAAAF,EAAA,GAgBtBiI,EAhBsB/H,EAgB/BC,QAAiC+H,EAhBFhI,EAgBL9H,MAIzCoK,EAAUmF,GAAWF,EAAKjF,QAAQhJ,QAAQ2O,UAAUC,OAAO,SAACC,EAAK7C,GACrE,GAAI6C,EAAI/Q,OAAS,EAAG,CAClB,IAAMgR,EAAOD,EAAIA,EAAI/Q,OAAS,GAE9B,SAAA0D,OAAAlC,OAAAyP,EAAA,EAAAzP,CAAWuP,GAAX,CAAAvP,OAAA0P,EAAA,EAAA1P,CAAA,GACK0M,EADL,CAEEpC,SAAU3I,EAAkB,IAAID,KAAkB,IAAbgL,EAAMhK,MAAc,IAAIhB,KAAiB,IAAZ8N,EAAK9M,WAGzE,MAAO,CAAC1C,OAAA0P,EAAA,EAAA1P,CAAA,GAAI0M,EAAL,CAAYpC,SAAU,SAE9B,IAAI+E,UAGDM,EAnDR,SAA4BjG,GAC1B,IAAKA,GAAWA,EAAQlL,OAAS,EAAG,OAAO,KAE3C,IAAMoR,EAAgBlG,EAAQ,GAC9B,OAAO,IAAIhI,KAA0B,IAArBkO,EAAclN,MA+CNmN,CAAmBnG,GACrCoG,EA7CR,SAA0BC,GACxB,IAAKA,EAAmB,OAAO,KAE/B,IAAMjO,EAAQiO,EAAkBC,WAE1BC,EADUnO,GAAS,IAAMA,EAAQ,EACH,IAAM,IAE1C,OAAOoO,aAAWH,EAAmBE,GAsCbE,CAAiBR,GAErCrB,GAA4BwB,GAC9BpG,EAAQ0G,QAAQ,CACd9N,GAAI,SACJI,KAAM2N,KAAKC,MAAMR,EAAgBS,UAAY,KAC7CrM,WAAY,EACZoG,SAAU,KACV5D,aAAa,IAIjB,IAAM6C,EAAiBG,GAAWA,EAAQ4F,OAAO,SAACC,EAAK7C,GACrD,IAAM8D,EAAMC,aAAW,IAAI/O,KAAkB,IAAbgL,EAAMhK,OAAc6N,UAGpD,OAFAhB,EAAIiB,GAAOjB,EAAIiB,IAAQ,GACvBjB,EAAIiB,GAAKE,KAAKhE,GACP6C,GACN,IAOH,OACE5O,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,MACK/E,GAAS8P,IAAkBzO,EAAAC,EAAAC,cAAC8P,EAAD,CAAW/Q,QAASN,GAAS8P,IAE3DzO,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAWvP,UAAWjB,EAAQ+N,YAAa0C,SAAS,MAClDlQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAKnG,QAAQ,WAAW/G,MAAM,UAAUmH,aAAW,SAAS1J,UAAWjB,EAAQ6N,IAAKjB,QAVvE,WAEjB,OAAOkC,EAAY,CAAElH,UAAW,CAAEtF,KAAM2N,KAAKC,MAAM5O,KAAKoB,MAAQ,KAAOyL,cAQsCwC,SAAU5B,GACjHxO,EAAAC,EAAAC,cAACmQ,EAAApQ,EAAD,MADF,gBAKGyG,GAAWsH,GAAQgB,EAAkB,GACtChP,EAAAC,EAAAC,cAACoQ,GAAD,CACEzE,gBAAiBmD,EAAgBY,UACjC9D,gBAAiBqD,EAAgBS,UACjC7D,MAAOhD,GAAWA,EAAQlL,OAAS,EAAIkL,EAAQ,GAAK,QAIrDrC,GAAWsH,GAAQA,EAAKjF,QAAQlL,OAAS,GAAgC,OAA3BmQ,EAAKjF,QAAQ,GAAGa,QAA4C,WAAzBoE,EAAKjF,QAAQ,GAAGzF,MAClGtD,EAAAC,EAAAC,cAACqQ,GAAD,CACE5O,GAAIqM,EAAKjF,QAAQ,GAAGpH,MAGtB+E,IAAY/H,GACdqB,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,MACK9J,GAAWsH,GAAQA,EAAKjF,QAAQlL,OAAS,GAC1CmC,EAAAC,EAAAC,cAACuQ,GAAD,CAAc7H,eAAgBA,KAG7BlC,GAAWsH,GAAgC,IAAxBA,EAAKjF,QAAQlL,QACnCmC,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,KACE7I,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAcC,QAAQ,mEAO1BmE,GAAW1G,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,gDCtJflS,WAAYC,sBAAW,SAAAC,GAAK,MAAK,CACrCiS,aAAc,CACZhG,aAAc,QAkCHiG,GA9BD,SAAA5R,GAAqD,IAAnDsE,EAAmDtE,EAAnDsE,KAAM0K,EAA6ChP,EAA7CgP,KAAM6C,EAAuC7R,EAAvC6R,MAAOC,EAAgC9R,EAAhC8R,QAASC,EAAuB/R,EAAvB+R,kBACpCtR,EAAUjB,KAEVwS,EAAWhT,IAAMiT,YACjBC,EAAWjT,iBAAO,MAgBxB,OAdAC,oBAAU,WAER,OADAgT,EAAS/S,SAAW+S,EAAS/S,QAAQgT,SAC9B7N,GACL,IAAK,OACH4N,EAAS/S,QAAUiT,QAAcJ,EAAS7S,QAAS6P,EAAM8C,EAASC,GAClE,MACF,IAAK,MACHG,EAAS/S,QAAUiT,OAAaJ,EAAS7S,QAAS6P,EAAM8C,EAASC,GAIrE,OAAO,kBAAMG,GAAYA,EAAS/S,QAAQgT,WACzC,CAACD,EAAUF,EAAUhD,EAAM8C,EAASC,IAGrC/Q,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQkR,cACtB3Q,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,MACjB6G,GAEH7Q,EAAAC,EAAAC,cAAA,OAAKmR,IAAKL,0BCxBVxS,GAAYC,sBAAW,SAAAC,GAAK,MAAK,CACrC4S,iBAAkB,CAChBC,OAAQ,UACRC,KAAM,WAERC,mBAAoB,CAClBF,OAAQ,UACRC,KAAM,WAERE,KAAM,CACJ3O,UAAW,QACX4O,OAAQ,aAEVC,OAAQ,CACNhH,SAAU,WACVC,IAAK,MACLtC,KAAM,MACNN,WAAY,QACZkD,UAAW,YAgMA0G,GA5LD,SAAA7S,GAAe,IAAb4O,EAAa5O,EAAb4O,QAAa1O,EACKC,mBAAS,MADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpB4S,EADoB1S,EAAA,GACV2S,EADU3S,EAAA,GAAA4S,EAEmB7S,mBAAS,MAF5B8S,EAAA5S,OAAAC,EAAA,EAAAD,CAAA2S,EAAA,GAEpBE,EAFoBD,EAAA,GAEHE,EAFGF,EAAA,GAIrBxS,EAAUjB,KAEV4T,EAAwB,SAACC,GAC7B,OAAQA,GACN,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,GACT,IAAK,UACH,OAAO,GACT,QACE,OAAO,KAfcvE,EAmBeC,YAASjJ,GAAe,CAChEwN,YAAa,oBACbjL,UAAW,CACTuG,UACA2E,QAASH,EAAsBF,MAJ5BxL,EAnBoBoH,EAmBpBpH,QAAe8L,EAnBK1E,EAmBXE,KAnBWyE,GAAA3E,EAmBMnP,MAQgE+T,YAAa1N,GAAgB,CAC5HsN,YAAa,oBACbjL,UAAW,CACTuG,UACA2E,QAASH,EAAsBF,OA/BRS,EAAAtT,OAAAC,EAAA,EAAAD,CAAAoT,EAAA,GA2BpBG,EA3BoBD,EAAA,GAAAE,EAAAF,EAAA,GA2BKG,EA3BLD,EA2BJnM,QAAiCqM,EA3B7BF,EA2BuB7E,KA3BvB6E,EA2B4ClU,MAYvE,IAJI6T,GAAcM,GAAqBC,GACrCH,KAGGJ,EACH,OAAOxS,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,OAGd,IAAMsC,EAAgB,CACpBC,OAAQT,EAAUU,MAAMC,mBAAmBnK,IAAI,SAAAlD,GAAA,OAAAA,EAAE1D,OACjDgR,OAAQ,CACN,CACEpF,KAAMwE,EAAUU,MAAMC,mBAAmBnK,IAAI,SAAA/C,GAAA,OAAAA,EAAE1C,aAC/C7C,UAAWjB,EAAQ6R,oBAKnB+B,EAAmB,CACvBJ,OAAQT,EAAUU,MAAMI,sBAAsBtK,IAAI,SAAAC,GAAA,OAAAA,EAAE7G,OACpDgR,OAAQ,CACN,CACEpF,KAAMwE,EAAUU,MAAMI,sBAAsBtK,IAAI,SAAAU,GAAA,OAAAA,EAAE6J,gBAClD7S,UAAWjB,EAAQ6R,oBAKnBkC,EAA6B,SAACC,GAAD,OAAW/D,KAAKC,MAAM8D,EAAK,GAAK,IAAM,IAAIC,QAAQ,IAE/EC,EAAkBZ,EAAgB,CACtCE,OAAQF,EAAcG,MAAMU,aAAa5K,IAAI,SAAA6K,GAAA,OAAAA,EAAEzR,OAC/CgR,OAAQ,CACN,CACEpF,KAAM+E,EAAcG,MAAMU,aAAa5K,IAAI,SAAA8K,GAAA,IAAEC,EAAFD,EAAEC,yBAAF,OAAgCP,EAA2BO,KACtGrT,UAAWjB,EAAQ6R,kBAErB,CACEtD,KAAM+E,EAAcG,MAAMU,aAAa5K,IAAI,SAAAgL,GAAA,IAAEC,EAAFD,EAAEC,0BAAF,OAAiCT,EAA2BS,KACvGvT,UAAWjB,EAAQgS,sBAGrB,KAEEyC,EAAkBnB,EAAgB,CACtCE,OAAQF,EAAcG,MAAMiB,kBAAkBnL,IAAI,SAAAoL,GAAA,OAAAA,EAAEhS,OACpDgR,OAAQ,CACN,CACEpF,KAAM+E,EAAcG,MAAMiB,kBAAkBnL,IAAI,SAAAqL,GAAA,IAAEC,EAAFD,EAAEC,sBAAF,OAA6Bd,EAA2Bc,KACxG5T,UAAWjB,EAAQ6R,oBAGrB,KAEEiD,EAAe,SAAChX,GAAD,OAAO,SAACsP,EAAO2H,GAClC,OAAIA,EAAQjX,IAAM,EACTsP,EAAM4H,MAAM,KAAK1U,MAAM,EAAG,GAAG8D,KAAK,KAEpC,KAGH6Q,EAAa,SAACC,GAAD,MAAa,CAC9BC,UAAU,EACVC,WAAW,EACXC,IAAK,EACLC,MAAO,CACLC,sBAAuB,SAACnI,GAAD,SAAAtL,OAAcsL,GAAdtL,OAAsBoT,IAC7CM,aAAa,GAEfC,MAAO,CACLF,sBAAuBT,EAAa,MAIlCxD,EAAoB,CACxB,CAAC,gCAAiC,CAChC8D,WAAW,EAEXK,MAAO,CACLF,sBAAuBT,EAAa,OASpC7U,EAAc,SAACyV,GACfA,GACFhD,EAAmBgD,GAGrBpD,EAAY,OAGd,OACE/R,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQiS,MACtB1R,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQgJ,gBAAc,cAAcC,gBAAc,OAAOhJ,QAf3C,SAAC8I,GACnBpD,EAAYoD,EAAEG,iBAcV,eAEEtV,EAAAC,EAAAC,cAACqV,GAAAtV,EAAD,OAEFD,EAAAC,EAAAC,cAACsV,GAAA,EAAD,CACE7T,GAAG,cACHmQ,SAAUA,EACV2D,aAAW,EACXlW,KAAMmW,QAAQ5D,GACdtR,QAASd,GAETM,EAAAC,EAAAC,cAACyV,GAAA,EAAD,CAAUtJ,QAAS3M,EAAYkW,YAAW,SAA1C,aACA5V,EAAAC,EAAAC,cAACyV,GAAA,EAAD,CAAUtJ,QAAS3M,EAAYkW,YAAW,UAA1C,cACA5V,EAAAC,EAAAC,cAACyV,GAAA,EAAD,CAAUtJ,QAAS3M,EAAYkW,YAAW,YAA1C,kBAGN5V,EAAAC,EAAAC,cAAA,OAAK2V,MAAO,CAACC,OAAQ,KACjBpP,GAAW1G,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,CAAkB9J,KAAM,MAEvC5G,EAAAC,EAAAC,cAAC6V,GAAD,CACEzS,KAAK,OACL0K,KAAMgF,EACNnC,MAAM,aACNC,QAAS4D,EAAW,MACpB3D,kBAAmBA,IACrB/Q,EAAAC,EAAAC,cAAC6V,GAAD,CACEzS,KAAK,OACL0K,KAAMqF,EACNxC,MAAM,gBACNC,QAAS4D,EAAW,IACpB3D,kBAAmBA,IAEpB/Q,EAAAC,EAAAC,cAAA,OAAK2V,MAAO,CAACjL,SAAU,cACnB+I,GAAmB3T,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,CAAkBhQ,UAAWjB,EAAQmS,SAC3D5R,EAAAC,EAAAC,cAAC6V,GAAD,CACEzS,KAAK,OACL0K,KAAM2F,EACN9C,MAAM,uBACNC,QAAS4D,EAAW,KACpB3D,kBAAmBA,KAGrB/Q,EAAAC,EAAAC,cAAA,OAAK2V,MAAO,CAACjL,SAAU,cAClBsJ,GAAmBlU,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,CAAkBhQ,UAAWjB,EAAQmS,SAC3D5R,EAAAC,EAAAC,cAAC6V,GAAD,CACEzS,KAAK,OACL0K,KAAMkG,EACNrD,MAAM,oBACNC,QAAS4D,EAAW,KACpB3D,kBAAmBA,OCnNvBvS,GAAYC,sBAAW,SAAAC,GAAK,MAAK,CACrC4S,iBAAkB,CAChBC,OAAQ,UACRC,KAAM,WAERC,mBAAoB,CAClBF,OAAQ,UACRC,KAAM,cAuFKwE,GAnFS,SAAAhX,GAAe,IAAb4O,EAAa5O,EAAb4O,QAClBnO,EAAUjB,KADqBsP,EAGKC,YAAS7I,GAAsB,CACvEoN,YAAa,oBACbjL,UAAW,CACTuG,aAHGlH,EAH8BoH,EAG9BpH,QAAe8L,EAHe1E,EAGrBE,KAHqBF,EAGJnP,MAOjC,IAAK6T,EACH,OAAOxS,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,OAGd,IAAMsC,EAAgB,CACpBC,OAAQT,EAAUyD,iBAAiBC,oBAAoBlN,IAAI,SAAAlD,GAAA,OAAAA,EAAEqQ,kBAC7D/C,OAAQ,CACN,CACEpF,KAAMwE,EAAUyD,iBAAiBC,oBAAoBlN,IAAI,SAAA/C,GAAA,OAAAA,EAAE1C,aAC3D7C,UAAWjB,EAAQ6R,oBAKnB+B,EAAmB,CACvBJ,OAAQT,EAAUyD,iBAAiBG,uBAAuBpN,IAAI,SAAAC,GAAA,OAAAA,EAAEkN,kBAChE/C,OAAQ,CACN,CACEpF,KAAMwE,EAAUyD,iBAAiBG,uBAAuBpN,IAAI,SAAAU,GAAA,OAAAA,EAAE6J,gBAC9D7S,UAAWjB,EAAQ6R,oBAKnBiD,EAAe,SAAChX,GAAD,OAAO,SAACsP,EAAO2H,GAClC,OAAIA,EAAQjX,IAAM,EACTsP,EAAM4H,MAAM,KAAK1U,MAAM,EAAG,GAAG8D,KAAK,KAEpC,KAGH6Q,EAAa,SAACC,GAAD,MAAa,CAC9BC,UAAU,EACVC,WAAW,EACXC,IAAK,EACLC,MAAO,CACLC,sBAAuB,SAACnI,GAAD,SAAAtL,OAAcsL,GAAdtL,OAAsBoT,IAC7CM,aAAa,GAEfC,MAAO,CACLF,sBAAuBT,EAAa,MAIlCxD,EAAoB,CACxB,CAAC,gCAAiC,CAChC8D,WAAW,EAEXK,MAAO,CACLF,sBAAuBT,EAAa,OAK1C,OAAOvU,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,OAAK2V,MAAO,CAACC,OAAQ,KACjBpP,GAAW1G,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,CAAkB9J,KAAM,MAEvC5G,EAAAC,EAAAC,cAAC6V,GAAD,CACEzS,KAAK,MACL0K,KAAMgF,EACNnC,MAAM,sBACNC,QAAS4D,EAAW,MACpB3D,kBAAmBA,IACrB/Q,EAAAC,EAAAC,cAAC6V,GAAD,CACEzS,KAAK,MACL0K,KAAMqF,EACNxC,MAAM,yBACNC,QAAS4D,EAAW,IACpB3D,kBAAmBA,kEC9FVsF,GAFQrY,IAAMsY,cAAc,MCArCC,GAAU,SAACC,GACf,MAAO,CACLA,UACAC,KAAM,mBAAAC,EAAA9Y,UAAAC,OAAIgQ,EAAJ,IAAA8I,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAI/I,EAAJ+I,GAAAhZ,UAAAgZ,GAAA,OAAeC,IAAYC,WAAZ,GAAaN,GAAbjV,OAAyBsM,OAIrCkJ,GAAWR,GAAS,KACpBS,GAAaT,GAAS,WACtBU,GAAYV,GAAS,sCACrBW,GAAYX,GAAS,aCM5B/X,GAAYC,YAAW,CAC3B0Y,OAAQ,CACNvY,gBAAiB,WAEnBwY,OAAQ,CACNzF,OAAQ,GACR0F,MAAO,GACPvB,OAAQ,GACR7N,WAAY,QAEdqP,QAAS,CACPxB,OAAQ,GACRyB,YAAa,MA2DFC,GAvDA,SAAAxY,GAA6B,IAA3ByY,EAA2BzY,EAA3ByY,YAAajM,EAAcxM,EAAdwM,SACtB/L,EAAUjB,KACVkZ,EAAUC,qBAAWtB,IAFeuB,EAIV5Z,IAAMmB,SAAS,MAJL0Y,EAAAxY,OAAAC,EAAA,EAAAD,CAAAuY,EAAA,GAInC9F,EAJmC+F,EAAA,GAIzB9F,EAJyB8F,EAAA,GAU1C,SAASnY,IACPqS,EAAY,MAGd,OAAO/R,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACL1D,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,CAAQpX,UAAWjB,EAAQ0X,QACzBnX,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAASC,gBAAgB,EAAMtX,UAAWjB,EAAQ6X,SAC/CG,EAEDzX,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,MAApB,aAIC0N,GACC1X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACE1D,EAAAC,EAAAC,cAAC+X,GAAA,EAAD,CAAQC,IAAI,kBACJC,IAAKT,EAAQU,SACbhD,gBAAc,YACdC,gBAAc,OACd3U,UAAWjB,EAAQ2X,OACnB/K,QAxBlB,SAAqB/N,GACnByT,EAAYzT,EAAMgX,kBAwBVtV,EAAAC,EAAAC,cAACsV,GAAA,EAAD,CACE7T,GAAG,YACHmQ,SAAUA,EACV1R,aAAc,CAACC,SAAU,SAAUC,WAAY,SAC/C+X,mBAAoB,KACpB5C,aAAW,EACXlW,KAAMmW,QAAQ5D,GACdtR,QAASd,GAETM,EAAAC,EAAAC,cAACyV,GAAA,EAAD,CAAUtL,UAAWiO,IAAYpX,GAAI8V,GAAWP,OAAQpK,QAAS3M,GAAjE,cAOVM,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAASrX,UAAWjB,EAAQ6X,UAE5BtX,EAAAC,EAAAC,cAACqY,GAAA,EAAD,CAAKC,GAAI,GACRhN,KC5CUyL,GA5BG,SAAC3L,GAAU,IACnBoC,EAAmBpC,EAAnBoC,MAAO+K,EAAYnN,EAAZmN,QAETC,EAAMhL,EAAMG,OAAO6K,KAAO,OAMhC,OAAO1Y,EAAAC,EAAAC,cAACyY,GAAD,KACL3Y,EAAAC,EAAAC,cAAC0Y,GAAA,EAAD,CAAM/L,MAAO6L,EAAKhM,SALE,SAACyI,EAAGtI,GACxB4L,EAAQ1I,KAAK8G,YAAanJ,EAAM+I,KAAPpX,OAAA0P,EAAA,EAAA1P,CAAA,GAAkBqO,EAAMG,OAAxB,CAAgC6K,IAAe,SAAV7L,OAAmB/O,EAAY+O,QAK3F7M,EAAAC,EAAAC,cAAC2Y,GAAA,EAAD,CAAKhM,MAAM,OAAOhG,MAAM,SACxB7G,EAAAC,EAAAC,cAAC2Y,GAAA,EAAD,CAAKhM,MAAM,QAAQhG,MAAM,UACzB7G,EAAAC,EAAAC,cAAC2Y,GAAA,EAAD,CAAKhM,MAAM,aAAahG,MAAM,gBAGvB,SAAR6R,GACC1Y,EAAAC,EAAAC,cAAC4Y,GAAcxN,GAER,UAARoN,GACC1Y,EAAAC,EAAAC,cAAC6Y,GAAD,CAAOnL,QAASF,EAAMG,OAAOlM,KAEtB,eAAR+W,GACC1Y,EAAAC,EAAAC,cAAC8Y,GAAD,CAAiBpL,QAASF,EAAMG,OAAOlM,OCZvCnD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC4O,IAAK,CACH1C,SAAU,QACV2C,OAAQ7O,EAAMsM,QAAQ,GACtBxC,MAAO9J,EAAMsM,QAAQ,GACrBF,OAAQ,MA0CGmO,OAtCf,WACE,IAAMxZ,EAAUjB,KADOsP,EAGUC,YAASrJ,IAAlCgC,EAHeoH,EAGfpH,QAASsH,EAHMF,EAGNE,KAHM3H,GAAAyH,EAGAnP,MAEiD2H,YAAY1B,GAAc,CAChGyC,UAAW,CAAC6R,KAAM,aAClB5K,eAAgB,CAAC,gBAPI/H,EAAAlH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAKhB8S,EALgB5S,EAAA,GAAAE,EAAAF,EAAA,GAKOiI,EALP/H,EAKFC,QAKrB,OAVuBD,EAKwB9H,MAKvCqB,EAAAC,EAAAC,cAACyY,GAAD,KACN3Y,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAWC,SAAS,MAClBlQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAKnG,QAAQ,WAAW/G,MAAM,UAAUmH,aAAW,YAAY1J,UAAWjB,EAAQ6N,IAAKjB,QAAS8M,EAAa/I,SAAU5B,GACrHxO,EAAAC,EAAAC,cAACmQ,EAAApQ,EAAD,MADF,aAKEyG,GAAW1G,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,OACVhK,GACD1G,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,KACExQ,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAMC,gBAAgB,GACpB9I,EAAAC,EAAAC,cAACgJ,EAAA,mBAAD,CACEC,eAAe,UACfC,uBAAwB,IACxBC,uBAAwB,KACtB2E,EAAKoL,OAAOpQ,IAAI,SAAAqQ,GAAK,OACrBrZ,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAUL,IAAKqX,EAAM1X,GAAI2X,SAAO,EAACC,QAAM,EAAClP,UAAWiO,IAAYpX,GAAI+V,GAAUR,KAAK,CAAC9U,GAAI0X,EAAM1X,MAC3F3B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KAAe+W,EAAMG,iCCpDjChb,GAAYC,YAAW,CAC3B+I,KAAM,CACJoD,SAAU,WACV6O,UAAW,IAEb7H,OAAQ,CACNhH,SAAU,WACVhM,gBAAiB,QACjBiM,KAAM,EACN0C,QAAS,EACThF,KAAM,EACNC,MAAO,EACPsC,OAAQ,KAoCG4O,GAhCI,SAAA1a,GAAiB,IAAd2a,EAAc3a,EAAd2a,QACdla,EAAUjB,KAEVob,EAAiB,SAACC,GACtBF,EAAQE,IAJwB3a,EAOJC,oBAAS,GAPLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAO3BwH,EAP2BtH,EAAA,GAOlB0a,EAPkB1a,EAAA,GAiBlC,OARAlB,oBAAU,WACR,IAAI6b,EAAUC,WAAW,WACvBF,GAAW,IACV,MAEH,OAAO,kBAAMG,aAAaF,MAGpB/Z,EAAAC,EAAAC,cAACyY,GAAD,KACN3Y,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQ+H,MACpBd,GAAW1G,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQmS,QAAQ5R,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,OAC7C1Q,EAAAC,EAAAC,cAACga,GAAA,YAAD,CACEC,SAAS,2EACTC,WAAW,QACXC,UAAWT,EACXU,UAAWV,EACXW,YAAY,EACZC,aAAa,qKChDd,SAASC,GAASC,GACvB,IAAIC,EAAW,KACXC,GAAU,EAcd,OAAO,WAAa,QAAAlE,EAAA9Y,UAAAC,OAATgd,EAAS,IAAAlE,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATiE,EAASjE,GAAAhZ,UAAAgZ,GACdgE,EACFD,EAAW,kBAAMD,EAAE5D,WAAF,EAAM+D,IAd3B,SAASC,EAAQJ,GACfE,GAAU,EACVF,IAAKK,KAAK,WAER,GADAH,GAAU,EACM,MAAZD,EAAkB,CACpB,IAAMK,EAASL,EACfA,EAAW,KACXG,EAAQE,MASVF,CAAQ,kBAAMJ,EAAE5D,WAAF,EAAM+D,MCmB1B,IAAMrc,GAAYC,YAAW,SAACC,GAAD,OAC3Buc,aAAa,CACXzT,KAAM,CACJ0T,QAASxc,EAAMsM,QAAQ,EAAG,IAE5BmQ,SAAU,CACRxY,QAAS,OACTC,cAAe,UAEjBR,KAAM,CACJ6F,WAAY,IAEdmT,MAAO,CACLnY,MAAO,UACPoY,SAAU,WAEZC,YAAa,CACX3Y,QAAS,OACTC,cAAe,MACfsY,QAAS,QAKTK,GAAwB,SAACC,EAAO5N,EAAS8M,GAC7C,IAAIe,EAAW,KAEf,IACEA,EAAWD,EAAME,UAAU,CAACC,MAAO5X,EAAasD,UAAW,CAACuG,aAC5D,MAAOuH,IAIJsG,GAILD,EAAMI,WAAW,CACfD,MAAO5X,EAAasD,UAAW,CAACuG,WAAUI,KAAM,CAC9CjF,QAAS2R,EAAGe,EAAS1S,aAuPZ8S,OAjPf,SAAA7c,GAAkC,IAAd0O,EAAc1O,EAAd0O,MAAOM,EAAOhP,EAAPgP,KACjBrM,EAAO+L,EAAMG,OAAblM,GAEFiM,EAAUI,EAAKjC,MAAM6B,QAHKvH,EAKYC,YAAY9B,GAAc,CACpE6C,UAAW,CAAC1F,MACZma,OAAQ,SAACN,EAAD1V,GAAoC,IAAnBiW,EAAmBjW,EAA1BkI,KAAO+N,YACvBR,GAAsBC,EAAO5N,EAAS,SAAC7E,GACrC,OAAOA,EAAQlD,OAAO,SAAAkG,GACpB,OAAOA,EAAMpK,KAAOoa,EAAYC,iBAVRzV,EAAAlH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAKzB0V,EALyBxV,EAAA,GAKL0V,EALK1V,EAAA,GAKXyH,KALW9O,EAgBRC,mBAAS,IAAI4B,KAAuB,IAAlBiN,EAAKjC,MAAMhK,OAhBrB3C,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAgBzBkD,EAhByBhD,EAAA,GAgBnB8c,EAhBmB9c,EAAA,GAAA4S,EAiBE7S,mBAAS6O,EAAKjC,MAAMxI,YAjBtB0O,EAAA5S,OAAAC,EAAA,EAAAD,CAAA2S,EAAA,GAiBzBmK,EAjByBlK,EAAA,GAiBdmK,EAjBcnK,EAAA,GAAAoK,EAkBQld,mBAA6B,WAApB6O,EAAKjC,MAAMzI,MAlB5BgZ,EAAAjd,OAAAC,EAAA,EAAAD,CAAAgd,EAAA,GAkBzBE,EAlByBD,EAAA,GAkBXE,EAlBWF,EAAA,GAAAG,EAmBsBtd,mBAAS6O,EAAKjC,MAAMnC,QAnB1C8S,EAAArd,OAAAC,EAAA,EAAAD,CAAAod,EAAA,GAmBzBhQ,EAnByBiQ,EAAA,GAmBJC,EAnBID,EAAA,GAAAE,EAoBFzd,mBAAS6O,EAAKjC,MAAM7F,SApBlB2W,EAAAxd,OAAAC,EAAA,EAAAD,CAAAud,EAAA,GAoBzB1W,EApByB2W,EAAA,GAoBhBC,EApBgBD,EAAA,GAAAE,EAqBc5d,mBAAS6O,EAAKjC,MAAMvI,kBArBlCwZ,EAAA3d,OAAAC,EAAA,EAAAD,CAAA0d,EAAA,GAqBzBE,EArByBD,EAAA,GAqBRE,EArBQF,EAAA,GAuB1BG,EAASC,cAET5W,EAAc2H,sBAAYsM,GAAS,SAAApT,GACvC,OAAO8V,EAAOE,OAAO,CACnBC,SAAUhZ,GACV+C,UAAUhI,OAAA0P,EAAA,EAAA1P,CAAA,CACRsC,MACG0F,GAELyU,OAAQ,SAACN,GACPD,GAAsBC,EAAO5N,EAAS,SAAC7E,GACrC,OAAOA,EAAQwU,KAAK,SAACC,EAAIC,GAAL,OAAYA,EAAG1b,KAAOyb,EAAGzb,cAIjD,CAACob,EAAQxb,IAEP+b,EAAa,SAACtb,GAClB8Z,EAAQ9Z,GACRoE,EAAY,CACVzE,KAAM2N,KAAKC,MAAMvN,EAAKwN,UAAY,QAIhC+N,EAAiB,SAACC,EAAgBC,GACtC,OAAuB,IAAnBD,EACK,SAGFC,EACH,SACA,SAoCApe,EAAUjB,KAEhB,GAAIyd,EACF,OAAOjc,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAU5c,GAAI+V,GAAUR,KAAK,CAAC9U,GAAIiM,MAG3C,I9B7KuB/M,E8BqLjBkd,EAA0BxB,EAU5B,KATAvc,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAM1W,MAAI,EAAC2W,GAAI,GAAIC,GAAI,IACvBle,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAO9P,UAAWjB,EAAQ+H,MACxBxH,EAAAC,EAAAC,cAACiN,GAAD,CACExL,GAAIA,EACJ8K,oBAAqBA,EACrBC,SAxB2B,SAAC9C,GAClC+S,EAAuB/S,QA6BnBuU,EAA4B5B,EAiB9B,KAhBAvc,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAM1W,MAAI,EAAC2W,GAAI,GAAIC,GAAI,IACvBle,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAO9P,UAAWjB,EAAQ+H,MACxBxH,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYU,WAAS,GAArB,sBACsBsQ,EADtB,OAGAjd,EAAAC,EAAAC,cAACke,GAAA,EAAD,CACEC,aAAcpB,EACdqB,kBAAkB,OAClBC,KAAM,EACNC,OAAK,EACLC,IAAK,EACLC,IAAK,GACLhS,SAAU,SAACyI,EAAGtI,GAAJ,OAjCY,SAACA,GAC7BqQ,EAAmBrQ,GAEnBrG,EAAY,CACVhD,iBAAkBqJ,IA6BU8R,CAAsB9R,QAMtD,OACG7M,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKQ,UAAW,CAAC,aAAcjB,EAAQ6b,aAAazX,KAAK,MACvD7D,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQ0b,UACtBnb,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQ1L,UAAWjB,EAAQ2b,MAAO/O,QAAS,kBAAMqR,EAAWkB,aAASxc,EAAM,MACzEpC,EAAAC,EAAAC,cAAC2e,GAAA5e,EAAD,OAEFD,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,MAClBhK,EAAAC,EAAAC,cAAA,a9B5NYW,E8B4NIuB,E9B3NpBtB,YAAO,IAAIC,KAAKF,GAAY,S8B6N1Bb,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQ1L,UAAWjB,EAAQ2b,MAAQ/O,QAAS,kBAAMqR,EAAWoB,aAAS1c,EAAM,MAC1EpC,EAAAC,EAAAC,cAACqV,GAAAtV,EAAD,QATN,IAaED,EAAAC,EAAAC,cAAA,OAAKQ,UAAWjB,EAAQ0b,UACtBnb,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQ1L,UAAWjB,EAAQ2b,MAAO/O,QAAS,kBAAMqR,EAAWnO,aAAWnN,EAAM,MAC3EpC,EAAAC,EAAAC,cAAC2e,GAAA5e,EAAD,OAEFD,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,MAClBhK,EAAAC,EAAAC,cAAA,Y9BpON,SAAoBW,GACzB,OAAOC,YAAO,IAAIC,KAAKF,GAAY,M8BmOjBke,CAAW3c,KAEpBpC,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQ1L,UAAWjB,EAAQ2b,MAAO/O,QAAS,kBAAMqR,EAAWsB,aAAW5c,EAAM,MAC3EpC,EAAAC,EAAAC,cAACqV,GAAAtV,EAAD,QAGJD,EAAAC,EAAAC,cAAA,OAAKQ,UAAW,CAACjB,EAAQ0b,SAAU1b,EAAQ2C,MAAMyB,KAAK,MACpD7D,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQ1L,UAAWjB,EAAQ2b,MAAO/O,QAAS,kBAAMqR,EAAWuB,aAAQ7c,EAAM,MACxEpC,EAAAC,EAAAC,cAAC2e,GAAA5e,EAAD,OAEFD,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,MAClBhK,EAAAC,EAAAC,cAAA,Y9B3ON,SAAmBW,GACxB,OAAOC,YAAO,IAAIC,KAAKF,GAAY,e8B0OjBqe,CAAU9c,KAEnBpC,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQ1L,UAAWjB,EAAQ2b,MAAO/O,QAAS,kBAAMqR,EAAWyB,aAAQ/c,EAAM,MACxEpC,EAAAC,EAAAC,cAACqV,GAAAtV,EAAD,SAKND,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAWC,SAAS,MAEjBlQ,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAMoB,WAAS,EAACpU,QAAS,EAAGqU,UAAU,MAAMC,QAAQ,UAClDtf,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAM1W,MAAI,EAAC2W,GAAI,GAAIC,GAAI,IACrBle,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAO9P,UAAWjB,EAAQ+H,MACxBxH,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYU,WAAS,GAArB,gBACgBwP,EADhB,MAIAnc,EAAAC,EAAAC,cAACke,GAAA,EAAD,CACEC,aAAclC,EACdmC,kBAAkB,MAClBC,KAAM,EACNE,IAAK,EACLC,IAAK,IACLhS,SAAU,SAACyI,EAAGtI,GAAJ,OApIF,SAACA,GACvBuP,EAAavP,GACb2P,GAAgB,GAEhBhW,EAAY,CACVjD,WAAYsJ,EACZvJ,KAAMqa,EAAe9Q,GAAO,KA8HQ0S,CAAgB1S,QAK9C7M,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAM1W,MAAI,EAAC2W,GAAI,GAAIC,GAAI,IACrBle,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAO9P,UAAWjB,EAAQ+H,MACxBxH,EAAAC,EAAAC,cAACsf,GAAA,EAAD,CACEC,QACEzf,EAAAC,EAAAC,cAACwf,GAAA,EAAD,CACEC,QAASpD,EACT7P,SArIM,SAAApO,GAAS,IACzBqhB,EAAYrhB,EAAMshB,OAAlBD,QACRnD,EAAgBmD,GAEhB,IAAME,EAAYlC,EAAexB,EAAWwD,GAE5CnZ,EAAY,CACVlD,KAAMuc,KA+HU5c,MAAM,YAGV4D,MAAM,kBAKXsX,EAEAJ,EAED/d,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAM1W,MAAI,EAAC2W,GAAI,GAAIC,GAAI,IACrBle,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAO9P,UAAWjB,EAAQ+H,MACxBxH,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYU,WAAS,GAArB,gBAIA3M,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAmBC,MAAO3G,EAAU,IAAM,IAAK4G,WAAS,EAACJ,SA7IjD,SAACpO,EAAOwhB,GAC5BhD,EAA0B,MAAfgD,GAEXtZ,EAAY,CACVN,QAAwB,MAAf4Z,MA0IG9f,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAcF,MAAM,KAApB,OACA7M,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAcF,MAAM,KAApB,SAKN7M,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAM1W,MAAI,EAAC2W,GAAI,GAAIC,GAAI,IACrBle,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAO9P,UAAWjB,EAAQ+H,MACxBxH,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYU,WAAS,GAArB,eAIA3M,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAQpC,QAAQ,YAAY/G,MAAM,YAAYoJ,QAAS0P,GAAvD,gBCzQDgE,OA9Bf,SAAA/gB,GAA4B,IAAR0O,EAAQ1O,EAAR0O,MACV/L,EAAO+L,EAAMG,OAAblM,GADkBmM,EAGAC,YAAS7J,GAAW,CAACmD,UAAW,CAAC1F,QAAnD+E,EAHkBoH,EAGlBpH,QAASsH,EAHSF,EAGTE,KACXJ,EAAUI,GAAQA,EAAKjC,MAAM6B,QAE7BoS,EAAapS,GACjB5N,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CACAC,KAAK,QACLlH,MAAM,UACNoH,UAAWrM,IAAMiiB,WAAW,SAAC3U,EAAO+F,GAAR,OAAgBrR,EAAAC,EAAAC,cAACggB,EAAA,EAAD7gB,OAAA8gB,OAAA,GAAgB7U,EAAhB,CAAuB+F,IAAKA,EAAKnQ,GAAI+V,GAAUR,KAAK,CAAC9U,GAAIiM,UACnG5N,EAAAC,EAAAC,cAACkgB,GAAAngB,EAAD,OAIJ,OACED,EAAAC,EAAAC,cAACyY,GAAD,CAAQlB,YAAauI,GAEjBtZ,EAAU1G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACR1D,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,eAClBV,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAWC,SAAS,MAClBlQ,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,QAGF1Q,EAAAC,EAAAC,cAACmgB,GAAD,CAAWrS,KAAMA,EAAMN,MAAOA,gBCxClClP,GAAYC,YAAW,SAACC,GAAD,OAC3Buc,aAAa,CACXzT,KAAM,CACJ0T,QAASxc,EAAMsM,QAAQ,EAAG,QA2BjBsV,GAtBE,WACf,IAAM7gB,EAAUjB,KAEhB,OACEwB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACE1D,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,cAAlB,aAIAV,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAWvP,UAAWjB,EAAQ+H,KAAM0I,SAAS,MAC3ClQ,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,KAAK2C,WAAS,GAAlC,aAIA3M,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAYjC,QAAQ,QAApB,kBACiBhK,EAAAC,EAAAC,cAACoK,GAAA,EAAD,CAAMpJ,GAAG,IAAImJ,UAAWiO,KAAxB,gBClBViI,eARK,SAAAvhB,GAA0C,IAAvCwM,EAAuCxM,EAAvCwM,SAAsBgV,EAAiBxhB,EAA7ByhB,SAAYD,SAK3C,OAJAtiB,oBAAU,WACRwiB,OAAOC,SAAS,EAAG,IAClB,CAACH,IAEGhV,GAAY,+FCNRoV,GAAb,SAAAC,GACE,SAAAD,EAAYE,EAAKC,GAAO,IAAAC,EAAA,OAAA3hB,OAAA4hB,GAAA,EAAA5hB,CAAA6hB,KAAAN,IACtBI,EAAA3hB,OAAA8hB,GAAA,EAAA9hB,CAAA6hB,KAAA7hB,OAAA+hB,GAAA,EAAA/hB,CAAAuhB,GAAAS,KAAAH,QACKH,MAAQA,EACbC,EAAKF,KAAOA,EAHUE,EAD1B,OAAA3hB,OAAAiiB,GAAA,EAAAjiB,CAAAuhB,EAAAC,GAAAxhB,OAAAkiB,GAAA,EAAAliB,CAAAuhB,EAAA,EAAA5e,IAAA,iBAAA6K,MAAA,SAOiB2U,GACbA,EAAUC,WAAW,CAAEC,QAAS,CAAEC,cAAa,UAAApgB,OAAY2f,KAAKH,YARpE,CAAA/e,IAAA,eAAA6K,MAAA,WAWiB,IAAA+U,EAAAV,KACb,OAAO,IAAIW,QAAQ,SAAAC,GACjBF,EAAKd,KAAKiB,qBACPhH,KAAK,SAAAiH,GACJJ,EAAKb,MAAQiB,EAAIC,SACjBH,GAAQ,SAhBlB,CAAA9f,IAAA,UAAA6K,MAAA,SAqBU2U,EAAWU,GAAS,IAAAC,EAAAjB,KAG1B,OAFAA,KAAKkB,eAAeZ,GAEb,IAAIa,KAAW,SAAAC,GACpB,IAAIC,EAAcC,EAClB,IACED,EAAeL,EAAQV,GAAWiB,UAAU,CAC1CC,KAAMJ,EAASI,KAAK9M,KAAK0M,GACzBK,SAAUL,EAASK,SAAS/M,KAAK0M,GACjC3jB,MAAO,SAAAiB,GAC2B,MAA5BA,EAAagjB,WACfT,EAAKU,eAAe9H,KAAK,SAAA+H,GACnBA,GACFX,EAAKC,eAAeZ,GACpBgB,EAAoBN,EAAQV,GAAWiB,UAAUH,IAEjDA,EAAS3jB,MAAM,IAAIokB,MAAM,8BAI7BT,EAAS3jB,MAAMiB,MAIrB,MAAOuV,GACPmN,EAAS3jB,MAAMwW,GAGjB,OAAO,WACDoN,GAAcA,EAAaS,cAC3BR,GAAmBA,EAAkBQ,qBAnDjDpC,EAAA,OAA8BqC,GCGf,SAASC,GAAUpC,GAChC,IAAMqC,EAAWC,aAAe,CAACC,IAAKC,wCAEhCC,EAAW,IAAI3C,GAASE,EAAMA,EAAK0C,SAEzC,OAAO,IAAIC,KAAa,CACtBC,MAAO,IAAIC,KAAc,CACvBC,eAAgB,CACdC,MAAO,CACL9X,MAAO,SAAC+X,EAAGjJ,EAAJ7b,GAAA,OAA8B+kB,EAA9B/kB,EAAY+kB,aAA8B,CAACC,WAAY,QAASriB,GAAIkZ,EAAKlZ,UAItFsiB,KAAMV,EAAShiB,OAAO4hB,gBCHpBe,GAAgB,SAAAllB,GAA8B,IAA5B0O,EAA4B1O,EAA5B0O,MAAOyW,EAAqBnlB,EAArBmlB,MAAO3Y,EAAcxM,EAAdwM,SAC9B7J,EAAK+L,EAAMG,OAAOlM,GAMxB,OAJAzD,oBAAU,WACRimB,EAAMxiB,IACL,CAACwiB,EAAOxiB,IAEJ6J,GAqDM4Y,OAlDf,SAAAte,GAAwB,IAAVue,EAAUve,EAAVue,QAEJC,EAAgBD,EAAhBC,KAAMH,EAAUE,EAAVF,MAERI,EAAcD,EAHD,sBADGplB,EAMEC,mBAAS,MANXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMf4hB,EANe1hB,EAAA,GAMTolB,EANSplB,EAAA,GAQtB,OACEY,EAAAC,EAAAC,cAACukB,GAAeC,SAAhB,CAAyB7X,MAAOiU,GAAQA,EAAK6D,YAC3C3kB,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACbV,EAAAC,EAAAC,cAACggB,EAAA,EAAD,KACElgB,EAAAC,EAAAC,cAAC0kB,GAAD,MAEA5kB,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,KAEIgD,EACE9gB,EAAAC,EAAAC,cAAC2kB,EAAA,EAAD,CAAgB1H,OAAQ+F,GAAUpC,IAChC9gB,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,KAEE9d,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOgH,OAAK,EAACrO,KAAMO,GAAWR,QAASuO,OAAQ,SAAAzZ,GAAK,OAAItL,EAAAC,EAAAC,cAAC8kB,GAAkB1Z,MAC3EtL,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOrH,KAAMQ,GAAUT,QAASuO,OAC9B,SAAAzZ,GAAK,OACHtL,EAAAC,EAAAC,cAAC+kB,GAAD,CAAed,MAAO,SAAAxiB,GAAE,OAAIwiB,EAtB/B,qBAsBiDxiB,IAAK+L,MAAOpC,EAAMoC,OAC9D1N,EAAAC,EAAAC,cAACglB,GAAU5Z,OAGjBtL,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOrH,KAAMS,GAASV,QAASuO,OAAQ,SAAAzZ,GAAK,OAAItL,EAAAC,EAAAC,cAACilB,GAAc7Z,MAE/DtL,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOgH,OAAK,EAACrO,KAAMM,GAASP,SACxB+N,EACEvkB,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAU5c,GAAI+V,GAAUR,KAAK,CAAC9U,GAAI4iB,MAClCvkB,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAU5c,GAAI8V,GAAWP,YAMrCzW,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOrH,KAAMM,GAASP,QAASuO,OAAQ,SAAAzZ,GAAK,OAAItL,EAAAC,EAAAC,cAACklB,GAAD/lB,OAAA8gB,OAAA,GAAgB7U,EAAhB,CAAuBqO,QAAS,SAAAmH,GAC9E0D,EAAQ1D,UAGZ9gB,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOzT,UAAWiW,UCvDV5K,QACW,cAA7BgL,OAAOD,SAAS4E,UAEe,UAA7B3E,OAAOD,SAAS4E,UAEhB3E,OAAOD,SAAS4E,SAAS3X,MACvB,2DCTN4X,IAASP,OAAO/kB,EAAAC,EAAAC,cAACqlB,GAAD,CAAKlB,QAAS,CAACC,KAHlB,SAACtiB,GAAD,OAASwjB,KAAKC,MAAM/E,OAAOgF,aAAaC,QAAQ3jB,KAGxBmiB,MAFvB,SAACniB,EAAK6K,GAAN,OAAgB6T,OAAOgF,aAAaE,QAAQ5jB,EAAKwjB,KAAKK,UAAUhZ,QAE9BuB,SAAS0X,eAAe,SDwHlE,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlL,KAAK,SAAAmL,GACjCA,EAAaC","file":"static/js/main.dd8e5286.chunk.js","sourcesContent":["import React from 'react';\n\nfunction useEventListener(eventName, handler, element = global) {\n  const savedCallback = React.useRef();\n\n  React.useEffect(() => {\n    savedCallback.current = handler;\n  }, [handler]);\n\n  React.useEffect(() => {\n    // Make sure element supports addEventListener\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) {\n      return;\n    }\n\n    const eventListener = event => savedCallback.current(event);\n\n    element.addEventListener(eventName, eventListener);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n\nexport default useEventListener;\n","import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n if (message.networkError\n   && message.networkError.result\n   && message.networkError.result.errors\n   && message.networkError.result.errors.length > 0) {\n    message = message.networkError.result.errors[0].message.slice(0, 100)\n }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function getHours(timestamp) {\n  return format(new Date(timestamp), 'HH')\n}\n\nexport function getMinutes(timestamp) {\n  return format(new Date(timestamp), 'mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (hours < 1) {\n    return `${minutes}min`\n  }\n\n  return `${hours}h ${minutes}min`\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useState } from 'react'\nimport { ListItem, ListItemText } from '@material-ui/core'\n\nimport {formatElapsedTime, formatTime} from '../time'\nimport {useInterval} from '../useInterval'\n\nconst SuggestedListItem = ({time, key, className}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={className}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nexport default SuggestedListItem\n","import React from 'react'\nimport { ListItemIcon } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport BottleFeedingIcon from '@material-ui/icons/Opacity'\nimport BreastFeedingIcon from '@material-ui/icons/ChildCare'\n\nconst useIconStyles = makeStyles({\n  icon_wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 12,\n    marginRight: 5,\n    textAlign: 'center'\n  },\n  bottle_icon: {\n    color: '#24a0ff'\n  },\n  icon_container: {\n    display: 'flex'\n  },\n  small_icon: {\n    fontSize: '1rem'\n  }\n})\n\nconst IconGroup = ({ type, extra_food, feeding_duration }) => {\n  const classes = useIconStyles()\n\n  const feedingDurationText = feeding_duration\n    ? <span>{feeding_duration}'</span>\n    : null\n\n  let icons;\n  switch (type) {\n    case 'breast':\n      icons = (\n        <>\n          <BreastFeedingIcon/>\n          {feedingDurationText}\n        </>\n      )\n      break;\n    case 'bottle':\n      icons = (\n        <>\n          <BottleFeedingIcon className={classes.bottle_icon}/> {extra_food}ml\n        </>\n      )\n      break;\n    case 'mixed':\n      icons = (\n        <>\n          <div className={classes.icon_container}>\n            <BreastFeedingIcon className={classes.small_icon}/>\n            <BottleFeedingIcon className={[classes.bottle_icon, classes.small_icon].join(' ')}/>\n          </div>\n          <span>{extra_food}ml</span>\n          {feedingDurationText}\n        </>\n      )\n      break;\n  }\n\n  return (\n    <ListItemIcon>\n      <div className={classes.icon_wrapper}>\n        {icons}\n      </div>\n    </ListItemIcon>\n  )\n}\n\nexport default IconGroup\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTRIES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n      extra_food\n      spaceId\n      type  \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n      spaceId\n      type \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n      type  \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int, $type: String, $vitamin: Boolean, $source: String, $feeding_duration: Int) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food, type: $type, vitamin: $vitamin, source: $source, feeding_duration: $feeding_duration) {\n      id\n      time\n      extra_food\n      type  \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const GET_SPACES = gql`\n  query getSpaces {\n    spaces {\n      id\n      display_name\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const CREATE_SPACE = gql`\n  mutation CreateSpace($name: String!) {\n    createSpace(name: $name) {\n      id\n      display_name\n    }\n  }\n`\n","import gql from \"graphql-tag\"\n\nexport const GET_DAY_STATS = gql`\n  query getStats($spaceId: String!, $daysAgo: Int!) {\n    stats(spaceId: $spaceId, daysAgo: $daysAgo) {\n      extra_food_per_day {\n        date\n        extra_food\n      }\n        \n      feeding_count_per_day {\n        date\n        feeding_count\n      }\n    }\n  }\n`\n","import gql from \"graphql-tag\"\n\nexport const GET_WEEK_STATS = gql`\n  query getStats($spaceId: String!, $daysAgo: Int!) {\n    stats(spaceId: $spaceId, daysAgo: $daysAgo) {\n      night_breaks {\n        date\n        firstBreakDurationInMins\n        secondBreakDurationInMins\n      }\n\n      average_day_break {\n        date\n        average_duration_mins\n      }\n    }\n  }\n`\n","import gql from \"graphql-tag\"\n\nexport const GET_AGGREGATED_STATS = gql`\n  query getAggregatedStats($spaceId: String!) {\n    aggregated_stats(spaceId: $spaceId) {\n      extra_food_per_week {\n        week_start_date\n        extra_food\n      }\n      \n      feeding_count_per_week {\n        week_start_date\n        feeding_count\n      }\n    }\n  }\n`","import React from 'react'\nimport format from 'date-fns/format'\nimport {UPDATE_ENTRY} from '../queries'\nimport {useMutation} from '@apollo/react-hooks'\nimport Chip from '@material-ui/core/Chip'\nimport DoneIcon from '@material-ui/icons/Done'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport CloseIcon from '@material-ui/icons/Close'\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { green, red, blue } from \"@material-ui/core/colors/index\";\n\nconst useStyles = makeStyles({\n  green_chip: {\n    backgroundColor: green[100]\n  },\n  red_chip: {\n    backgroundColor: red[100]\n  },\n  blue_chip: {\n    backgroundColor: blue[100]\n  }\n})\n\nconst VitaminChip = ({group}) => {\n  const classes = useStyles()\n\n  const realEntries = group.filter(({isSuggested}) => !isSuggested)\n  const vitaminEntries = realEntries.filter(({vitamin}) => vitamin)\n  const vitaminTime = vitaminEntries.length > 0 ? vitaminEntries[0].time * 1000 : null\n  const firstRealEntry = realEntries[0]\n\n  const [updateEntry, {loading, error}] = useMutation(UPDATE_ENTRY)\n\n  const updateVitamin = (entry) => {\n    updateEntry({\n      variables: {\n        id: entry.id,\n        vitamin: true\n      }\n    })\n  }\n\n  if (loading) {\n    return <Chip\n      size='small'\n      label='Vit D3'\n      icon={<RefreshIcon/>}\n      className={classes.blue_chip}\n    />\n  }\n\n  return <Chip\n    size='small'\n    label={`Vit D3 ${vitaminTime ? '(' + format(vitaminTime, 'HH:mm') + ')' : ''}`}\n    icon={vitaminTime ? <DoneIcon /> : <CloseIcon/>}\n    deleteIcon={<CheckBoxOutlineBlankIcon />}\n    onDelete={!vitaminTime && firstRealEntry ? () => updateVitamin(firstRealEntry) : null}\n    className={vitaminTime ? classes.green_chip : classes.red_chip}\n  />\n}\n\nexport default VitaminChip\n","import React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { IconButton } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatTime } from '../time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport SuggestedListItem from './SuggestedListItem'\nimport IconGroup from './IconGroup'\nimport VitaminChip from './VitaminChip'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#f0f2fa',\n    color: theme.palette.common.black,\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  },\n  subheader_vitamin: {\n    marginLeft: 35\n  },\n  narrow_column: {\n    flex: 'initial',\n    marginRight: 35\n  },\n  source_column: {\n    color: '#644889',\n  },\n  vitamin_column: {\n    color: '#b17714',\n  }\n}))\n\nconst breastFeedingSourceMap = {\n  left: 'L',\n  right: 'R',\n  both: 'LR',\n  none: ''\n}\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => {\n          return(\n            <CSSTransitionGroup\n              key={timestamp}\n              transitionName=\"example\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}>\n              <ListSubheader className={classes.subheader}>\n                {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n                <span className={classes.subheader_vitamin}>\n                  <VitaminChip group={group}/>\n                </span>\n\n                <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n              </ListSubheader>\n\n              {group.map(({id, time, extra_food, type, vitamin, meantime, source, feeding_duration, isSuggested}) => {\n                  return isSuggested\n                    ? <SuggestedListItem key={id} time={time} className={classes.item}/>\n                    : <ListItem key={id}>\n                      <IconGroup type={type} extra_food={extra_food} feeding_duration={feeding_duration}/>\n\n                      <ListItemText primaryTypographyProps={{variant: 'body2'}} secondary={meantime} className={classes.narrow_column}>\n                        {formatTime(time * 1000)}\n                      </ListItemText>\n                      <ListItemText className={[classes.source_column, classes.narrow_column].join(' ')}>\n                        {type !== 'bottle' ? breastFeedingSourceMap[source] : null}\n                      </ListItemText>\n                      <ListItemText primaryTypographyProps={{variant: 'body2'}} className={[classes.vitamin_column, classes.narrow_column].join(' ')}>\n                        {vitamin ? 'Vit D3' : ''}\n                      </ListItemText>\n                      <ListItemSecondaryAction>\n                        {\n                          (now - time * 1000 < A_DAY) &&\n                          <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                            <Edit/>\n                          </IconButton>\n                        }\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                }\n              )}\n            </CSSTransitionGroup>\n          )})\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import React, { useState } from 'react'\nimport InfoIcon from '@material-ui/icons/Info'\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles'\nimport {SnackbarContent, Typography, Button} from '@material-ui/core'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nimport {formatElapsedTime} from '../time'\nimport {useInterval} from '../useInterval'\nimport {UPDATE_ENTRY} from '../queries'\nimport {useMutation} from '@apollo/react-hooks'\n\nconst useStyles = makeStyles(theme => ({\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  messageBox: {\n    marginBottom: 20,\n    position: 'sticky',\n    top: 70,\n    zIndex:10\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  completeFeedingButton: {\n    color: '#ffe400',\n    border: '1px solid #ffe400',\n    fontSize: 'smaller',\n    marginTop: 5\n  },\n  snackbarContent: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst SnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n  const { variant, action, children } = props;\n\n  return (\n    <SnackbarContent\n      className={[classes[variant], classes.messageBox].join(' ')}\n      aria-describedby=\"client-snackbar\"\n      message={\n      <div className={classes.snackbarContent}>\n        <span id=\"client-snackbar\" className={classes.message}>\n          {\n            variant === 'info'\n            ? <InfoIcon className={classes.icon}/>\n            : <WarningIcon className={classes.icon}/>\n          }\n          {children}\n        </span>\n        <span>{action}</span>\n      </div>\n      }\n    />\n  );\n}\n\nconst TimeSinceLastFeeding = ({lastFeedingTime, nextFeedingTime, entry}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 30 * 1000)\n\n  const classes = useStyles();\n\n  const infoText = differenceInMinutes(new Date(), new Date(lastFeedingTime)) > 5\n  ? <>It's been&nbsp;<Typography variant=\"subtitle1\" component=\"span\">{formatElapsedTime(new Date(), new Date(lastFeedingTime))}</Typography>&nbsp;since last feeding </>\n  : <>Feeding in progress</>\n\n  const [updateEntry] = useMutation(UPDATE_ENTRY)\n\n  const duration = entry\n    ? differenceInMinutes(Date.now(), entry.time * 1000)\n    : null\n\n  const onCompleteFeeding = () => {\n    updateEntry({\n      variables: {\n        id: entry.id,\n        feeding_duration: duration\n      }\n    })\n  }\n\n  const completeFeedingComponent = !entry || entry.type === 'bottle' || entry.feeding_duration || !duration || duration < 5 || duration > 30\n    ? null\n    : <Button variant='outlined' className={classes.completeFeedingButton} size=\"small\" onClick={onCompleteFeeding}>\n      Complete now\n    </Button>\n\n\n  return <SnackbarContentWrapper\n    class='mui-fixed'\n    variant={Date.now() > nextFeedingTime ? 'error' : 'info'}\n    action={completeFeedingComponent}>\n    {infoText}\n  </SnackbarContentWrapper>\n}\n\nexport default TimeSinceLastFeeding\n","import React from 'react'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport {Typography} from '@material-ui/core'\n\nimport {UPDATE_ENTRY} from '../queries'\nimport {useMutation} from '@apollo/react-hooks'\n\nconst FeedingSourceSelector = ({ id, breastFeedingSource, onChange }) => {\n  const [updateEntry] = useMutation(UPDATE_ENTRY)\n\n  const updateBreastFeedingSource = (event, source) => {\n    updateEntry({\n      variables: {\n        id,\n        source\n      }\n    })\n\n    if (onChange) {\n      onChange(source)\n    }\n  }\n\n  return (\n    <>\n      <Typography paragraph>\n        Breast feeding source\n      </Typography>\n      <ToggleButtonGroup value={breastFeedingSource} exclusive onChange={updateBreastFeedingSource}>\n        <ToggleButton value=\"left\">Left</ToggleButton>\n        <ToggleButton value=\"right\">Right</ToggleButton>\n        <ToggleButton value=\"both\">Both</ToggleButton>\n        <ToggleButton value=\"none\">None</ToggleButton>\n      </ToggleButtonGroup>\n    </>\n  )\n}\n\nexport default FeedingSourceSelector\n","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {SnackbarContent} from '@material-ui/core'\nimport FeedingSourceSelector from './FeedingSourceSelector'\n\nconst useStyles = makeStyles(theme => ({\n  messageBox: {\n    marginBottom: 20,\n    top: 90,\n    zIndex:10,\n    backgroundColor: theme.palette.text.hint,\n    justifyContent: 'center'\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst SnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n\n  return (\n    <SnackbarContent\n      className={[classes.messageBox].join(' ')}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <FeedingSourceSelector {...props} />\n      }\n    />\n  );\n}\n\nconst FeedingSourceBar = (props) => {\n  return (\n    <SnackbarContentWrapper {...props} />\n  )\n}\n\nexport default FeedingSourceBar","import React from 'react'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\n\nimport AddIcon from '@material-ui/icons/Add'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Fab,\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\nimport TimeSinceLastFeeding from './TimeSinceLastFeeding'\nimport FeedingSourceBar from './FeedingSourceBar'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from '../time'\n\nimport { GET_ENTRIES, CREATE_ENTRY } from '../queries'\nimport useEventListener from '../useEventListener'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  },\n  listWrapper: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nfunction getLastFeedingDate(entries) {\n  if (!entries || entries.length < 1) return null\n\n  const theMostRecent = entries[0]\n  return new Date(theMostRecent.time * 1000)\n}\n\nfunction getNextEntryDate(theMostRecentDate) {\n  if (!theMostRecentDate) return null\n\n  const hours = theMostRecentDate.getHours()\n  const isLate = (hours >= 21 || hours < 3)\n  const nextEntryInMinutes = isLate ? 210 : 150\n\n  return addMinutes(theMostRecentDate, nextEntryInMinutes)\n}\n\nfunction EntryList({match, showNextEstimatedFeeding}) {\n  const classes = useStyles()\n\n  const spaceId = match.params.id\n\n  const { loading, data, error, refetch } = useQuery(GET_ENTRIES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const onChange = React.useCallback(() => {\n    if (document.hidden === false) {\n      refetch()\n    }\n  }, [refetch])\n\n  useEventListener('visibilitychange', onChange, document)\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const entries = hasData && data.entries.slice().reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n\n  const lastFeedingDate = getLastFeedingDate(entries)\n  const nextFeedingDate = getNextEntryDate(lastFeedingDate)\n\n  if (showNextEstimatedFeeding && nextFeedingDate) {\n    entries.unshift({\n      id: 'future',\n      time: Math.round(nextFeedingDate.getTime() / 1000),\n      extra_food: 0,\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => {\n\n    return createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n  }\n\n  return (\n    <>\n      { (error || creationError) && <ShowError message={error || creationError} /> }\n\n      <Container className={classes.listWrapper} maxWidth=\"sm\">\n        <Fab variant='extended' color='primary' aria-label=\"delete\" className={classes.fab} onClick={onAddEntry} disabled={creationLoading}>\n          <AddIcon />\n          New feeding\n        </Fab>\n\n        { !loading && data && lastFeedingDate > 0 &&\n          <TimeSinceLastFeeding\n            lastFeedingTime={lastFeedingDate.getTime()}\n            nextFeedingTime={nextFeedingDate.getTime()}\n            entry={entries && entries.length > 0 ? entries[0] : null}\n          />\n        }\n\n        { !loading && data && data.entries.length > 0 && data.entries[0].source === null && data.entries[0].type !== 'bottle' &&\n          <FeedingSourceBar\n            id={data.entries[0].id}\n          />\n        }\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary=\"Click the button 'New feeding' to start measuring intervals\" />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n        { loading && <CircularProgress /> }\n      </Container>\n    </>\n  )\n}\n\nexport default EntryList;\n","import React, { useEffect, useRef } from 'react'\nimport { Typography } from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles/index\";\n\nimport * as Chartist from 'chartist'\nimport 'chartist/dist/scss/chartist.scss'\n\nconst useStyles = makeStyles(theme => ({\n  chartWrapper: {\n    marginBottom: 30\n  }\n}))\n\nconst Chart = ({type, data, title, options, responsiveOptions}) => {\n  const classes = useStyles()\n\n  const chartRef = React.createRef()\n  const chartist = useRef(null)\n\n  useEffect(() => {\n    chartist.current && chartist.current.detach()\n    switch(type) {\n      case 'line':\n        chartist.current = Chartist.Line(chartRef.current, data, options, responsiveOptions)\n        break\n      case 'bar':\n        chartist.current = Chartist.Bar(chartRef.current, data, options, responsiveOptions)\n        break\n    }\n\n    return () => chartist && chartist.current.detach()\n  }, [chartist, chartRef, data, options, responsiveOptions])\n\n  return (\n    <div className={classes.chartWrapper}>\n      <Typography variant=\"h6\">\n        {title}\n      </Typography>\n      <div ref={chartRef}></div>\n    </div>\n  )\n}\n\nexport default Chart\n","import React, { useState } from 'react'\nimport { useQuery, useLazyQuery } from '@apollo/react-hooks'\nimport {\n  CircularProgress,\n  Button,\n  Menu,\n  MenuItem\n} from '@material-ui/core'\n\nimport Chart from './Chart'\nimport { GET_DAY_STATS, GET_WEEK_STATS } from '../queries'\nimport {makeStyles} from '@material-ui/core/styles/index';\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\n\nconst useStyles = makeStyles(theme => ({\n  primaryChartLine: {\n    stroke: '#3f51b5',\n    fill: '#7986cb'\n  },\n  secondaryChartLine: {\n    stroke: '#e91e63',\n    fill: '#f06292'\n  },\n  menu: {\n    textAlign: 'right',\n    margin: '20px 10px'\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginLeft: '-20px',\n    marginTop: '-20px'\n  }\n}))\n\nconst Stats = ({spaceId}) => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [chartTimePeriod, setChartTimePeriod] = useState(null);\n\n  const classes = useStyles()\n\n  const getIntChartTimePeriod = (stringTimePeriod) => {\n    switch (stringTimePeriod) {\n      case 'week':\n        return 7\n      case 'month':\n        return 30\n      case 'quarter':\n        return 90\n      default:\n        return 30\n    }\n  }\n\n  const {loading, data: statsData, error} = useQuery(GET_DAY_STATS, {\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      spaceId,\n      daysAgo: getIntChartTimePeriod(chartTimePeriod)\n    }\n  })\n\n  const [loadWeekStats, {loading: weekStatsLoading, data: weekStatsData, error: weekStatsError}] = useLazyQuery(GET_WEEK_STATS, {\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      spaceId,\n      daysAgo: getIntChartTimePeriod(chartTimePeriod)\n    }\n  })\n\n  if (statsData && !weekStatsLoading && !weekStatsData) {\n    loadWeekStats()\n  }\n\n  if (!statsData) {\n    return <div><CircularProgress/></div>\n  }\n\n  const extraFoodData = {\n    labels: statsData.stats.extra_food_per_day.map(({date}) => date),\n    series: [\n      {\n        data: statsData.stats.extra_food_per_day.map(({extra_food}) => extra_food),\n        className: classes.primaryChartLine\n      }\n    ]\n  }\n\n  const feedingCountData = {\n    labels: statsData.stats.feeding_count_per_day.map(({date}) => date),\n    series: [\n      {\n        data: statsData.stats.feeding_count_per_day.map(({feeding_count}) => feeding_count),\n        className: classes.primaryChartLine\n      }\n    ]\n  }\n\n  const getRoundedHoursFromMinutes = (mins) => (Math.round(mins/60 * 10) / 10).toFixed(2)\n\n  const nightBreaksData = weekStatsData ? {\n    labels: weekStatsData.stats.night_breaks.map(({date}) => date),\n    series: [\n      {\n        data: weekStatsData.stats.night_breaks.map(({firstBreakDurationInMins}) => getRoundedHoursFromMinutes(firstBreakDurationInMins)),\n        className: classes.primaryChartLine\n      },\n      {\n        data: weekStatsData.stats.night_breaks.map(({secondBreakDurationInMins}) => getRoundedHoursFromMinutes(secondBreakDurationInMins)),\n        className: classes.secondaryChartLine\n      },\n    ]\n  } : null\n\n  const avgDayBreakData = weekStatsData ? {\n    labels: weekStatsData.stats.average_day_break.map(({date}) => date),\n    series: [\n      {\n        data: weekStatsData.stats.average_day_break.map(({average_duration_mins}) => getRoundedHoursFromMinutes(average_duration_mins)),\n        className: classes.primaryChartLine\n      }\n    ]\n  } : null\n\n  const showNthLabel = (n) => (value, index) => {\n    if (index % n === 0) {\n      return value.split('/').slice(0, 2).join('/')\n    }\n    return ''\n  }\n\n  const getOptions = (yUnit) =>  ({\n    showArea: true,\n    showPoint: false,\n    low: 0,\n    axisY: {\n      labelInterpolationFnc:((value) => `${value}${yUnit}`),\n      onlyInteger: true\n    },\n    axisX: {\n      labelInterpolationFnc: showNthLabel(7)\n    },\n  })\n\n  const responsiveOptions = [\n    ['screen and (min-width: 640px)', {\n      showPoint: true,\n\n      axisX: {\n        labelInterpolationFnc: showNthLabel(3)\n      }\n    }]\n  ]\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  };\n\n  const handleClose = (e) => {\n    if (e) {\n      setChartTimePeriod(e);\n    }\n\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <div className={classes.menu}>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          Select dates\n          <ArrowDown/>\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleClose.bind(this, 'week')}>Last week</MenuItem>\n          <MenuItem onClick={handleClose.bind(this, 'month')}>Last month</MenuItem>\n          <MenuItem onClick={handleClose.bind(this, 'quarter')}>Last quarter</MenuItem>\n        </Menu>\n      </div>\n    <div style={{height: 30}}>\n      { loading && <CircularProgress size={20}/> }\n    </div>\n    <Chart\n      type='line'\n      data={extraFoodData}\n      title='Extra food'\n      options={getOptions('ml')}\n      responsiveOptions={responsiveOptions}/>\n    <Chart\n      type='line'\n      data={feedingCountData}\n      title='Feeding count'\n      options={getOptions('')}\n      responsiveOptions={responsiveOptions}/>\n\n     <div style={{position: 'relative'}}>\n      { !nightBreaksData && <CircularProgress className={classes.loader}/> }\n      <Chart\n        type='line'\n        data={nightBreaksData}\n        title='Night break duration'\n        options={getOptions('h')}\n        responsiveOptions={responsiveOptions}/>\n     </div>\n\n      <div style={{position: 'relative'}}>\n        { !avgDayBreakData && <CircularProgress className={classes.loader}/> }\n        <Chart\n          type='line'\n          data={avgDayBreakData}\n          title='Average day break'\n          options={getOptions('h')}\n          responsiveOptions={responsiveOptions}/>\n      </div>\n    </div>\n  )}\n\nexport default Stats\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { CircularProgress } from '@material-ui/core'\n\nimport Chart from './Chart'\nimport { GET_AGGREGATED_STATS } from '../queries'\nimport {makeStyles} from '@material-ui/core/styles/index';\n\nconst useStyles = makeStyles(theme => ({\n  primaryChartLine: {\n    stroke: '#ff5722',\n    fill: '#ff8a65'\n  },\n  secondaryChartLine: {\n    stroke: '#ffeb3b',\n    fill: '#fff176'\n  }\n}))\n\nconst AggregatedStats = ({spaceId}) => {\n  const classes = useStyles()\n\n  const {loading, data: statsData, error} = useQuery(GET_AGGREGATED_STATS, {\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      spaceId\n    }\n  })\n\n  if (!statsData) {\n    return <div><CircularProgress/></div>\n  }\n\n  const extraFoodData = {\n    labels: statsData.aggregated_stats.extra_food_per_week.map(({week_start_date}) => week_start_date),\n    series: [\n      {\n        data: statsData.aggregated_stats.extra_food_per_week.map(({extra_food}) => extra_food),\n        className: classes.primaryChartLine\n      }\n    ]\n  }\n\n  const feedingCountData = {\n    labels: statsData.aggregated_stats.feeding_count_per_week.map(({week_start_date}) => week_start_date),\n    series: [\n      {\n        data: statsData.aggregated_stats.feeding_count_per_week.map(({feeding_count}) => feeding_count),\n        className: classes.primaryChartLine\n      }\n    ]\n  }\n\n  const showNthLabel = (n) => (value, index) => {\n    if (index % n === 0) {\n      return value.split('/').slice(0, 2).join('/')\n    }\n    return ''\n  }\n\n  const getOptions = (yUnit) =>  ({\n    showArea: true,\n    showPoint: false,\n    low: 0,\n    axisY: {\n      labelInterpolationFnc:((value) => `${value}${yUnit}`),\n      onlyInteger: true\n    },\n    axisX: {\n      labelInterpolationFnc: showNthLabel(2)\n    },\n  })\n\n  const responsiveOptions = [\n    ['screen and (min-width: 640px)', {\n      showPoint: true,\n\n      axisX: {\n        labelInterpolationFnc: showNthLabel(1)\n      }\n    }]\n  ]\n\n  return <div>\n    <div style={{height: 30}}>\n      { loading && <CircularProgress size={20}/> }\n    </div>\n    <Chart\n      type='bar'\n      data={extraFoodData}\n      title='Extra food per week'\n      options={getOptions('ml')}\n      responsiveOptions={responsiveOptions}/>\n    <Chart\n      type='bar'\n      data={feedingCountData}\n      title='Feeding count per week'\n      options={getOptions('')}\n      responsiveOptions={responsiveOptions}/>\n  </div>\n}\n\nexport default AggregatedStats\n","import React from 'react'\n\nconst ProfileContext = React.createContext(null)\n\nexport default ProfileContext\n","import { generatePath } from 'react-router'\n\nconst getRoute= (pattern) => {\n  return {\n    pattern,\n    path: (...params) => generatePath(pattern, ...params)\n  }\n}\n\nexport const HomePage = getRoute('/')\nexport const SelectPage = getRoute('/select')\nexport const SpacePage = getRoute('/space/:id/:tab(stats|aggregated)?')\nexport const EditPage =  getRoute('/edit/:id')\n\n\n","import React, { useContext } from 'react'\n\nimport {\n  AppBar,\n  Avatar,\n  Toolbar,\n  Typography,\n  Box,\n  Menu,\n  MenuItem\n} from '@material-ui/core'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport {makeStyles} from '@material-ui/core/styles'\nimport ProfileContext from '../ProfileContext'\n\nimport { SelectPage } from '../routing'\n\nconst useStyles = makeStyles({\n  appBar: {\n    backgroundColor: '#3e4451',\n  },\n  avatar: {\n    margin: 15,\n    width: 40,\n    height: 40,\n    marginLeft: 'auto'\n  },\n  toolbar: {\n    height: 70,\n    paddingLeft: 15\n  },\n})\n\nconst Layout = ({toolbarIcon, children}) => {\n  const classes = useStyles()\n  const profile = useContext(ProfileContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return <>\n    <AppBar className={classes.appBar}>\n      <Toolbar disableGutters={true} className={classes.toolbar}>\n        {toolbarIcon}\n\n        <Typography variant='h5'>\n          Food time\n        </Typography>\n\n        {profile &&\n          <>\n            <Avatar alt=\"Profile picture\"\n                    src={profile.imageUrl}\n                    aria-controls='user-menu'\n                    aria-haspopup='true'\n                    className={classes.avatar}\n                    onClick={handleClick}/>\n            <Menu\n              id='user-menu'\n              anchorEl={anchorEl}\n              anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n              getContentAnchorEl={null}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem component={RouterLink} to={SelectPage.path()} onClick={handleClose}>Spaces</MenuItem>\n            </Menu>\n          </>\n        }\n      </Toolbar>\n    </AppBar>\n\n    <Toolbar className={classes.toolbar}/>\n\n    <Box my={2}>\n    {children}\n    </Box>\n  </>\n}\n\nexport default Layout\n","import React from 'react'\nimport { generatePath } from 'react-router-dom'\nimport EntryList from './List'\nimport Stats from './Stats'\nimport AggregatedStats from './AggregatedStats'\nimport {\n  Tabs,\n  Tab,\n} from '@material-ui/core'\n\nimport Layout from './Layout'\n\nconst SpacePage = (props) => {\n  const { match, history } = props\n\n  const tab = match.params.tab || 'list'\n\n  const navigateToTab = (e, value) => {\n    history.push(generatePath(match.path, { ...match.params, tab: value === 'list' ? undefined : value}))\n  }\n\n  return <Layout>\n    <Tabs value={tab} onChange={navigateToTab}>\n      <Tab value='list' label=\"List\" />\n      <Tab value='stats' label=\"Stats\"  />\n      <Tab value='aggregated' label=\"Aggregated\"  />\n    </Tabs>\n\n    {tab === 'list' &&\n      <EntryList {...props} />\n    }\n    {tab === 'stats' &&\n      <Stats spaceId={match.params.id} />\n    }\n    {tab === 'aggregated' &&\n      <AggregatedStats spaceId={match.params.id}/>\n    }\n  </Layout>\n}\n\nexport default SpacePage\n","import React from 'react'\n\nimport {\n  CircularProgress,\n  Container,\n  Paper,\n  Fab,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Layout from './Layout'\nimport { SpacePage } from '../routing'\n\nimport { GET_SPACES, CREATE_SPACE } from '../queries'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  }\n}))\n\nfunction SpaceSelector() {\n  const classes = useStyles()\n\n  const { loading, data, error } = useQuery(GET_SPACES)\n\n  const [createSpace, {loading: creationLoading, error: creationError}] = useMutation(CREATE_SPACE, {\n    variables: {name: 'New space'},\n    refetchQueries: ['getSpaces']\n  })\n\n  return (<Layout>\n    <Container maxWidth=\"sm\">\n      <Fab variant='extended' color='primary' aria-label=\"New space\" className={classes.fab} onClick={createSpace} disabled={creationLoading}>\n        <AddIcon/>\n        New space\n      </Fab>\n\n      { loading && <CircularProgress/>}\n      { !loading &&\n        <Paper>\n          <List disablePadding={true}>\n            <CSSTransitionGroup\n              transitionName=\"example\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}>\n              { data.spaces.map(space => (\n                <ListItem key={space.id} divider button component={RouterLink} to={SpacePage.path({id: space.id})}>\n                  <ListItemText>{space.display_name}</ListItemText>\n                </ListItem>\n              ))}\n            </CSSTransitionGroup>\n          </List>\n        </Paper>\n      }\n    </Container>\n  </Layout>)\n}\n\nexport default SpaceSelector\n","import React, { useState, useEffect } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { CircularProgress } from '@material-ui/core'\n\nimport Layout from './Layout'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    minHeight: 40\n  },\n  loader: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: -3,\n    bottom: -5,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n})\n\nconst SignInForm = ({ onLogin }) => {\n  const classes = useStyles()\n\n  const responseGoogle = (response) => {\n    onLogin(response)\n  }\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setLoading(false)\n    }, 1500)\n\n    return () => clearTimeout(timeout)\n  })\n\n  return  <Layout>\n    <div className={classes.root}>\n      { loading && <div className={classes.loader}><CircularProgress /></div> }\n      <GoogleLogin\n        clientId='299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com'\n        buttonText='Login'\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        isSignedIn={true}\n        cookiePolicy='single_host_origin'\n      />\n    </div>\n  </Layout>\n}\n\nexport default SignInForm\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Paper,\n  Typography,\n  Grid,\n  Slider\n} from '@material-ui/core'\n\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nimport { useMutation, useApolloClient } from '@apollo/react-hooks'\nimport ArrowUp from '@material-ui/icons/KeyboardArrowUp'\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { debounce } from '../utils'\n\nimport { SpacePage } from '../routing'\n\nimport {\n  GET_ENTRIES,\n  UPDATE_ENTRY,\n  REMOVE_ENTRY\n} from '../queries'\nimport {formatDay, getHours, getMinutes} from '../time';\nimport FeedingSourceSelector from './FeedingSourceSelector';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n    dateTime: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    date: {\n      marginLeft: 20\n    },\n    arrow: {\n      color: '#808edc',\n      minWidth: 'initial'\n    },\n    dateTimeBar: {\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 10\n    }\n  }),\n)\n\nconst updateGetEntriesCache = (store, spaceId, fn) => {\n  let listData = null\n\n  try {\n    listData = store.readQuery({query: GET_ENTRIES, variables: {spaceId}})\n  } catch (e) {\n    // Reading error, do nothing\n  }\n\n  if (!listData) {\n    return\n  }\n\n  store.writeQuery({\n    query: GET_ENTRIES, variables: {spaceId}, data: {\n      entries: fn(listData.entries)\n\n    }\n  })\n}\n\nfunction EntryForm({match, data}) {\n  const { id } = match.params\n\n  const spaceId = data.entry.spaceId\n\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      updateGetEntriesCache(store, spaceId, (entries) => {\n        return entries.filter(entry => {\n          return entry.id !== removeEntry.removedId\n        })\n      })\n    },\n  })\n\n  const [date, setDate] = useState(new Date(data.entry.time * 1000))\n  const [extraFood, setExtraFood] = useState(data.entry.extra_food)\n  const [isBottleOnly, setIsBottleOnly] = useState(data.entry.type === 'bottle')\n  const [breastFeedingSource, setBreastFeedingSource] = useState(data.entry.source)\n  const [vitamin, setVitamin] = useState(data.entry.vitamin)\n  const [feedingDuration, setFeedingDuration] = useState(data.entry.feeding_duration)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY,\n      variables: {\n        id,\n        ...variables\n      },\n      update: (store) => {\n        updateGetEntriesCache(store, spaceId, (entries) => {\n          return entries.sort((e1, e2) => e2.time - e1.time)\n        })\n      }\n    })\n  }), [client, id])\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const getFeedingType = (extraFoodInput, isBottleOnlyInput) => {\n    if (extraFoodInput === 0) {\n      return 'breast'\n    }\n\n    return isBottleOnlyInput\n      ? 'bottle'\n      : 'mixed'\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    setIsBottleOnly(true)\n\n    updateEntry({\n      extra_food: value,\n      type: getFeedingType(value, true)\n    })\n  }\n\n  const updateFeedingType = event => {\n    const { checked } = event.target\n    setIsBottleOnly(checked)\n\n    const entryType = getFeedingType(extraFood, checked)\n\n    updateEntry({\n      type: entryType\n    })\n  }\n\n  const updateVitamin = (event, newVitamin) => {\n    setVitamin(newVitamin === \"1\")\n\n    updateEntry({\n      vitamin: newVitamin === \"1\"\n    })\n  }\n\n  const breastFeedingSourceChanged = (source) => {\n    setBreastFeedingSource(source)\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to={SpacePage.path({id: spaceId})}/>\n  }\n\n  const updateFeedingDuration = (value) => {\n    setFeedingDuration(value)\n\n    updateEntry({\n      feeding_duration: value\n    })\n  }\n\n  const feedingSourceComponent = !isBottleOnly\n    ? <Grid item xs={12} md={12}>\n      <Paper className={classes.root}>\n        <FeedingSourceSelector\n          id={id}\n          breastFeedingSource={breastFeedingSource}\n          onChange={breastFeedingSourceChanged}\n        />\n      </Paper>\n    </Grid>\n    : null\n\n  const feedingDurationComponent = !isBottleOnly\n    ? <Grid item xs={12} md={12}>\n      <Paper className={classes.root}>\n        <Typography paragraph>\n          Feeding duration - {feedingDuration}min\n        </Typography>\n        <Slider\n          defaultValue={feedingDuration}\n          valueLabelDisplay=\"auto\"\n          step={1}\n          marks\n          min={0}\n          max={30}\n          onChange={(e, value) => updateFeedingDuration(value)}\n        />\n      </Paper>\n    </Grid>\n    : null\n\n  return (\n     <header>\n       <div className={[\"App-header\", classes.dateTimeBar].join(' ')}>\n         <div className={classes.dateTime}>\n           <Button className={classes.arrow} onClick={() => updateDate(addHours(date, 1))}>\n             <ArrowUp/>\n           </Button>\n           <Typography variant='h5'>\n             <span>{getHours(date)}</span>\n           </Typography>\n           <Button className={classes.arrow}  onClick={() => updateDate(subHours(date, 1))}>\n             <ArrowDown/>\n           </Button>\n         </div>\n          :\n         <div className={classes.dateTime}>\n           <Button className={classes.arrow} onClick={() => updateDate(addMinutes(date, 5))}>\n             <ArrowUp/>\n           </Button>\n           <Typography variant='h5'>\n             <span>{getMinutes(date)}</span>\n           </Typography>\n           <Button className={classes.arrow} onClick={() => updateDate(subMinutes(date, 5))}>\n             <ArrowDown/>\n           </Button>\n         </div>\n         <div className={[classes.dateTime, classes.date].join(' ')}>\n           <Button className={classes.arrow} onClick={() => updateDate(addDays(date, 1))}>\n             <ArrowUp/>\n           </Button>\n           <Typography variant='h6'>\n             <span>{formatDay(date)}</span>\n           </Typography>\n           <Button className={classes.arrow} onClick={() => updateDate(subDays(date, 1))}>\n             <ArrowDown/>\n           </Button>\n         </div>\n        </div>\n\n       <Container maxWidth=\"sm\">\n\n          <Grid container spacing={2} direction='row' justify='center'>\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Extra food - {extraFood}ml\n                </Typography>\n\n                <Slider\n                  defaultValue={extraFood}\n                  valueLabelDisplay='off'\n                  step={5}\n                  min={0}\n                  max={250}\n                  onChange={(e, value) => updateExtraFood(value)}\n                />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={isBottleOnly}\n                      onChange={updateFeedingType}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Bottle only\"\n                />\n              </Paper>\n            </Grid>\n\n            {feedingDurationComponent}\n\n            {feedingSourceComponent}\n\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Got vitamin?\n                </Typography>\n\n                <ToggleButtonGroup value={vitamin ? \"1\" : \"0\"} exclusive onChange={updateVitamin}>\n                  <ToggleButton value=\"1\">Yes</ToggleButton>\n                  <ToggleButton value=\"0\">No</ToggleButton>\n                </ToggleButtonGroup>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Danger zone\n                </Typography>\n\n                <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n              </Paper>\n            </Grid>\n          </Grid>\n       </Container>\n      </header>\n  )\n}\n\nexport default EntryForm\n","import React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n  Container,\n  CircularProgress,\n  IconButton\n} from '@material-ui/core'\n\n\nimport { useQuery } from '@apollo/react-hooks'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Layout from './Layout'\nimport EntryForm from './EntryForm'\n\nimport { SpacePage } from '../routing'\n\nimport {\n  GET_ENTRY\n} from '../queries'\n\n\nfunction EntryPage({match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const spaceId = data && data.entry.spaceId\n\n  const backButton = spaceId && (\n    <IconButton\n    edge='start'\n    color='inherit'\n    component={React.forwardRef((props, ref) => <RouterLink {...props} ref={ref} to={SpacePage.path({id: spaceId})}/>)}>\n      <ArrowBackIcon/>\n    </IconButton>\n  )\n\n  return (\n    <Layout toolbarIcon={backButton}>\n      {\n        loading ? <>\n          <header className=\"App-header\" />\n          <Container maxWidth=\"sm\">\n            <CircularProgress/>\n          </Container>\n        </>\n        : <EntryForm data={data} match={match} />\n      }\n    </Layout>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nconst ScrollToTop = ({ children, location: { pathname } }) => {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return children || null\n};\n\nexport default withRouter(ScrollToTop)\n","import {ApolloLink, Observable} from 'apollo-link'\n\nexport class AuthLink extends ApolloLink {\n  constructor(user,token) {\n    super()\n    this.token = token\n    this.user = user\n  }\n\n  setTokenHeader(operation) {\n    operation.setContext({ headers: { authorization: `Bearer ${this.token}` } })\n  }\n\n  refreshToken() {\n    return new Promise(resolve => {\n      this.user.reloadAuthResponse()\n        .then(res => {\n          this.token = res.id_token\n          resolve(true)\n        })\n    })\n  }\n\n  request(operation, forward) {\n    this.setTokenHeader(operation)\n\n    return new Observable(observer => {\n      let subscription, innerSubscription;\n      try {\n        subscription = forward(operation).subscribe({\n          next: observer.next.bind(observer),\n          complete: observer.complete.bind(observer),\n          error: networkError => {\n            if (networkError.statusCode === 400) {\n              this.refreshToken().then(success => {\n                if (success) {\n                  this.setTokenHeader(operation)\n                  innerSubscription = forward(operation).subscribe(observer)\n                } else {\n                  observer.error(new Error('refreshing token failed'))\n                }\n              });\n            } else {\n              observer.error(networkError)\n            }\n          },\n        });\n      } catch (e) {\n        observer.error(e)\n      }\n\n      return () => {\n        if (subscription) subscription.unsubscribe()\n        if (innerSubscription) innerSubscription.unsubscribe()\n      }\n    })\n  }\n}\n","import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { AuthLink } from './AuthLink'\n\nexport default function getClient(user) {\n  const httpLink = createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n\n  const authLink = new AuthLink(user, user.tokenId)\n\n  return new ApolloClient({\n    cache: new InMemoryCache({\n      cacheRedirects: {\n        Query: {\n          entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n        },\n      },\n    }),\n    link: authLink.concat(httpLink)\n  })\n}\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nimport Space from './components/SpacePage'\nimport SpaceSelector from './components/SpaceSelector'\nimport SignInForm from './components/SignInForm'\nimport EntryPage from './components/EntryPage'\nimport NotFound from './components/NotFound'\nimport ScrollToTop from './components/ScrollToTop'\nimport ProfileContext from './ProfileContext'\nimport getClient from './client'\nimport './App.css'\nimport {HomePage, SelectPage, EditPage, SpacePage} from './routing'\n\nconst RememberSpace = ({match, write, children}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    write(id)\n  }, [write, id])\n\n  return children\n}\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const { read, write } = storage\n\n  const lastSpaceId = read(storageKey)\n\n  const [user, setUser] = useState(null)\n\n  return (\n    <ProfileContext.Provider value={user && user.profileObj}>\n      <div className='App'>\n        <HashRouter>\n          <ScrollToTop />\n\n          <Switch>\n            {\n              user ?\n                <ApolloProvider client={getClient(user)}>\n                  <Switch>\n\n                    <Route exact path={SelectPage.pattern} render={props => <SpaceSelector {...props} />} />\n                    <Route path={SpacePage.pattern} render={\n                      props =>\n                        <RememberSpace write={id => write(storageKey, id)} match={props.match}>\n                          <Space {...props} />\n                        </RememberSpace>}\n                    />\n                    <Route path={EditPage.pattern} render={props => <EntryPage {...props} />} />\n\n                    <Route exact path={HomePage.pattern}>\n                      { lastSpaceId\n                        ? <Redirect to={SpacePage.path({id: lastSpaceId})}/>\n                        : <Redirect to={SelectPage.path()}/>\n                      }\n                    </Route>\n\n                  </Switch>\n              </ApolloProvider> :\n              <Route path={HomePage.pattern} render={props => <SignInForm {...props} onLogin={user => {\n                setUser(user)\n              }}/>} />\n            }\n            <Route component={NotFound} />\n          </Switch>\n        </HashRouter>\n      </div>\n    </ProfileContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(<App storage={{read, write}}/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}