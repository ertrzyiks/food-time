{"version":3,"sources":["components/ShowError.js","time.js","components/GrouppedList.js","useInterval.js","queries/getEntries.js","queries/getEntry.js","queries/updateEntry.js","queries/removeEntry.js","queries/getSpaces.js","components/List.js","components/SpaceSelector.js","components/SignInForm.js","utils.js","components/EntryPage.js","components/NotFound.js","client.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","event","reason","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","item","opacity","root","background","paper","subheader","color","common","black","textAlign","subheader_total","float","icon_wrapper","display","flexDirection","fontSize","SuggestedListItem","time","key","count","setCount","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","now","date","ListItem","ListItemText","primary","secondary","Nothing","GrouppedList","_ref2","groupedEntries","List","disablePadding","entries","map","_ref4","_ref5","group","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","filter","_ref3","isSuggested","length","getTotalEntries","_ref6","extra_food","meantime","GrouppedList_SuggestedListItem","ListItemIcon","Opacity_default","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","GET_ENTIRES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","UPDATE_ENTRY_TIME","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","GET_SPACES","getSpaces_templateObject","CREATE_ENTRY","List_templateObject","appBar","avatar","margin","width","height","toolbar","justifyContent","title","fab","position","bottom","spacing","right","zIndex","listWrapper","marginTop","EntryList","match","profile","spaceId","params","_useQuery","useQuery","variables","loading","data","hasData","_useMutation","useMutation","refetchQueries","_useMutation2","createEntry","_useMutation2$","creationLoading","creationError","sortedDataEntries","slice","sort","e1","e2","reverse","reduce","acc","entry","last","toConsumableArray","objectSpread","theMostRecent","theMostRecentDate","getHours","nextEntryInMinutes","unshift","Math","round","addMinutes","day","startOfDay","getTime","push","Fragment","components_ShowError","AppBar","Toolbar","disableGutters","Typography","variant","Avatar","alt","src","imageUrl","Container","maxWidth","Fab","onClick","disabled","Add_default","extendedIcon","Paper","components_GrouppedList","CircularProgress","SpaceSelector","history","spaces","space","display_name","minHeight","loader","top","left","SignInForm","onLogin","responseGoogle","response","setLoading","timeout","setTimeout","clearTimeout","google_login","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","debounce","fn","nextTask","pending","_len","arguments","args","Array","_key","apply","execute","then","toCall","createStyles","padding","EntryPage","update","store","removeEntry","listData","readQuery","query","e","writeQuery","removedId","mutationData","setDate","_useState3","_useState4","extraFood","setExtraFood","client","useApolloClient","updateEntry","useCallback","mutate","mutation","updateDate","react_router","Grid","container","direction","justify","xs","md","paragraph","size","addDays","subDays","Remove_default","addHours","subHours","subMinutes","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","onChange","value","updateExtraFood","Button","NotFound","RouterLink","getClient","token","httpLink","createHttpLink","uri","process","authLink","setContext","_","headers","authorization","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","getCacheKey","__typename","link","RememberSpace","write","children","App","storage","read","lastSpaceId","user","setUser","react_router_dom","ApolloContext","tokenId","exact","path","render","props","components_SpaceSelector","App_RememberSpace","components_List","assign","profileObj","components_EntryPage","components_SignInForm","Boolean","window","location","hostname","ReactDOM","src_App","JSON","parse","localStorage","getItem","setItem","stringify","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbf9c16c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`\n  }\n\n  return `${hours}:${minutes}h`\n}\n","import React, { useState } from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { ListItemIcon, IconButton } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\nimport Opacity from '@material-ui/icons/Opacity'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatElapsedTime, formatTime } from '../time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { useInterval } from '../useInterval'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#f0f2fa',\n    color: theme.palette.common.black,\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  },\n  icon_wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 12\n  }\n}))\n\nconst SuggestedListItem = ({time, key}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const classes = useStyles()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={classes.item}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nconst Nothing = () => null\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => (\n          <CSSTransitionGroup\n            key={timestamp}\n            transitionName=\"example\"\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}>\n            <ListSubheader className={classes.subheader}>\n              {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n              <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n            </ListSubheader>\n\n            {group.map(({id, time, extra_food, meantime, isSuggested}) => (\n                isSuggested\n                  ? <SuggestedListItem key={id} time={time} />\n                  : <ListItem key={id}>\n                    <ListItemIcon>\n                      {extra_food > 0\n                        ?\n                          <div className={classes.icon_wrapper}>\n                            <Opacity/> {extra_food}ml\n                          </div>\n                        : <Nothing/>\n                      }\n                    </ListItemIcon>\n\n                    <ListItemText secondary={meantime} >\n                      {formatTime(time * 1000)}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                      {\n                        (now - time * 1000 < A_DAY) &&\n                        <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                          <Edit/>\n                        </IconButton>\n                      }\n                    </ListItemSecondaryAction>\n                  </ListItem>\n              )\n            )}\n          </CSSTransitionGroup>\n        ))\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTIRES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n      extra_food\n      spaceId\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n      spaceId\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY_TIME = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const GET_SPACES = gql`\n  query getSpaces {\n    spaces {\n      id\n      display_name\n    }\n  }\n`\n","import React from 'react';\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport AddIcon from '@material-ui/icons/Add'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Fab\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from '../time'\n\nimport { GET_ENTIRES } from '../queries'\n\nconst CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#3e4451',\n  },\n  avatar: {\n    margin: 15,\n    width: 40,\n    height: 40,\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n    height: 70\n  },\n  title: {\n    margin: 15,\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  },\n  listWrapper: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nfunction EntryList({match, profile}) {\n  const classes = useStyles();\n\n  const spaceId = match.params.id\n\n  const { loading, data, error } = useQuery(GET_ENTIRES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const sortedDataEntries = hasData && data.entries.slice().sort((e1, e2) => e2.time - e1.time)\n\n  const entries = hasData && sortedDataEntries.reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n  if (entries.length > 0) {\n    const theMostRecent = entries[0]\n    const theMostRecentDate = new Date(theMostRecent.time * 1000)\n    const hours = theMostRecentDate.getHours()\n    const isLate = (hours >= 21 || hours < 3)\n    const nextEntryInMinutes = isLate ? 240 : 210\n\n    entries.unshift({\n      id: 'future',\n      time: Math.round(addMinutes(theMostRecentDate, nextEntryInMinutes) / 1000),\n      extra_food: 0,\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n\n  return (\n    <>\n      { (error || creationError) && <ShowError message={error || creationError} /> }\n\n      <AppBar className={classes.appBar}>\n        <Toolbar disableGutters={true} className={classes.toolbar}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Food time\n          </Typography>\n          <Avatar alt=\"Profile picture\" src={profile.imageUrl} className={classes.avatar} />\n        </Toolbar>\n      </AppBar>\n\n      <Toolbar className={classes.toolbar}/>\n\n      <Container className={classes.listWrapper} maxWidth=\"sm\">\n        <Fab variant='extended' color='primary' aria-label=\"delete\" className={classes.fab} onClick={onAddEntry} disabled={creationLoading}>\n          <AddIcon className={classes.extendedIcon} />\n          New feeding\n        </Fab>\n\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary='Click the button to start measuring intervals' />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n\n        { loading && <CircularProgress /> }\n      </Container>\n    </>\n  )\n}\n\nexport default EntryList;\n","import React from 'react'\n\nimport {\n  CircularProgress,\n  Container,\n  Paper,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core'\n\nimport { GET_SPACES } from '../queries'\nimport { useQuery } from 'react-apollo-hooks'\n\nfunction SpaceSelector({history}) {\n  const { loading, data, error } = useQuery(GET_SPACES)\n\n  const onClick = (id) => {\n    history.push(`/space/${id}`)\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      { loading && <CircularProgress/>}\n      { !loading &&\n        <Paper>\n          <List>\n            { data.spaces.map(space => (\n              <ListItem key={space.id} onClick={() => onClick(space.id)}>\n                <ListItemText>{space.display_name}</ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      }\n    </Container>\n\n  )\n}\n\nexport default SpaceSelector\n","import React, { useState, useEffect } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { CircularProgress } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    minHeight: 40\n  },\n  loader: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: -3,\n    bottom: -5,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n}))\n\nconst SignInForm = ({ onLogin }) => {\n  const classes = useStyles()\n\n  const responseGoogle = (response) => {\n    onLogin(response)\n  }\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setLoading(false)\n    }, 1500)\n\n    return () => clearTimeout(timeout)\n  })\n\n  return  <>\n    <header className=\"App-header\">\n    </header>\n\n    <div className={classes.root}>\n      { loading && <div className={classes.loader}><CircularProgress /></div> }\n      <GoogleLogin\n        clientId='299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com'\n        buttonText='Login'\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        isSignedIn={true}\n        cookiePolicy='single_host_origin'\n      />\n    </div>\n  </>\n}\n\nexport default SignInForm\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect } from 'react-router-dom'\n\nimport { Button, Container, Fab, Paper, CircularProgress, Typography, Grid, Slider } from '@material-ui/core'\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { formatTime, formatDay } from '../time'\nimport { debounce } from '../utils'\n\nimport {\n  GET_ENTIRES,\n  GET_ENTRY,\n  UPDATE_ENTRY_TIME,\n  REMOVE_ENTRY\n} from '../queries'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n  }),\n)\n\nfunction EntryPage({match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const spaceId = data && data.entry.spaceId\n\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      let listData = null\n\n      try {\n        listData = store.readQuery({query: GET_ENTIRES, variables: {spaceId}})\n      } catch (e) {\n        // Reading error, do nothing\n      }\n\n      if (!listData) {\n        return\n      }\n\n      store.writeQuery({\n        query: GET_ENTIRES, variables: {spaceId}, data: {\n          entries: listData.entries.filter(entry => {\n            return entry.id !== removeEntry.removedId\n          })\n        }\n      })\n    },\n  })\n\n  const [date, setDate] = useState(null)\n  const [extraFood, setExtraFood] = useState(null)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY_TIME,\n      variables: {\n        id,\n        ...variables\n      }\n    })\n  }), [client, id])\n\n  if (date === null && !loading) {\n    setDate(new Date(data.entry.time * 1000))\n  }\n\n  if (extraFood === null && !loading) {\n    setExtraFood(data.entry.extra_food)\n  }\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    updateEntry({\n      extra_food: value\n    })\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to={`/space/${spaceId}`}/>\n  }\n\n  return (\n    <>\n      <header className=\"App-header\">\n        { !loading &&\n          <Typography>\n            {formatTime(date)} {formatDay(date)}\n          </Typography>\n        }\n      </header>\n\n      <Container maxWidth=\"sm\">\n        {\n          loading\n            ? <CircularProgress/>\n            : <Grid container spacing={2} direction='row' justify='center'>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Day\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addDays(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subDays(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Hours\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addHours(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subHours(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Minutes\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addMinutes(date, 5))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subMinutes(date, 5))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Extra food - {extraFood}ml\n                  </Typography>\n\n                  <Slider\n                    defaultValue={extraFood}\n                    aria-labelledby='discrete-slider'\n                    valueLabelDisplay='off'\n                    step={5}\n                    min={0}\n                    max={150}\n                    onChange={(e, value) => updateExtraFood(value)}\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Danger zone\n                  </Typography>\n\n                  <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n                </Paper>\n              </Grid>\n            </Grid>\n        }\n\n      </Container>\n    </>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nexport default function getClient(token) {\n  const httpLink = createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n\n  const authLink = setContext((_, { headers }) => {\n    return {\n      headers: {\n        ...headers,\n        authorization: `Bearer ${token}`\n      }\n    }\n  })\n\n  return new ApolloClient({\n    cache: new InMemoryCache({\n      cacheRedirects: {\n        Query: {\n          entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n        },\n      },\n    }),\n    link: authLink.concat(httpLink)\n  })\n}\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n\nimport EntryList from './components/List'\nimport SpaceSelector from './components/SpaceSelector'\nimport SignInForm from './components/SignInForm'\nimport EntryPage from './components/EntryPage'\nimport NotFound from './components/NotFound'\nimport getClient from './client'\nimport './App.css'\n\nconst RememberSpace = ({match, write, children}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    write(id)\n  }, [write, id])\n\n  return children\n}\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const { read, write } = storage\n\n  const lastSpaceId = read(storageKey)\n\n  const [user, setUser] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          {\n            user ?\n              <ApolloProvider client={getClient(user.tokenId)}>\n                <Switch>\n\n                  <Route exact path='/select' render={props => <SpaceSelector {...props} />} />\n                  <Route path='/space/:id' render={\n                    props =>\n                      <RememberSpace write={id => write(storageKey, id)} match={props.match}>\n                        <EntryList {...props} profile={user.profileObj} />\n                      </RememberSpace>}\n                  />\n                  <Route path='/edit/:id' render={props => <EntryPage {...props} />} />\n\n                  <Route exact path='/'>\n                    { lastSpaceId\n                      ? <Redirect to={`/space/${lastSpaceId}`}/>\n                      : <Redirect to='/select'/>\n                    }\n                  </Route>\n\n                </Switch>\n            </ApolloProvider> :\n            <Route path='/' render={props => <SignInForm {...props} onLogin={user => setUser(user)}/>} />\n          }\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(<App storage={{read, write}}/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}