{"version":3,"sources":["ShowError.js","time.js","GrouppedList.js","useInterval.js","queries/getEntries.js","queries/getEntry.js","queries/updateEntry.js","queries/removeEntry.js","List.js","SpaceSelector.js","utils.js","EntryPage.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","event","reason","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","item","opacity","root","background","paper","subheader","textAlign","subheader_total","float","SuggestedListItem","time","key","count","setCount","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","now","date","ListItem","ListItemText","primary","secondary","GrouppedList","_ref2","groupedEntries","List","disablePadding","entries","map","_ref4","_ref5","group","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","filter","_ref3","isSuggested","length","getTotalEntries","_ref6","meantime","GrouppedList_SuggestedListItem","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","GET_ENTIRES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","UPDATE_ENTRY_TIME","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","CREATE_ENTRY","List_templateObject","EntryList","spaceId","_useQuery","useQuery","variables","loading","data","hasData","_useMutation","useMutation","refetchQueries","_useMutation2","createEntry","_useMutation2$","creationLoading","creationError","slice","reverse","reduce","acc","entry","last","toConsumableArray","objectSpread","theMostRecent","theMostRecentDate","getHours","nextEntryInMinutes","unshift","Math","round","addMinutes","day","startOfDay","getTime","push","Fragment","src_ShowError","Button","variant","size","color","onClick","disabled","Container","maxWidth","Paper","src_GrouppedList","CircularProgress","SpaceSelector","onSelect","value","setValue","onSubmit","Grid","container","spacing","direction","TextField","label","onChange","target","margin","type","debounce","fn","nextTask","pending","_len","arguments","args","Array","_key","apply","execute","then","toCall","createStyles","padding","EntryPage","match","params","update","store","removeEntry","listData","readQuery","query","e","writeQuery","removedId","mutationData","setDate","_useState3","_useState4","extraFood","setExtraFood","client","useApolloClient","updateEntry","useCallback","mutate","mutation","extra_food","updateDate","react_router","Typography","justify","xs","md","paragraph","Fab","addDays","Add_default","subDays","Remove_default","addHours","subHours","subMinutes","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","updateExtraFood","NotFound","RouterLink","App","storage","read","write","setSpaceId","react_router_dom","exact","path","render","src_List","props","src_EntryPage","assign","src_SpaceSelector","selectedSpaceId","Boolean","window","location","hostname","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","_","getCacheKey","__typename","link","createHttpLink","uri","process","ReactDOM","ApolloContext","src_App","JSON","parse","localStorage","getItem","setItem","stringify","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6ca9974.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`\n  }\n\n  return `${hours}:${minutes}h`\n}\n","import React, { useState } from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport IconButton from '@material-ui/core/IconButton'\nimport Edit from '@material-ui/icons/Edit'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatElapsedTime, formatTime } from './time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { useInterval } from './useInterval'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#ead3d3',\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  }\n}))\n\nconst SuggestedListItem = ({time, key}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const classes = useStyles()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={classes.item}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => (\n          <CSSTransitionGroup\n            key={timestamp}\n            transitionName=\"example\"\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}>\n            <ListSubheader className={classes.subheader}>\n              {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n              <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n            </ListSubheader>\n\n            {group.map(({time, id, meantime, isSuggested}) => (\n                isSuggested\n                  ? <SuggestedListItem key={id} time={time} />\n                  : <ListItem key={id}>\n                    <ListItemText primary={formatTime(time * 1000)} secondary={meantime} />\n                    {\n                      (now - time * 1000 < A_DAY) &&\n                      <ListItemSecondaryAction>\n                        <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                          <Edit/>\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    }\n                  </ListItem>\n              )\n            )}\n          </CSSTransitionGroup>\n        ))\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTIRES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY_TIME = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import React from 'react';\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\n\nimport Button from '@material-ui/core/Button'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport { CircularProgress,  List, ListItem, ListItemText } from '@material-ui/core'\n\nimport './App.css'\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from './time'\n\nimport { GET_ENTIRES } from './queries'\n\nconst CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n\nfunction EntryList({spaceId}) {\n  const { loading, data, error } = useQuery(GET_ENTIRES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const entries = hasData && data.entries.slice().reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n  if (entries.length > 0) {\n    const theMostRecent = entries[0]\n    const theMostRecentDate = new Date(theMostRecent.time * 1000)\n    const hours = theMostRecentDate.getHours()\n    const isLate = (hours > 21 || hours < 6)\n    const nextEntryInMinutes = isLate ? 240 : 210\n\n    entries.unshift({\n      id: 'future',\n      time: Math.round(addMinutes(theMostRecentDate, nextEntryInMinutes) / 1000),\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n\n  return (\n    <>\n      <header className=\"App-header\">\n        { (error || creationError) && <ShowError message={error || creationError} /> }\n\n        <Button variant=\"contained\" size='large' color=\"primary\" onClick={onAddEntry} disabled={creationLoading}>\n          Now\n        </Button>\n      </header>\n\n      <Container maxWidth=\"sm\">\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary='Click the button to start measuring intervals' />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n\n        { loading && <CircularProgress /> }\n      </Container>\n    </>\n  )\n}\n\nexport default EntryList;\n","import React, { useState } from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nfunction SpaceSelector({onSelect}) {\n  const [value, setValue] = useState('')\n\n  return (\n    <>\n      <header className=\"App-header\">\n      </header>\n\n      <form onSubmit={() => onSelect(value)}>\n        <Grid container spacing={5} direction=\"column\">\n          <Grid item>\n            <TextField\n              label=\"Space name\"\n              value={value}\n              onChange={event => setValue(event.target.value)}\n              margin=\"normal\"\n            />\n          </Grid>\n\n          <Grid item>\n            <Button type='submit' variant=\"contained\" color=\"primary\" >\n              Proceed\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n\n  )\n}\n\nexport default SpaceSelector\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect } from 'react-router-dom'\n\nimport { Button, Container, Fab, Paper, CircularProgress, Typography, Grid, Slider } from '@material-ui/core'\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { formatTime, formatDay } from './time'\nimport { debounce } from './utils'\n\nimport {\n  GET_ENTIRES,\n  GET_ENTRY,\n  UPDATE_ENTRY_TIME,\n  REMOVE_ENTRY\n} from './queries'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n  }),\n)\n\nfunction EntryPage({spaceId, match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      let listData = null\n\n      try {\n        listData = store.readQuery({query: GET_ENTIRES, variables: {spaceId}})\n      } catch (e) {\n        // Reading error, do nothing\n      }\n\n      if (!listData) {\n        return\n      }\n\n      store.writeQuery({\n        query: GET_ENTIRES, variables: {spaceId}, data: {\n          entries: listData.entries.filter(entry => {\n            return entry.id !== removeEntry.removedId\n          })\n        }\n      })\n    },\n  })\n\n  const [date, setDate] = useState(null)\n  const [extraFood, setExtraFood] = useState(null)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY_TIME,\n      variables: {\n        id,\n        ...variables\n      }\n    })\n  }), [client, id])\n\n  if (date === null && !loading) {\n    setDate(new Date(data.entry.time * 1000))\n  }\n\n  if (extraFood === null && !loading) {\n    setExtraFood(data.entry.extra_food)\n  }\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    updateEntry({\n      extra_food: value\n    })\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to='/'/>\n  }\n\n  return (\n    <>\n      <header className=\"App-header\">\n        { !loading &&\n          <Typography>\n            {formatTime(date)} {formatDay(date)}\n          </Typography>\n        }\n      </header>\n\n      <Container maxWidth=\"sm\">\n        {\n          loading\n            ? <CircularProgress/>\n            : <Grid container spacing={2} direction='row' justify='center'>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Day\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addDays(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subDays(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Hours\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addHours(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subHours(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Minutes\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addMinutes(date, 5))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subMinutes(date, 5))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Extra food - {extraFood}ml\n                  </Typography>\n\n                  <Slider\n                    defaultValue={extraFood}\n                    aria-labelledby='discrete-slider'\n                    valueLabelDisplay='off'\n                    step={5}\n                    min={0}\n                    max={150}\n                    onChange={(e, value) => updateExtraFood(value)}\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Danger zone\n                  </Typography>\n\n                  <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n                </Paper>\n              </Grid>\n            </Grid>\n        }\n\n      </Container>\n    </>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import React, { useEffect, useState } from 'react';\nimport EntryList from './List'\nimport SpaceSelector from './SpaceSelector'\nimport EntryPage from './EntryPage'\nimport NotFound from './NotFound'\nimport './App.css'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const { read, write } = storage\n\n  const [spaceId, setSpaceId] = useState(read(storageKey))\n\n  useEffect(() => {\n    write(storageKey, spaceId)\n  }, [spaceId, write])\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          {\n            spaceId ?\n            <>\n              <Route exact path=\"/\" render={() => <EntryList spaceId={spaceId} />} />\n              <Route path=\"/edit/:id\" render={props => <EntryPage {...props} spaceId={spaceId}/>} />\n            </> :\n            <Route exact path=\"/\" render={props => <SpaceSelector {...props} onSelect={selectedSpaceId => setSpaceId(selectedSpaceId)}/>} />\n          }\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from 'react-apollo-hooks'\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    cacheRedirects: {\n      Query: {\n        entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n      },\n    },\n  }),\n  link: createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n})\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(\n  (\n    <ApolloProvider client={client}>\n      <App storage={{read, write}}/>\n    </ApolloProvider>\n  ),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}