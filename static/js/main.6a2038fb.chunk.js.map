{"version":3,"sources":["useEventListener.js","components/ShowError.js","time.js","useInterval.js","components/GrouppedList.js","components/TimeSinceLastFeeding.js","ProfileContext.js","routing.js","components/Layout.js","queries/getEntries.js","queries/getEntry.js","queries/createEntry.js","queries/updateEntry.js","queries/removeEntry.js","queries/getSpaces.js","queries/createSpace.js","components/List.js","components/SpaceSelector.js","components/SignInForm.js","utils.js","components/EntryPage.js","components/NotFound.js","AuthLink.js","client.js","App.js","serviceWorker.js","index.js"],"names":["global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","useEventListener","eventName","handler","element","arguments","length","undefined","savedCallback","React","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","reason","networkError","result","errors","slice","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","useInterval","callback","delay","id","setInterval","clearInterval","item","opacity","root","background","paper","subheader","color","common","black","textAlign","subheader_total","float","useIconStyles","icon_wrapper","display","flexDirection","fontSize","marginRight","bottle_icon","icon_container","small_icon","SuggestedListItem","time","key","count","setCount","now","date","ListItem","ListItemText","primary","secondary","IconGroup","_ref2","icons","type","extra_food","ChildCare_default","Fragment","Opacity_default","join","ListItemIcon","GrouppedList","_ref3","groupedEntries","List","disablePadding","entries","map","_ref5","_ref6","group","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","filter","_ref4","isSuggested","getTotalEntries","_ref7","meantime","GrouppedList_SuggestedListItem","GrouppedList_IconGroup","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","info","main","messageBox","marginBottom","position","top","zIndex","alignItems","icon","spacing","SnackbarContentWrapper","props","variant","children","aria-describedby","Info_default","Warning_default","TimeSinceLastFeeding","lastFeedingTime","nextFeedingTime","infoText","Typography","TimeSinceLastFeeding_SnackbarContentWrapper","class","ProfileContext","createContext","getRoute","pattern","path","_len","params","Array","_key","generatePath","apply","HomePage","SelectPage","SpacePage","EditPage","appBar","avatar","margin","width","height","marginLeft","toolbar","paddingLeft","Layout","toolbarIcon","profile","useContext","_React$useState","_React$useState2","anchorEl","setAnchorEl","AppBar","Toolbar","disableGutters","Avatar","alt","src","imageUrl","aria-controls","aria-haspopup","onClick","currentTarget","Menu","getContentAnchorEl","keepMounted","Boolean","MenuItem","RouterLink","Box","my","GET_ENTRIES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","CREATE_ENTRY","createEntry_templateObject","UPDATE_ENTRY_TIME","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","GET_SPACES","getSpaces_templateObject","CREATE_SPACE","createSpace_templateObject","fab","bottom","right","listWrapper","marginTop","EntryList","match","spaceId","_useQuery","useQuery","variables","loading","data","refetch","hasData","onChange","useCallback","document","hidden","_useMutation","useMutation","refetchQueries","_useMutation2","createEntry","_useMutation2$","creationLoading","creationError","reverse","reduce","acc","entry","last","toConsumableArray","objectSpread","theMostRecent","theMostRecentDate","getHours","nextEntryInMinutes","unshift","Math","round","addMinutes","day","startOfDay","getTime","push","components_Layout","components_ShowError","Container","maxWidth","Fab","disabled","Add_default","components_TimeSinceLastFeeding","Paper","components_GrouppedList","CircularProgress","SpaceSelector","name","createSpace","spaces","space","divider","button","display_name","minHeight","loader","left","SignInForm","onLogin","responseGoogle","response","setLoading","timeout","setTimeout","clearTimeout","google_login","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","debounce","fn","nextTask","pending","args","execute","then","toCall","createStyles","padding","updateGetEntriesCache","store","listData","readQuery","query","e","writeQuery","EntryPage","update","removeEntry","removedId","mutationData","setDate","_useState3","_useState4","extraFood","setExtraFood","_useState5","_useState6","isBottleOnly","setIsBottleOnly","client","useApolloClient","updateEntry","mutate","mutation","sort","e1","e2","updateDate","getFeedingType","extraFoodInput","isBottleOnlyInput","react_router","backButton","react_router_dom","assign","ArrowBack_default","Grid","container","direction","justify","xs","md","paragraph","size","addDays","subDays","Remove_default","addHours","subHours","subMinutes","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","value","updateExtraFood","FormControlLabel","control","Checkbox","checked","target","entryType","label","Button","NotFound","AuthLink","_ApolloLink","user","token","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","operation","setContext","headers","authorization","_this2","Promise","resolve","reloadAuthResponse","res","id_token","forward","_this3","setTokenHeader","Observable","observer","subscription","innerSubscription","subscribe","next","bind","complete","statusCode","refreshToken","success","Error","unsubscribe","ApolloLink","getClient","httpLink","createHttpLink","uri","process","authLink","tokenId","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","_","getCacheKey","__typename","link","RememberSpace","write","App","storage","read","lastSpaceId","setUser","src_ProfileContext","Provider","profileObj","ApolloContext","exact","render","components_SpaceSelector","App_RememberSpace","components_List","components_EntryPage","components_SignInForm","window","location","hostname","ReactDOM","src_App","JSON","parse","localStorage","getItem","setItem","stringify","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a2038fb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction useEventListener(eventName, handler, element = global) {\n  const savedCallback = React.useRef();\n\n  React.useEffect(() => {\n    savedCallback.current = handler;\n  }, [handler]);\n\n  React.useEffect(() => {\n    // Make sure element supports addEventListener\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) {\n      return;\n    }\n\n    const eventListener = event => savedCallback.current(event);\n\n    element.addEventListener(eventName, eventListener);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n\nexport default useEventListener;\n","import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n if (message.networkError\n   && message.networkError.result\n   && message.networkError.result.errors\n   && message.networkError.result.errors.length > 0) {\n    message = message.networkError.result.errors[0].message.slice(0, 100)\n }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (hours < 1) {\n    return `${minutes}min`\n  }\n\n  return `${hours}h ${minutes}min`\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useState } from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { ListItemIcon, IconButton } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\nimport BottleFeedingIcon from '@material-ui/icons/Opacity'\nimport BreastFeedingIcon from '@material-ui/icons/ChildCare'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatElapsedTime, formatTime } from '../time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { useInterval } from '../useInterval'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#f0f2fa',\n    color: theme.palette.common.black,\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  }\n}))\n\nconst useIconStyles = makeStyles({\n  icon_wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 12,\n    marginRight: 5\n  },\n  bottle_icon: {\n    color: '#24a0ff'\n  },\n  icon_container: {\n    display: 'flex'\n  },\n  small_icon: {\n    fontSize: '1rem'\n  }\n})\n\nconst SuggestedListItem = ({time, key}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const classes = useStyles()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={classes.item}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nconst IconGroup = ({ type, extra_food }) => {\n  const classes = useIconStyles()\n\n  let icons;\n  switch (type) {\n    case 'breast':\n      icons = (\n        <BreastFeedingIcon/>\n      )\n      break;\n    case 'bottle':\n      icons = (\n        <>\n          <BottleFeedingIcon className={classes.bottle_icon}/> {extra_food}ml\n        </>\n      )\n      break;\n    case 'mixed':\n      icons = (\n        <>\n          <div className={classes.icon_container}>\n            <BreastFeedingIcon className={classes.small_icon}/>\n            <BottleFeedingIcon className={[classes.bottle_icon, classes.small_icon].join(' ')}/>\n          </div>\n          <span>{extra_food}ml</span>\n        </>\n      )\n      break;\n  }\n\n  return (\n    <ListItemIcon>\n      <div className={classes.icon_wrapper}>\n        {icons}\n      </div>\n    </ListItemIcon>\n  )\n}\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => (\n          <CSSTransitionGroup\n            key={timestamp}\n            transitionName=\"example\"\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}>\n            <ListSubheader className={classes.subheader}>\n              {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n              <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n            </ListSubheader>\n\n            {group.map(({id, time, extra_food, type, meantime, isSuggested}) => {\n                return isSuggested\n                    ? <SuggestedListItem key={id} time={time}/>\n                    : <ListItem key={id}>\n                        <IconGroup type={type} extra_food={extra_food}/>\n\n                        <ListItemText secondary={meantime}>\n                          {formatTime(time * 1000)}\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          {\n                            (now - time * 1000 < A_DAY) &&\n                            <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                              <Edit/>\n                            </IconButton>\n                          }\n                        </ListItemSecondaryAction>\n                      </ListItem>\n              }\n            )}\n          </CSSTransitionGroup>\n        ))\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import React, { useState } from 'react'\nimport InfoIcon from '@material-ui/icons/Info'\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles'\nimport {SnackbarContent, Typography} from '@material-ui/core'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nimport {formatElapsedTime} from '../time'\nimport {useInterval} from '../useInterval';\n\nconst useStyles = makeStyles(theme => ({\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  messageBox: {\n    marginBottom: 20,\n    position: 'sticky',\n    top: 70,\n    zIndex:10\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  }\n}));\n\nconst SnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n  const { variant, children } = props;\n\n  return (\n    <SnackbarContent\n      className={[classes[variant], classes.messageBox].join(' ')}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {\n            variant === 'info'\n            ? <InfoIcon className={classes.icon}/>\n            : <WarningIcon className={classes.icon}/>\n          }\n          {children}\n        </span>\n      }\n    />\n  );\n}\n\n\n\nconst TimeSinceLastFeeding = ({lastFeedingTime, nextFeedingTime}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 30 * 1000)\n\n  const infoText = differenceInMinutes(new Date(), new Date(lastFeedingTime)) > 5\n  ? <>It's been&nbsp;<Typography variant=\"subtitle1\" component=\"span\">{formatElapsedTime(new Date(), new Date(lastFeedingTime))}</Typography>&nbsp;since last feeding </>\n  : <>Feeding in progress</>\n\n  return <SnackbarContentWrapper\n    class='mui-fixed'\n    variant={Date.now() > nextFeedingTime ? 'error' : 'info'}>\n    {infoText}\n  </SnackbarContentWrapper>\n}\n\nexport default TimeSinceLastFeeding\n","import React from 'react'\n\nconst ProfileContext = React.createContext(null)\n\nexport default ProfileContext\n","import { generatePath } from 'react-router'\n\nconst getRoute= (pattern) => {\n  return {\n    pattern,\n    path: (...params) => generatePath(pattern, ...params)\n  }\n}\n\nexport const HomePage = getRoute('/')\nexport const SelectPage = getRoute('/select')\nexport const SpacePage = getRoute('/space/:id')\nexport const EditPage =  getRoute('/edit/:id')\n\n\n","import React, { useContext } from 'react'\n\nimport {\n  AppBar,\n  Avatar,\n  Toolbar,\n  Typography,\n  Box,\n  Menu,\n  MenuItem\n} from '@material-ui/core'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport {makeStyles} from '@material-ui/core/styles'\nimport ProfileContext from '../ProfileContext'\n\nimport { SelectPage } from '../routing'\n\nconst useStyles = makeStyles({\n  appBar: {\n    backgroundColor: '#3e4451',\n  },\n  avatar: {\n    margin: 15,\n    width: 40,\n    height: 40,\n    marginLeft: 'auto'\n  },\n  toolbar: {\n    height: 70,\n    paddingLeft: 15\n  },\n})\n\nconst Layout = ({toolbarIcon, children}) => {\n  const classes = useStyles()\n  const profile = useContext(ProfileContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return <>\n    <AppBar className={classes.appBar}>\n      <Toolbar disableGutters={true} className={classes.toolbar}>\n        {toolbarIcon}\n\n        <Typography variant='h5'>\n          Food time\n        </Typography>\n\n        {profile &&\n          <>\n            <Avatar alt=\"Profile picture\"\n                    src={profile.imageUrl}\n                    aria-controls='user-menu'\n                    aria-haspopup='true'\n                    className={classes.avatar}\n                    onClick={handleClick}/>\n            <Menu\n              id='user-menu'\n              anchorEl={anchorEl}\n              anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n              getContentAnchorEl={null}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem component={RouterLink} to={SelectPage.path()} onClick={handleClose}>Spaces</MenuItem>\n            </Menu>\n          </>\n        }\n      </Toolbar>\n    </AppBar>\n\n    <Toolbar className={classes.toolbar}/>\n\n    <Box my={2}>\n    {children}\n    </Box>\n  </>\n}\n\nexport default Layout\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTRIES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n      extra_food\n      spaceId\n      type  \n      vitamin\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n      spaceId\n      type \n      vitamin\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY_TIME = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int, $type: String, $vitamin: Boolean) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food, type: $type, vitamin: $vitamin) {\n      id\n      time\n      extra_food\n      type  \n      vitamin\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const GET_SPACES = gql`\n  query getSpaces {\n    spaces {\n      id\n      display_name\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const CREATE_SPACE = gql`\n  mutation CreateSpace($name: String!) {\n    createSpace(name: $name) {\n      id\n      display_name\n    }\n  }\n`\n","import React from 'react'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\n\nimport AddIcon from '@material-ui/icons/Add'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Fab\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\nimport TimeSinceLastFeeding from './TimeSinceLastFeeding'\nimport Layout from './Layout'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from '../time'\n\nimport { GET_ENTRIES, CREATE_ENTRY } from '../queries'\nimport useEventListener from '../useEventListener'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  },\n  listWrapper: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\n\nfunction EntryList({match}) {\n  const classes = useStyles();\n\n  const spaceId = match.params.id\n\n  const { loading, data, error, refetch } = useQuery(GET_ENTRIES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const onChange = React.useCallback(() => {\n    if (document.hidden === false) {\n      refetch()\n    }\n  }, [refetch])\n\n  useEventListener('visibilitychange', onChange, document)\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const entries = hasData && data.entries.slice().reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n  if (entries.length > 0) {\n    const theMostRecent = entries[0]\n    const theMostRecentDate = new Date(theMostRecent.time * 1000)\n    const hours = theMostRecentDate.getHours()\n    const isLate = (hours >= 21 || hours < 3)\n    const nextEntryInMinutes = isLate ? 210 : 150\n\n    entries.unshift({\n      id: 'future',\n      time: Math.round(addMinutes(theMostRecentDate, nextEntryInMinutes) / 1000),\n      extra_food: 0,\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n\n  return (\n    <Layout>\n      { (error || creationError) && <ShowError message={error || creationError} /> }\n\n      <Container className={classes.listWrapper} maxWidth=\"sm\">\n        <Fab variant='extended' color='primary' aria-label=\"delete\" className={classes.fab} onClick={onAddEntry} disabled={creationLoading}>\n          <AddIcon />\n          New feeding\n        </Fab>\n\n        { !loading && data && data.entries.length > 0 &&\n          <TimeSinceLastFeeding lastFeedingTime={entries[1].time * 1000} nextFeedingTime={entries[0].time * 1000}/>\n        }\n\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary='Click the button to start measuring intervals' />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n        { loading && <CircularProgress /> }\n      </Container>\n    </Layout>\n  )\n}\n\nexport default EntryList;\n","import React from 'react'\n\nimport {\n  CircularProgress,\n  Container,\n  Paper,\n  Fab,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Layout from './Layout'\nimport { SpacePage } from '../routing'\n\nimport { GET_SPACES, CREATE_SPACE } from '../queries'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  }\n}))\n\nfunction SpaceSelector() {\n  const classes = useStyles()\n\n  const { loading, data, error } = useQuery(GET_SPACES)\n\n  const [createSpace, {loading: creationLoading, error: creationError}] = useMutation(CREATE_SPACE, {\n    variables: {name: 'New space'},\n    refetchQueries: ['getSpaces']\n  })\n\n  return (<Layout>\n    <Container maxWidth=\"sm\">\n      <Fab variant='extended' color='primary' aria-label=\"New space\" className={classes.fab} onClick={createSpace} disabled={creationLoading}>\n        <AddIcon/>\n        New space\n      </Fab>\n\n      { loading && <CircularProgress/>}\n      { !loading &&\n        <Paper>\n          <List disablePadding={true}>\n            <CSSTransitionGroup\n              transitionName=\"example\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}>\n              { data.spaces.map(space => (\n                <ListItem key={space.id} divider button component={RouterLink} to={SpacePage.path({id: space.id})}>\n                  <ListItemText>{space.display_name}</ListItemText>\n                </ListItem>\n              ))}\n            </CSSTransitionGroup>\n          </List>\n        </Paper>\n      }\n    </Container>\n  </Layout>)\n}\n\nexport default SpaceSelector\n","import React, { useState, useEffect } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { CircularProgress } from '@material-ui/core'\n\nimport Layout from './Layout'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    minHeight: 40\n  },\n  loader: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: -3,\n    bottom: -5,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n})\n\nconst SignInForm = ({ onLogin }) => {\n  const classes = useStyles()\n\n  const responseGoogle = (response) => {\n    onLogin(response)\n  }\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setLoading(false)\n    }, 1500)\n\n    return () => clearTimeout(timeout)\n  })\n\n  return  <Layout>\n    <div className={classes.root}>\n      { loading && <div className={classes.loader}><CircularProgress /></div> }\n      <GoogleLogin\n        clientId='299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com'\n        buttonText='Login'\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        isSignedIn={true}\n        cookiePolicy='single_host_origin'\n      />\n    </div>\n  </Layout>\n}\n\nexport default SignInForm\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect, Link as RouterLink } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Fab,\n  Paper,\n  CircularProgress,\n  Typography,\n  Grid,\n  Slider,\n  IconButton\n} from '@material-ui/core'\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Layout from './Layout'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { formatTime, formatDay } from '../time'\nimport { debounce } from '../utils'\n\nimport { SpacePage } from '../routing'\n\nimport {\n  GET_ENTRIES,\n  GET_ENTRY,\n  UPDATE_ENTRY_TIME,\n  REMOVE_ENTRY\n} from '../queries'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n  }),\n)\n\nconst updateGetEntriesCache = (store, spaceId, fn) => {\n  let listData = null\n\n  try {\n    listData = store.readQuery({query: GET_ENTRIES, variables: {spaceId}})\n  } catch (e) {\n    // Reading error, do nothing\n  }\n\n  if (!listData) {\n    return\n  }\n\n  store.writeQuery({\n    query: GET_ENTRIES, variables: {spaceId}, data: {\n      entries: fn(listData.entries)\n\n    }\n  })\n}\n\nfunction EntryPage({match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const spaceId = data && data.entry.spaceId\n\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      updateGetEntriesCache(store, spaceId, (entries) => {\n        return entries.filter(entry => {\n          return entry.id !== removeEntry.removedId\n        })\n      })\n    },\n  })\n\n  const [date, setDate] = useState(null)\n  const [extraFood, setExtraFood] = useState(null)\n  const [isBottleOnly, setIsBottleOnly] = useState(null)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY_TIME,\n      variables: {\n        id,\n        ...variables\n      },\n      update: (store) => {\n        updateGetEntriesCache(store, spaceId, (entries) => {\n          return entries.sort((e1, e2) => e2.time - e1.time)\n        })\n      }\n    })\n  }), [client, id])\n\n  if (date === null && !loading) {\n    setDate(new Date(data.entry.time * 1000))\n  }\n\n  if (extraFood === null && !loading) {\n    setExtraFood(data.entry.extra_food)\n  }\n\n  if (isBottleOnly === null && !loading) {\n    setIsBottleOnly(data.entry.type === 'bottle')\n  }\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const getFeedingType = (extraFoodInput, isBottleOnlyInput) => {\n    if (extraFoodInput === 0) {\n      return 'breast'\n    }\n\n    return isBottleOnlyInput\n      ? 'bottle'\n      : 'mixed'\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    setIsBottleOnly(true)\n\n    updateEntry({\n      extra_food: value,\n      type: getFeedingType(value, true)\n    })\n  }\n\n  const updateFeedingType = event => {\n    const { checked } = event.target\n    setIsBottleOnly(checked)\n\n    const entryType = getFeedingType(extraFood, checked)\n\n    updateEntry({\n      type: entryType\n    })\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to={SpacePage.path({id: spaceId})}/>\n  }\n\n  const backButton = spaceId && (\n    <IconButton\n    edge='start'\n    color='inherit'\n    component={props => <RouterLink {...props} to={SpacePage.path({id: spaceId})}/>}>\n      <ArrowBackIcon/>\n    </IconButton>\n  )\n\n  return (\n    <Layout toolbarIcon={backButton}>\n      <header className=\"App-header\">\n        { !loading &&\n          <Typography variant='h5'>\n            {formatTime(date)} {formatDay(date)}\n          </Typography>\n        }\n      </header>\n\n      <Container maxWidth=\"sm\">\n        {\n          loading\n            ? <CircularProgress/>\n            : <Grid container spacing={2} direction='row' justify='center'>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Day\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addDays(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subDays(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Hours\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addHours(date, 1))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subHours(date, 1))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Minutes\n                  </Typography>\n\n                  <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addMinutes(date, 5))}>\n                    <AddIcon />\n                  </Fab>\n\n                  <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subMinutes(date, 5))}>\n                    <RemoveIcon />\n                  </Fab>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Extra food - {extraFood}ml\n                  </Typography>\n\n                  <Slider\n                    defaultValue={extraFood}\n                    aria-labelledby='discrete-slider'\n                    valueLabelDisplay='off'\n                    step={5}\n                    min={0}\n                    max={150}\n                    onChange={(e, value) => updateExtraFood(value)}\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={isBottleOnly}\n                        onChange={updateFeedingType}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Bottle only\"\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={12}>\n                <Paper className={classes.root}>\n                  <Typography paragraph>\n                    Danger zone\n                  </Typography>\n\n                  <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n                </Paper>\n              </Grid>\n            </Grid>\n        }\n\n      </Container>\n    </Layout>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import {ApolloLink, Observable} from 'apollo-link'\n\nexport class AuthLink extends ApolloLink {\n  constructor(user,token) {\n    super()\n    this.token = token\n    this.user = user\n  }\n\n  setTokenHeader(operation) {\n    operation.setContext({ headers: { authorization: `Bearer ${this.token}` } })\n  }\n\n  refreshToken() {\n    return new Promise(resolve => {\n      this.user.reloadAuthResponse()\n        .then(res => {\n          this.token = res.id_token\n          resolve(true)\n        })\n    })\n  }\n\n  request(operation, forward) {\n    this.setTokenHeader(operation)\n\n    return new Observable(observer => {\n      let subscription, innerSubscription;\n      try {\n        subscription = forward(operation).subscribe({\n          next: observer.next.bind(observer),\n          complete: observer.complete.bind(observer),\n          error: networkError => {\n            if (networkError.statusCode === 400) {\n              this.refreshToken().then(success => {\n                if (success) {\n                  this.setTokenHeader(operation)\n                  innerSubscription = forward(operation).subscribe(observer)\n                } else {\n                  observer.error(new Error('refreshing token failed'))\n                }\n              });\n            } else {\n              observer.error(networkError)\n            }\n          },\n        });\n      } catch (e) {\n        observer.error(e)\n      }\n\n      return () => {\n        if (subscription) subscription.unsubscribe()\n        if (innerSubscription) innerSubscription.unsubscribe()\n      }\n    })\n  }\n}\n","import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { AuthLink } from './AuthLink'\n\nexport default function getClient(user) {\n  const httpLink = createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n\n  const authLink = new AuthLink(user, user.tokenId)\n\n  return new ApolloClient({\n    cache: new InMemoryCache({\n      cacheRedirects: {\n        Query: {\n          entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n        },\n      },\n    }),\n    link: authLink.concat(httpLink)\n  })\n}\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n\nimport EntryList from './components/List'\nimport SpaceSelector from './components/SpaceSelector'\nimport SignInForm from './components/SignInForm'\nimport EntryPage from './components/EntryPage'\nimport NotFound from './components/NotFound'\nimport ProfileContext from './ProfileContext'\nimport getClient from './client'\nimport './App.css'\nimport {HomePage, SelectPage, EditPage, SpacePage} from './routing'\n\nconst RememberSpace = ({match, write, children}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    write(id)\n  }, [write, id])\n\n  return children\n}\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const { read, write } = storage\n\n  const lastSpaceId = read(storageKey)\n\n  const [user, setUser] = useState(null)\n\n  return (\n    <ProfileContext.Provider value={user && user.profileObj}>\n      <div className='App'>\n        <HashRouter>\n          <Switch>\n            {\n              user ?\n                <ApolloProvider client={getClient(user)}>\n                  <Switch>\n\n                    <Route exact path={SelectPage.pattern} render={props => <SpaceSelector {...props} />} />\n                    <Route path={SpacePage.pattern} render={\n                      props =>\n                        <RememberSpace write={id => write(storageKey, id)} match={props.match}>\n                          <EntryList {...props} profile={user.profileObj} />\n                        </RememberSpace>}\n                    />\n                    <Route path={EditPage.pattern} render={props => <EntryPage {...props} />} />\n\n                    <Route exact path={HomePage.pattern}>\n                      { lastSpaceId\n                        ? <Redirect to={SpacePage.path({id: lastSpaceId})}/>\n                        : <Redirect to={SelectPage.path()}/>\n                      }\n                    </Route>\n\n                  </Switch>\n              </ApolloProvider> :\n              <Route path={HomePage.pattern} render={props => <SignInForm {...props} onLogin={user => {\n                setUser(user)\n              }}/>} />\n            }\n            <Route component={NotFound} />\n          </Switch>\n        </HashRouter>\n      </div>\n    </ProfileContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(<App storage={{read, write}}/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}