{"version":3,"sources":["useEventListener.js","components/ShowError.js","time.js","useInterval.js","components/SuggestedListItem.js","components/IconGroup.js","queries/getEntries.js","queries/getEntry.js","queries/createEntry.js","queries/updateEntry.js","queries/removeEntry.js","queries/getSpaces.js","queries/createSpace.js","components/VitaminChip.js","components/GrouppedList.js","components/TimeSinceLastFeeding.js","ProfileContext.js","routing.js","components/Layout.js","components/FeedingSourceSelector.js","components/FeedingSourceBar.js","components/List.js","components/SpaceSelector.js","components/SignInForm.js","utils.js","components/EntryForm.js","components/EntryPage.js","components/NotFound.js","components/ScrollToTop.js","AuthLink.js","client.js","App.js","serviceWorker.js","index.js"],"names":["global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","useEventListener","eventName","handler","element","arguments","length","undefined","savedCallback","React","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useStyles","makeStyles","theme","error","backgroundColor","palette","dark","ShowError","_ref","message","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","classes","handleClose","reason","networkError","result","errors","slice","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","className","toString","formatTime","timestamp","format","Date","formatElapsedTime","from","to","hours","differenceInHours","minutes","differenceInMinutes","concat","useInterval","callback","delay","id","setInterval","clearInterval","SuggestedListItem","time","key","count","setCount","now","date","ListItem","ListItemText","primary","secondary","useIconStyles","icon_wrapper","display","flexDirection","fontSize","marginRight","textAlign","bottle_icon","color","icon_container","small_icon","IconGroup","icons","type","extra_food","feeding_duration","feedingDurationText","Fragment","ChildCare_default","Opacity_default","join","ListItemIcon","GET_ENTRIES","gql","_templateObject","GET_ENTRY","getEntry_templateObject","CREATE_ENTRY","createEntry_templateObject","UPDATE_ENTRY","updateEntry_templateObject","REMOVE_ENTRY","removeEntry_templateObject","GET_SPACES","getSpaces_templateObject","CREATE_SPACE","createSpace_templateObject","green_chip","green","red_chip","red","blue_chip","blue","VitaminChip","group","realEntries","filter","_ref2","isSuggested","vitaminEntries","_ref3","vitamin","vitaminTime","firstRealEntry","_useMutation","useMutation","_useMutation2","updateEntry","_useMutation2$","loading","Chip","size","label","icon","Refresh_default","Done_default","Close_default","deleteIcon","CheckBoxOutlineBlank_default","onDelete","variables","item","opacity","root","background","paper","subheader","common","black","subheader_total","float","subheader_vitamin","marginLeft","narrow_column","flex","source_column","vitamin_column","breastFeedingSourceMap","left","right","both","none","GrouppedList","groupedEntries","List","disablePadding","entries","map","_ref4","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ListSubheader","parseInt","components_VitaminChip","getTotalEntries","_ref5","meantime","source","components_SuggestedListItem","components_IconGroup","ListItemSecondaryAction","IconButton","edge","aria-label","component","Link","Edit_default","info","main","messageBox","marginBottom","position","top","zIndex","alignItems","spacing","SnackbarContentWrapper","props","variant","children","aria-describedby","Info_default","Warning_default","TimeSinceLastFeeding","lastFeedingTime","nextFeedingTime","infoText","Typography","TimeSinceLastFeeding_SnackbarContentWrapper","class","ProfileContext","createContext","getRoute","pattern","path","_len","params","Array","_key","generatePath","apply","HomePage","SelectPage","SpacePage","EditPage","appBar","avatar","margin","width","height","toolbar","paddingLeft","Layout","toolbarIcon","profile","useContext","_React$useState","_React$useState2","anchorEl","setAnchorEl","AppBar","Toolbar","disableGutters","Avatar","alt","src","imageUrl","aria-controls","aria-haspopup","onClick","currentTarget","Menu","getContentAnchorEl","keepMounted","Boolean","MenuItem","RouterLink","Box","my","FeedingSourceSelector","breastFeedingSource","onChange","paragraph","ToggleButtonGroup","value","exclusive","ToggleButton","text","hint","justifyContent","components_FeedingSourceSelector","FeedingSourceBar","FeedingSourceBar_SnackbarContentWrapper","fab","bottom","listWrapper","marginTop","EntryList","match","showNextEstimatedFeeding","spaceId","_useQuery","useQuery","data","refetch","hasData","useCallback","document","hidden","refetchQueries","createEntry","creationLoading","creationError","reverse","reduce","acc","entry","last","toConsumableArray","objectSpread","lastFeedingDate","theMostRecent","getLastFeedingDate","nextFeedingDate","theMostRecentDate","getHours","nextEntryInMinutes","addMinutes","getNextEntryDate","unshift","Math","round","getTime","day","startOfDay","push","components_Layout","components_ShowError","Container","maxWidth","Fab","disabled","Add_default","components_TimeSinceLastFeeding","components_FeedingSourceBar","Paper","components_GrouppedList","CircularProgress","SpaceSelector","name","createSpace","spaces","space","divider","button","display_name","minHeight","loader","SignInForm","onLogin","responseGoogle","response","setLoading","timeout","setTimeout","clearTimeout","google_login","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","debounce","fn","nextTask","pending","args","execute","then","toCall","createStyles","padding","updateGetEntriesCache","store","listData","readQuery","query","e","writeQuery","EntryForm","update","removeEntry","removedId","mutationData","setDate","_useState3","_useState4","extraFood","setExtraFood","_useState5","_useState6","isBottleOnly","setIsBottleOnly","_useState7","_useState8","setBreastFeedingSource","_useState9","_useState10","setVitamin","_useState11","_useState12","feedingDuration","setFeedingDuration","client","useApolloClient","mutate","mutation","sort","e1","e2","updateDate","getFeedingType","extraFoodInput","isBottleOnlyInput","react_router","feedingSourceComponent","Grid","xs","md","feedingDurationComponent","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","updateFeedingDuration","container","direction","justify","addDays","subDays","Remove_default","addHours","subHours","subMinutes","updateExtraFood","FormControlLabel","control","Checkbox","checked","target","entryType","newVitamin","Button","EntryPage","backButton","forwardRef","ref","react_router_dom","assign","ArrowBack_default","components_EntryForm","NotFound","withRouter","pathname","location","window","scrollTo","AuthLink","_ApolloLink","user","token","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","operation","setContext","headers","authorization","_this2","Promise","resolve","reloadAuthResponse","res","id_token","forward","_this3","setTokenHeader","Observable","observer","subscription","innerSubscription","subscribe","next","bind","complete","statusCode","refreshToken","success","Error","unsubscribe","ApolloLink","getClient","httpLink","createHttpLink","uri","process","authLink","tokenId","ApolloClient","cache","InMemoryCache","cacheRedirects","Query","_","getCacheKey","__typename","link","RememberSpace","write","App","storage","read","lastSpaceId","setUser","src_ProfileContext","Provider","profileObj","components_ScrollToTop","ApolloContext","exact","render","components_SpaceSelector","App_RememberSpace","components_List","components_EntryPage","components_SignInForm","hostname","ReactDOM","src_App","JSON","parse","localStorage","getItem","setItem","stringify","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7b05573.chunk.js","sourcesContent":["import React from 'react';\n\nfunction useEventListener(eventName, handler, element = global) {\n  const savedCallback = React.useRef();\n\n  React.useEffect(() => {\n    savedCallback.current = handler;\n  }, [handler]);\n\n  React.useEffect(() => {\n    // Make sure element supports addEventListener\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) {\n      return;\n    }\n\n    const eventListener = event => savedCallback.current(event);\n\n    element.addEventListener(eventName, eventListener);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n\nexport default useEventListener;\n","import React, { useState } from 'react'\nimport { Snackbar as MuiSnackbar, SnackbarContent as MuiSnackbarContent } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\n\nconst ShowError = ({message}) => {\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n\n  if (!message) {\n    return null\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false)\n  }\n\n if (message.networkError\n   && message.networkError.result\n   && message.networkError.result.errors\n   && message.networkError.result.errors.length > 0) {\n    message = message.networkError.result.errors[0].message.slice(0, 100)\n }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      open={open}\n    >\n      <MuiSnackbarContent className={classes.error} message={message.toString()} onClose={handleClose} />\n    </MuiSnackbar>\n  )\n}\n\nexport default ShowError\n","import format from 'date-fns/format'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport function formatTime (timestamp) {\n  return format(new Date(timestamp), 'HH:mm')\n}\n\nexport function formatDay(timestamp) {\n  return format(new Date(timestamp), 'd MMM, yyyy')\n}\n\nexport function formatElapsedTime(from, to) {\n  const hours = differenceInHours(from, to)\n  let minutes = differenceInMinutes(from, to) % 60\n\n  if (hours < 1) {\n    return `${minutes}min`\n  }\n\n  return `${hours}h ${minutes}min`\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useState } from 'react'\nimport { ListItem, ListItemText } from '@material-ui/core'\n\nimport {formatElapsedTime, formatTime} from '../time'\nimport {useInterval} from '../useInterval'\n\nconst SuggestedListItem = ({time, key, className}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 15 * 1000)\n\n  const now = Date.now()\n  const date = new Date(time * 1000)\n\n  return <ListItem key={key} className={className}>\n    <ListItemText primary={`Next at ${formatTime(date)}`} secondary={date > now && formatElapsedTime(date, now)} />\n  </ListItem>\n}\n\nexport default SuggestedListItem\n","import React from 'react'\nimport { ListItemIcon } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport BottleFeedingIcon from '@material-ui/icons/Opacity'\nimport BreastFeedingIcon from '@material-ui/icons/ChildCare'\n\nconst useIconStyles = makeStyles({\n  icon_wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 12,\n    marginRight: 5,\n    textAlign: 'center'\n  },\n  bottle_icon: {\n    color: '#24a0ff'\n  },\n  icon_container: {\n    display: 'flex'\n  },\n  small_icon: {\n    fontSize: '1rem'\n  }\n})\n\nconst IconGroup = ({ type, extra_food, feeding_duration }) => {\n  const classes = useIconStyles()\n\n  const feedingDurationText = feeding_duration\n    ? <span>{feeding_duration}'</span>\n    : null\n\n  let icons;\n  switch (type) {\n    case 'breast':\n      icons = (\n        <>\n          <BreastFeedingIcon/>\n          {feedingDurationText}\n        </>\n      )\n      break;\n    case 'bottle':\n      icons = (\n        <>\n          <BottleFeedingIcon className={classes.bottle_icon}/> {extra_food}ml\n        </>\n      )\n      break;\n    case 'mixed':\n      icons = (\n        <>\n          <div className={classes.icon_container}>\n            <BreastFeedingIcon className={classes.small_icon}/>\n            <BottleFeedingIcon className={[classes.bottle_icon, classes.small_icon].join(' ')}/>\n          </div>\n          <span>{extra_food}ml</span>\n          {feedingDurationText}\n        </>\n      )\n      break;\n  }\n\n  return (\n    <ListItemIcon>\n      <div className={classes.icon_wrapper}>\n        {icons}\n      </div>\n    </ListItemIcon>\n  )\n}\n\nexport default IconGroup\n","import gql from \"graphql-tag\";\n\nexport const GET_ENTRIES = gql`\n  query getEntries($spaceId: String!) {\n    entries(spaceId: $spaceId) {\n      id\n      time\n      extra_food\n      spaceId\n      type  \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const GET_ENTRY = gql`\n  query getEntry($id: String!) {\n    entry(id: $id) {\n      id\n      time\n      extra_food\n      spaceId\n      type \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const CREATE_ENTRY = gql`\n  mutation CreateEntry($spaceId: String!, $time: Int!) {\n    createEntry(spaceId: $spaceId, time: $time) {\n      id\n      time\n      extra_food\n      type  \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const UPDATE_ENTRY = gql`\n  mutation UpdateEntry($id: String!, $time: Int, $extra_food: Int, $type: String, $vitamin: Boolean, $source: String, $feeding_duration: Int) {\n    updateEntry(id: $id, time: $time, extra_food: $extra_food, type: $type, vitamin: $vitamin, source: $source, feeding_duration: $feeding_duration) {\n      id\n      time\n      extra_food\n      type  \n      vitamin\n      source\n      feeding_duration\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const REMOVE_ENTRY = gql`\n  mutation RemoveEntry($id: String!) {\n    removeEntry(id: $id) {\n      message\n      removedId\n    }\n  }\n`\n","import gql from \"graphql-tag\";\n\nexport const GET_SPACES = gql`\n  query getSpaces {\n    spaces {\n      id\n      display_name\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const CREATE_SPACE = gql`\n  mutation CreateSpace($name: String!) {\n    createSpace(name: $name) {\n      id\n      display_name\n    }\n  }\n`\n","import React from 'react'\nimport format from 'date-fns/format'\nimport {UPDATE_ENTRY} from '../queries'\nimport {useMutation} from 'react-apollo-hooks'\nimport Chip from '@material-ui/core/Chip'\nimport DoneIcon from '@material-ui/icons/Done'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport CloseIcon from '@material-ui/icons/Close'\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { green, red, blue } from \"@material-ui/core/colors/index\";\n\nconst useStyles = makeStyles({\n  green_chip: {\n    backgroundColor: green[100]\n  },\n  red_chip: {\n    backgroundColor: red[100]\n  },\n  blue_chip: {\n    backgroundColor: blue[100]\n  }\n})\n\nconst VitaminChip = ({group}) => {\n  const classes = useStyles()\n\n  const realEntries = group.filter(({isSuggested}) => !isSuggested)\n  const vitaminEntries = realEntries.filter(({vitamin}) => vitamin)\n  const vitaminTime = vitaminEntries.length > 0 ? vitaminEntries[0].time * 1000 : null\n  const firstRealEntry = realEntries[0]\n\n  const [updateEntry, {loading, error}] = useMutation(UPDATE_ENTRY)\n\n  const updateVitamin = (entry) => {\n    updateEntry({\n      variables: {\n        id: entry.id,\n        vitamin: true\n      }\n    })\n  }\n\n  if (loading) {\n    return <Chip\n      size='small'\n      label='Vit D3'\n      icon={<RefreshIcon/>}\n      className={classes.blue_chip}\n    />\n  }\n\n  return <Chip\n    size='small'\n    label={`Vit D3 ${vitaminTime ? '(' + format(vitaminTime, 'HH:mm') + ')' : ''}`}\n    icon={vitaminTime ? <DoneIcon /> : <CloseIcon/>}\n    deleteIcon={<CheckBoxOutlineBlankIcon />}\n    onDelete={!vitaminTime && firstRealEntry ? () => updateVitamin(firstRealEntry) : null}\n    className={vitaminTime ? classes.green_chip : classes.red_chip}\n  />\n}\n\nexport default VitaminChip\n","import React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { IconButton } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\n\nimport format from 'date-fns/format'\nimport {Link} from 'react-router-dom'\nimport { formatTime } from '../time'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport SuggestedListItem from './SuggestedListItem'\nimport IconGroup from './IconGroup'\nimport VitaminChip from './VitaminChip'\n\nconst A_DAY = 24 * 60 * 60 * 1000\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    opacity: 0.3\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  subheader: {\n    backgroundColor: '#f0f2fa',\n    color: theme.palette.common.black,\n    textAlign: 'left'\n  },\n  subheader_total: {\n    float: 'right'\n  },\n  subheader_vitamin: {\n    marginLeft: 35\n  },\n  narrow_column: {\n    flex: 'initial',\n    marginRight: 35\n  },\n  source_column: {\n    color: '#644889',\n  },\n  vitamin_column: {\n    color: '#b17714',\n  }\n}))\n\nconst breastFeedingSourceMap = {\n  left: 'L',\n  right: 'R',\n  both: 'LR',\n  none: ''\n}\n\nconst GrouppedList = ({groupedEntries}) => {\n  const now = Date.now()\n\n  const getTotalEntries = (group) => {\n    return group.filter(({isSuggested}) => !isSuggested).length\n  }\n\n  const classes = useStyles()\n\n  return (\n    <List disablePadding className={classes.root}>\n      {\n        Object.entries(groupedEntries).map(([timestamp, group]) => {\n          return(\n            <CSSTransitionGroup\n              key={timestamp}\n              transitionName=\"example\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}>\n              <ListSubheader className={classes.subheader}>\n                {format(parseInt(timestamp, 10), 'd MMM, yyyy')}\n                <span className={classes.subheader_vitamin}>\n                  <VitaminChip group={group}/>\n                </span>\n\n                <span className={classes.subheader_total}>(total {getTotalEntries(group)})</span>\n              </ListSubheader>\n\n              {group.map(({id, time, extra_food, type, vitamin, meantime, source, feeding_duration, isSuggested}) => {\n                  return isSuggested\n                    ? <SuggestedListItem key={id} time={time} className={classes.item}/>\n                    : <ListItem key={id}>\n                      <IconGroup type={type} extra_food={extra_food} feeding_duration={feeding_duration}/>\n\n                      <ListItemText secondary={meantime} className={classes.narrow_column}>\n                        {formatTime(time * 1000)}\n                      </ListItemText>\n                      <ListItemText className={[classes.source_column, classes.narrow_column].join(' ')}>\n                        {type !== 'bottle' ? breastFeedingSourceMap[source] : null}\n                      </ListItemText>\n                      <ListItemText className={[classes.vitamin_column, classes.narrow_column].join(' ')}>\n                        {vitamin ? 'Vit D3' : ''}\n                      </ListItemText>\n                      <ListItemSecondaryAction>\n                        {\n                          (now - time * 1000 < A_DAY) &&\n                          <IconButton edge='end' aria-label='Comments' component={Link} to={`/edit/${id}`}>\n                            <Edit/>\n                          </IconButton>\n                        }\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                }\n              )}\n            </CSSTransitionGroup>\n          )})\n      }\n    </List>\n  )\n}\n\nexport default GrouppedList\n","import React, { useState } from 'react'\nimport InfoIcon from '@material-ui/icons/Info'\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles'\nimport {SnackbarContent, Typography} from '@material-ui/core'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nimport {formatElapsedTime} from '../time'\nimport {useInterval} from '../useInterval';\n\nconst useStyles = makeStyles(theme => ({\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  messageBox: {\n    marginBottom: 20,\n    position: 'sticky',\n    top: 70,\n    zIndex:10\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  }\n}));\n\nconst SnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n  const { variant, children } = props;\n\n  return (\n    <SnackbarContent\n      className={[classes[variant], classes.messageBox].join(' ')}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {\n            variant === 'info'\n            ? <InfoIcon className={classes.icon}/>\n            : <WarningIcon className={classes.icon}/>\n          }\n          {children}\n        </span>\n      }\n    />\n  );\n}\n\nconst TimeSinceLastFeeding = ({lastFeedingTime, nextFeedingTime}) => {\n  let [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1)\n  }, 30 * 1000)\n\n  const infoText = differenceInMinutes(new Date(), new Date(lastFeedingTime)) > 5\n  ? <>It's been&nbsp;<Typography variant=\"subtitle1\" component=\"span\">{formatElapsedTime(new Date(), new Date(lastFeedingTime))}</Typography>&nbsp;since last feeding </>\n  : <>Feeding in progress</>\n\n  return <SnackbarContentWrapper\n    class='mui-fixed'\n    variant={Date.now() > nextFeedingTime ? 'error' : 'info'}>\n    {infoText}\n  </SnackbarContentWrapper>\n}\n\nexport default TimeSinceLastFeeding\n","import React from 'react'\n\nconst ProfileContext = React.createContext(null)\n\nexport default ProfileContext\n","import { generatePath } from 'react-router'\n\nconst getRoute= (pattern) => {\n  return {\n    pattern,\n    path: (...params) => generatePath(pattern, ...params)\n  }\n}\n\nexport const HomePage = getRoute('/')\nexport const SelectPage = getRoute('/select')\nexport const SpacePage = getRoute('/space/:id')\nexport const EditPage =  getRoute('/edit/:id')\n\n\n","import React, { useContext } from 'react'\n\nimport {\n  AppBar,\n  Avatar,\n  Toolbar,\n  Typography,\n  Box,\n  Menu,\n  MenuItem\n} from '@material-ui/core'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport {makeStyles} from '@material-ui/core/styles'\nimport ProfileContext from '../ProfileContext'\n\nimport { SelectPage } from '../routing'\n\nconst useStyles = makeStyles({\n  appBar: {\n    backgroundColor: '#3e4451',\n  },\n  avatar: {\n    margin: 15,\n    width: 40,\n    height: 40,\n    marginLeft: 'auto'\n  },\n  toolbar: {\n    height: 70,\n    paddingLeft: 15\n  },\n})\n\nconst Layout = ({toolbarIcon, children}) => {\n  const classes = useStyles()\n  const profile = useContext(ProfileContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return <>\n    <AppBar className={classes.appBar}>\n      <Toolbar disableGutters={true} className={classes.toolbar}>\n        {toolbarIcon}\n\n        <Typography variant='h5'>\n          Food time\n        </Typography>\n\n        {profile &&\n          <>\n            <Avatar alt=\"Profile picture\"\n                    src={profile.imageUrl}\n                    aria-controls='user-menu'\n                    aria-haspopup='true'\n                    className={classes.avatar}\n                    onClick={handleClick}/>\n            <Menu\n              id='user-menu'\n              anchorEl={anchorEl}\n              anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n              getContentAnchorEl={null}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem component={RouterLink} to={SelectPage.path()} onClick={handleClose}>Spaces</MenuItem>\n            </Menu>\n          </>\n        }\n      </Toolbar>\n    </AppBar>\n\n    <Toolbar className={classes.toolbar}/>\n\n    <Box my={2}>\n    {children}\n    </Box>\n  </>\n}\n\nexport default Layout\n","import React from 'react'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport {Typography} from '@material-ui/core'\n\nimport {UPDATE_ENTRY} from '../queries'\nimport {useMutation} from 'react-apollo-hooks'\n\nconst FeedingSourceSelector = ({ id, breastFeedingSource, onChange }) => {\n  const [updateEntry] = useMutation(UPDATE_ENTRY)\n\n  const updateBreastFeedingSource = (event, source) => {\n    updateEntry({\n      variables: {\n        id,\n        source\n      }\n    })\n\n    if (onChange) {\n      onChange(source)\n    }\n  }\n\n  return (\n    <>\n      <Typography paragraph>\n        Breast feeding source\n      </Typography>\n      <ToggleButtonGroup value={breastFeedingSource} exclusive onChange={updateBreastFeedingSource}>\n        <ToggleButton value=\"left\">Left</ToggleButton>\n        <ToggleButton value=\"right\">Right</ToggleButton>\n        <ToggleButton value=\"both\">Both</ToggleButton>\n        <ToggleButton value=\"none\">None</ToggleButton>\n      </ToggleButtonGroup>\n    </>\n  )\n}\n\nexport default FeedingSourceSelector","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {SnackbarContent} from '@material-ui/core'\nimport FeedingSourceSelector from './FeedingSourceSelector'\n\nconst useStyles = makeStyles(theme => ({\n  messageBox: {\n    marginBottom: 20,\n    top: 90,\n    zIndex:10,\n    backgroundColor: theme.palette.text.hint,\n    justifyContent: 'center'\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst SnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n\n  return (\n    <SnackbarContent\n      className={[classes.messageBox].join(' ')}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <FeedingSourceSelector {...props} />\n      }\n    />\n  );\n}\n\nconst FeedingSourceBar = (props) => {\n  return (\n    <SnackbarContentWrapper {...props} />\n  )\n}\n\nexport default FeedingSourceBar","import React, { useState } from 'react'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\n\nimport AddIcon from '@material-ui/icons/Add'\n\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Fab\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport ShowError from './ShowError'\nimport GrouppedList from './GrouppedList'\nimport TimeSinceLastFeeding from './TimeSinceLastFeeding'\nimport Layout from './Layout'\nimport FeedingSourceBar from './FeedingSourceBar'\n\nimport startOfDay from 'date-fns/startOfDay'\nimport addMinutes from 'date-fns/addMinutes'\n\nimport { formatElapsedTime } from '../time'\n\nimport { GET_ENTRIES, CREATE_ENTRY } from '../queries'\nimport useEventListener from '../useEventListener'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  },\n  listWrapper: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nfunction getLastFeedingDate(entries) {\n  if (!entries || entries.length < 1) return null\n\n  const theMostRecent = entries[0]\n  return new Date(theMostRecent.time * 1000)\n}\n\nfunction getNextEntryDate(theMostRecentDate) {\n  if (!theMostRecentDate) return null\n\n  const hours = theMostRecentDate.getHours()\n  const isLate = (hours >= 21 || hours < 3)\n  const nextEntryInMinutes = isLate ? 210 : 150\n\n  return addMinutes(theMostRecentDate, nextEntryInMinutes)\n}\n\nfunction EntryList({match, showNextEstimatedFeeding}) {\n  const classes = useStyles()\n\n  const spaceId = match.params.id\n\n  const { loading, data, error, refetch } = useQuery(GET_ENTRIES, {variables: {spaceId}})\n  const hasData = !loading && !error\n\n  const onChange = React.useCallback(() => {\n    if (document.hidden === false) {\n      refetch()\n    }\n  }, [refetch])\n\n  useEventListener('visibilitychange', onChange, document)\n\n  const [createEntry, {loading: creationLoading, error: creationError}] = useMutation(CREATE_ENTRY, {\n    refetchQueries: ['getEntries']\n  })\n\n  const entries = hasData && data.entries.slice().reverse().reduce((acc, entry) => {\n    if (acc.length > 0) {\n      const last = acc[acc.length - 1]\n\n      return [...acc, {\n        ...entry,\n        meantime: formatElapsedTime(new Date(entry.time * 1000), new Date(last.time * 1000))\n      }]\n    } else {\n      return [{...entry, meantime: null}]\n    }\n  }, []).reverse()\n\n\n  const lastFeedingDate = getLastFeedingDate(entries)\n  const nextFeedingDate = getNextEntryDate(lastFeedingDate)\n\n  if (showNextEstimatedFeeding && nextFeedingDate) {\n    entries.unshift({\n      id: 'future',\n      time: Math.round(nextFeedingDate.getTime() / 1000),\n      extra_food: 0,\n      meantime: null,\n      isSuggested: true\n    })\n  }\n\n  const groupedEntries = entries && entries.reduce((acc, entry) => {\n    const day = startOfDay(new Date(entry.time * 1000)).getTime()\n    acc[day] = acc[day] || []\n    acc[day].push(entry)\n    return acc\n  }, {})\n\n  const onAddEntry = () => {\n\n    return createEntry({ variables: { time: Math.round(Date.now() / 1000), spaceId}})\n  }\n\n  return (\n    <Layout>\n      { (error || creationError) && <ShowError message={error || creationError} /> }\n\n      <Container className={classes.listWrapper} maxWidth=\"sm\">\n        <Fab variant='extended' color='primary' aria-label=\"delete\" className={classes.fab} onClick={onAddEntry} disabled={creationLoading}>\n          <AddIcon />\n          New feeding\n        </Fab>\n\n        { !loading && data && lastFeedingDate > 0 &&\n          <TimeSinceLastFeeding lastFeedingTime={lastFeedingDate.getTime()} nextFeedingTime={nextFeedingDate.getTime()}/>\n        }\n        \n        { !loading && data && data.entries.length > 0 && data.entries[0].source === null && data.entries[0].type !== 'bottle' &&\n          <FeedingSourceBar\n            id={data.entries[0].id}\n          />\n        }\n        {!loading && !error &&\n        <Paper>\n          { !loading && data && data.entries.length > 0 &&\n            <GrouppedList groupedEntries={groupedEntries}/>\n          }\n\n          { !loading && data && data.entries.length === 0 &&\n          <List>\n            <ListItem>\n              <ListItemText primary='Click the button to start measuring intervals' />\n            </ListItem>\n          </List>\n          }\n\n        </Paper>\n        }\n        { loading && <CircularProgress /> }\n      </Container>\n    </Layout>\n  )\n}\n\nexport default EntryList;\n","import React from 'react'\n\nimport {\n  CircularProgress,\n  Container,\n  Paper,\n  Fab,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Layout from './Layout'\nimport { SpacePage } from '../routing'\n\nimport { GET_SPACES, CREATE_SPACE } from '../queries'\nimport { useQuery, useMutation } from 'react-apollo-hooks'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2\n  }\n}))\n\nfunction SpaceSelector() {\n  const classes = useStyles()\n\n  const { loading, data, error } = useQuery(GET_SPACES)\n\n  const [createSpace, {loading: creationLoading, error: creationError}] = useMutation(CREATE_SPACE, {\n    variables: {name: 'New space'},\n    refetchQueries: ['getSpaces']\n  })\n\n  return (<Layout>\n    <Container maxWidth=\"sm\">\n      <Fab variant='extended' color='primary' aria-label=\"New space\" className={classes.fab} onClick={createSpace} disabled={creationLoading}>\n        <AddIcon/>\n        New space\n      </Fab>\n\n      { loading && <CircularProgress/>}\n      { !loading &&\n        <Paper>\n          <List disablePadding={true}>\n            <CSSTransitionGroup\n              transitionName=\"example\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}>\n              { data.spaces.map(space => (\n                <ListItem key={space.id} divider button component={RouterLink} to={SpacePage.path({id: space.id})}>\n                  <ListItemText>{space.display_name}</ListItemText>\n                </ListItem>\n              ))}\n            </CSSTransitionGroup>\n          </List>\n        </Paper>\n      }\n    </Container>\n  </Layout>)\n}\n\nexport default SpaceSelector\n","import React, { useState, useEffect } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { CircularProgress } from '@material-ui/core'\n\nimport Layout from './Layout'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    minHeight: 40\n  },\n  loader: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: -3,\n    bottom: -5,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n})\n\nconst SignInForm = ({ onLogin }) => {\n  const classes = useStyles()\n\n  const responseGoogle = (response) => {\n    onLogin(response)\n  }\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setLoading(false)\n    }, 1500)\n\n    return () => clearTimeout(timeout)\n  })\n\n  return  <Layout>\n    <div className={classes.root}>\n      { loading && <div className={classes.loader}><CircularProgress /></div> }\n      <GoogleLogin\n        clientId='299114443733-g59vv11262camtp97hiv99sjh0qr3b9i.apps.googleusercontent.com'\n        buttonText='Login'\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        isSignedIn={true}\n        cookiePolicy='single_host_origin'\n      />\n    </div>\n  </Layout>\n}\n\nexport default SignInForm\n","\nexport function debounce(fn) {\n  let nextTask = null\n  let pending = false\n\n  function execute(fn) {\n    pending = true\n    fn().then(() => {\n      pending = false\n      if (nextTask != null) {\n        const toCall = nextTask\n        nextTask = null\n        execute(toCall)\n      }\n    })\n  }\n\n  return (...args) => {\n    if (pending) {\n      nextTask = () => fn(...args)\n    } else {\n      execute(() => fn(...args))\n    }\n  }\n}\n","import React, { useState, useCallback } from 'react'\nimport subMinutes from 'date-fns/subMinutes'\nimport addMinutes from 'date-fns/addMinutes'\nimport subHours from 'date-fns/subHours'\nimport addHours from 'date-fns/addHours'\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\n\nimport { Redirect } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Fab,\n  Paper,\n  Typography,\n  Grid,\n  Slider\n} from '@material-ui/core'\n\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nimport { useMutation, useApolloClient } from 'react-apollo-hooks'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { debounce } from '../utils'\n\nimport { SpacePage } from '../routing'\n\nimport {\n  GET_ENTRIES,\n  UPDATE_ENTRY,\n  REMOVE_ENTRY\n} from '../queries'\nimport {formatDay, formatTime} from '../time';\nimport FeedingSourceSelector from './FeedingSourceSelector';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 5),\n    },\n  }),\n)\n\nconst updateGetEntriesCache = (store, spaceId, fn) => {\n  let listData = null\n\n  try {\n    listData = store.readQuery({query: GET_ENTRIES, variables: {spaceId}})\n  } catch (e) {\n    // Reading error, do nothing\n  }\n\n  if (!listData) {\n    return\n  }\n\n  store.writeQuery({\n    query: GET_ENTRIES, variables: {spaceId}, data: {\n      entries: fn(listData.entries)\n\n    }\n  })\n}\n\nfunction EntryForm({match, data}) {\n  const { id } = match.params\n\n  const spaceId = data.entry.spaceId\n\n  const [removeEntry, {data: mutationData}] = useMutation(REMOVE_ENTRY, {\n    variables: {id},\n    update: (store, { data: {removeEntry} }) => {\n      updateGetEntriesCache(store, spaceId, (entries) => {\n        return entries.filter(entry => {\n          return entry.id !== removeEntry.removedId\n        })\n      })\n    },\n  })\n\n  const [date, setDate] = useState(new Date(data.entry.time * 1000))\n  const [extraFood, setExtraFood] = useState(data.entry.extra_food)\n  const [isBottleOnly, setIsBottleOnly] = useState(data.entry.type === 'bottle')\n  const [breastFeedingSource, setBreastFeedingSource] = useState(data.entry.source)\n  const [vitamin, setVitamin] = useState(data.entry.vitamin)\n  const [feedingDuration, setFeedingDuration] = useState(data.entry.feeding_duration)\n\n  const client = useApolloClient()\n\n  const updateEntry = useCallback(debounce(variables => {\n    return client.mutate({\n      mutation: UPDATE_ENTRY,\n      variables: {\n        id,\n        ...variables\n      },\n      update: (store) => {\n        updateGetEntriesCache(store, spaceId, (entries) => {\n          return entries.sort((e1, e2) => e2.time - e1.time)\n        })\n      }\n    })\n  }), [client, id])\n\n  const updateDate = (date) => {\n    setDate(date)\n    updateEntry({\n      time: Math.round(date.getTime() / 1000)\n    })\n  }\n\n  const getFeedingType = (extraFoodInput, isBottleOnlyInput) => {\n    if (extraFoodInput === 0) {\n      return 'breast'\n    }\n\n    return isBottleOnlyInput\n      ? 'bottle'\n      : 'mixed'\n  }\n\n  const updateExtraFood = (value) => {\n    setExtraFood(value)\n    setIsBottleOnly(true)\n\n    updateEntry({\n      extra_food: value,\n      type: getFeedingType(value, true)\n    })\n  }\n\n  const updateFeedingType = event => {\n    const { checked } = event.target\n    setIsBottleOnly(checked)\n\n    const entryType = getFeedingType(extraFood, checked)\n\n    updateEntry({\n      type: entryType\n    })\n  }\n\n  const updateVitamin = (event, newVitamin) => {\n    setVitamin(newVitamin === \"1\")\n\n    updateEntry({\n      vitamin: newVitamin === \"1\"\n    })\n  }\n\n  const breastFeedingSourceChanged = (source) => {\n    setBreastFeedingSource(source)\n  }\n\n  const classes = useStyles()\n\n  if (mutationData) {\n    return <Redirect to={SpacePage.path({id: spaceId})}/>\n  }\n\n  const updateFeedingDuration = (value) => {\n    setFeedingDuration(value)\n\n    updateEntry({\n      feeding_duration: value\n    })\n  }\n\n  const feedingSourceComponent = !isBottleOnly\n    ? <Grid item xs={12} md={12}>\n      <Paper className={classes.root}>\n        <FeedingSourceSelector\n          id={id}\n          breastFeedingSource={breastFeedingSource}\n          onChange={breastFeedingSourceChanged}\n        />\n      </Paper>\n    </Grid>\n    : null\n\n  const feedingDurationComponent = !isBottleOnly\n    ? <Grid item xs={12} md={12}>\n      <Paper className={classes.root}>\n        <Typography paragraph>\n          Feeding duration - {feedingDuration}min\n        </Typography>\n        <Slider\n          defaultValue={feedingDuration}\n          valueLabelDisplay=\"auto\"\n          step={1}\n          marks\n          min={0}\n          max={30}\n          onChange={(e, value) => updateFeedingDuration(value)}\n        />\n      </Paper>\n    </Grid>\n    : null\n\n  return (\n     <>\n       <header className=\"App-header\">\n         <Typography variant='h5'>\n           {formatTime(date)} {formatDay(date)}\n         </Typography>\n       </header>\n\n       <Container maxWidth=\"sm\">\n          <Grid container spacing={2} direction='row' justify='center'>\n            <Grid item xs={12} md={4}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Day\n                </Typography>\n\n                <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addDays(date, 1))}>\n                  <AddIcon />\n                </Fab>\n                <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subDays(date, 1))}>\n                  <RemoveIcon />\n                </Fab>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={4}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Hours\n                </Typography>\n\n                <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addHours(date, 1))}>\n                  <AddIcon />\n                </Fab>\n\n                <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subHours(date, 1))}>\n                  <RemoveIcon />\n                </Fab>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={4}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Minutes\n                </Typography>\n\n                <Fab color=\"primary\" aria-label=\"Add\" size='small' onClick={() => updateDate(addMinutes(date, 5))}>\n                  <AddIcon />\n                </Fab>\n\n                <Fab color=\"primary\" aria-label=\"Remove\" size='small' onClick={() => updateDate(subMinutes(date, 5))}>\n                  <RemoveIcon />\n                </Fab>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Extra food - {extraFood}ml\n                </Typography>\n\n                <Slider\n                  defaultValue={extraFood}\n                  valueLabelDisplay='off'\n                  step={5}\n                  min={0}\n                  max={150}\n                  onChange={(e, value) => updateExtraFood(value)}\n                />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={isBottleOnly}\n                      onChange={updateFeedingType}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Bottle only\"\n                />\n              </Paper>\n            </Grid>\n\n            {feedingSourceComponent}\n\n            {feedingDurationComponent}\n\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Got vitamin?\n                </Typography>\n\n                <ToggleButtonGroup value={vitamin ? \"1\" : \"0\"} exclusive onChange={updateVitamin}>\n                  <ToggleButton value=\"1\">Yes</ToggleButton>\n                  <ToggleButton value=\"0\">No</ToggleButton>\n                </ToggleButtonGroup>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.root}>\n                <Typography paragraph>\n                  Danger zone\n                </Typography>\n\n                <Button variant=\"contained\" color='secondary' onClick={removeEntry}>Delete</Button>\n              </Paper>\n            </Grid>\n          </Grid>\n       </Container>\n      </>\n  )\n}\n\nexport default EntryForm\n","import React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n  Container,\n  CircularProgress,\n  IconButton\n} from '@material-ui/core'\n\n\nimport { useQuery } from 'react-apollo-hooks'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Layout from './Layout'\nimport EntryForm from './EntryForm'\n\nimport { SpacePage } from '../routing'\n\nimport {\n  GET_ENTRY\n} from '../queries'\n\n\nfunction EntryPage({match}) {\n  const { id } = match.params\n\n  const { loading, data } = useQuery(GET_ENTRY, {variables: {id}})\n  const spaceId = data && data.entry.spaceId\n\n  const backButton = spaceId && (\n    <IconButton\n    edge='start'\n    color='inherit'\n    component={React.forwardRef((props, ref) => <RouterLink {...props} ref={ref} to={SpacePage.path({id: spaceId})}/>)}>\n      <ArrowBackIcon/>\n    </IconButton>\n  )\n\n  return (\n    <Layout toolbarIcon={backButton}>\n      {\n        loading ? <>\n          <header className=\"App-header\" />\n          <Container maxWidth=\"sm\">\n            <CircularProgress/>\n          </Container>\n        </>\n        : <EntryForm data={data} match={match} />\n      }\n    </Layout>\n  )\n}\n\nexport default EntryPage\n","import React from 'react'\n\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(5, 2),\n    },\n  }),\n)\n\nconst NotFound = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <header className=\"App-header\">\n        ERROR 404\n      </header>\n\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Typography variant='h5' paragraph>\n          NOT FOUND\n        </Typography>\n\n        <Typography variant='body'>\n          Go back to the <Link to='/' component={RouterLink}>homepage</Link>\n        </Typography>\n      </Container>\n    </>\n  )\n}\n\nexport default NotFound\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nconst ScrollToTop = ({ children, location: { pathname } }) => {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return children || null\n};\n\nexport default withRouter(ScrollToTop)\n","import {ApolloLink, Observable} from 'apollo-link'\n\nexport class AuthLink extends ApolloLink {\n  constructor(user,token) {\n    super()\n    this.token = token\n    this.user = user\n  }\n\n  setTokenHeader(operation) {\n    operation.setContext({ headers: { authorization: `Bearer ${this.token}` } })\n  }\n\n  refreshToken() {\n    return new Promise(resolve => {\n      this.user.reloadAuthResponse()\n        .then(res => {\n          this.token = res.id_token\n          resolve(true)\n        })\n    })\n  }\n\n  request(operation, forward) {\n    this.setTokenHeader(operation)\n\n    return new Observable(observer => {\n      let subscription, innerSubscription;\n      try {\n        subscription = forward(operation).subscribe({\n          next: observer.next.bind(observer),\n          complete: observer.complete.bind(observer),\n          error: networkError => {\n            if (networkError.statusCode === 400) {\n              this.refreshToken().then(success => {\n                if (success) {\n                  this.setTokenHeader(operation)\n                  innerSubscription = forward(operation).subscribe(observer)\n                } else {\n                  observer.error(new Error('refreshing token failed'))\n                }\n              });\n            } else {\n              observer.error(networkError)\n            }\n          },\n        });\n      } catch (e) {\n        observer.error(e)\n      }\n\n      return () => {\n        if (subscription) subscription.unsubscribe()\n        if (innerSubscription) innerSubscription.unsubscribe()\n      }\n    })\n  }\n}\n","import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { AuthLink } from './AuthLink'\n\nexport default function getClient(user) {\n  const httpLink = createHttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT || 'http://localhost:8080/food-time'})\n\n  const authLink = new AuthLink(user, user.tokenId)\n\n  return new ApolloClient({\n    cache: new InMemoryCache({\n      cacheRedirects: {\n        Query: {\n          entry: (_, args, { getCacheKey }) => getCacheKey({__typename: 'Entry', id: args.id})\n        },\n      },\n    }),\n    link: authLink.concat(httpLink)\n  })\n}\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n\nimport EntryList from './components/List'\nimport SpaceSelector from './components/SpaceSelector'\nimport SignInForm from './components/SignInForm'\nimport EntryPage from './components/EntryPage'\nimport NotFound from './components/NotFound'\nimport ScrollToTop from './components/ScrollToTop'\nimport ProfileContext from './ProfileContext'\nimport getClient from './client'\nimport './App.css'\nimport {HomePage, SelectPage, EditPage, SpacePage} from './routing'\n\nconst RememberSpace = ({match, write, children}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    write(id)\n  }, [write, id])\n\n  return children\n}\n\nfunction App({storage}) {\n  const storageKey = 'food-time-space-id'\n  const { read, write } = storage\n\n  const lastSpaceId = read(storageKey)\n\n  const [user, setUser] = useState(null)\n\n  return (\n    <ProfileContext.Provider value={user && user.profileObj}>\n      <div className='App'>\n        <HashRouter>\n          <ScrollToTop />\n\n          <Switch>\n            {\n              user ?\n                <ApolloProvider client={getClient(user)}>\n                  <Switch>\n\n                    <Route exact path={SelectPage.pattern} render={props => <SpaceSelector {...props} />} />\n                    <Route path={SpacePage.pattern} render={\n                      props =>\n                        <RememberSpace write={id => write(storageKey, id)} match={props.match}>\n                          <EntryList {...props} profile={user.profileObj} showNextEstimatedFeeding={false} />\n                        </RememberSpace>}\n                    />\n                    <Route path={EditPage.pattern} render={props => <EntryPage {...props} />} />\n\n                    <Route exact path={HomePage.pattern}>\n                      { lastSpaceId\n                        ? <Redirect to={SpacePage.path({id: lastSpaceId})}/>\n                        : <Redirect to={SelectPage.path()}/>\n                      }\n                    </Route>\n\n                  </Switch>\n              </ApolloProvider> :\n              <Route path={HomePage.pattern} render={props => <SignInForm {...props} onLogin={user => {\n                setUser(user)\n              }}/>} />\n            }\n            <Route component={NotFound} />\n          </Switch>\n        </HashRouter>\n      </div>\n    </ProfileContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst read = (key) => JSON.parse(window.localStorage.getItem(key))\nconst write = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\n\nReactDOM.render(<App storage={{read, write}}/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}